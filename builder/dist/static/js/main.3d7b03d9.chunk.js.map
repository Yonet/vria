{"version":3,"sources":["assets/img/vria-logo.png","assets/docs.md","actions/core/setCompiledConfig.js","../../src/functions/applyFilters.js","../../src/lib/super-hands/super-hands.js","../../src/utils/log.js","../../src/actions/actionTypes.js","../../src/actions/index.js","../../src/actions/core/visConfigCompiled.js","../../src/actions/core/filterData.js","../../src/actions/core/setCallbacks.js","../../src/actions/core/markSelected.js","../../src/actions/core/setSelection.js","../../src/actions/core/setFilters.js","../../src/actions/core/setAdditionalFilters.js","../../src/actions/core/setOptions.js","../../src/reducer/reducer.js","../../src/reducer/initialState.js","../../src/reducer/DispatchContext.js","../../src/grammar/parseDataset.js","../../src/grammar/validateVisConfig.js","../../src/grammar/compileVisConfig.js","../../src/components/core/Legend/GradientLegend.js","../../src/components/core/Legend/SymbolLegend.js","../../src/components/core/Legend/index.js","../../src/components/core/Axes/axes.js","../../src/components/core/Axes/index.js","../../src/components/core/AxisFilters/index.js","../../src/components/core/Marks/index.js","../../src/components/core/View/index.js","../../src/components/scene/Camera.js","../../src/components/scene/Controllers.js","../../src/components/scene/setSceneAttributes.js","../../src/index.js","actions/editor/runEditorConfig.js","actions/editor/clearBuilderStatus.js","actions/settings/updateSettings.js","actions/actionTypes.js","actions/index.js","reducer/reducer.js","reducer/initialState.js","reducer/DispatchContext.js","themes/index.js","components/AFrameScene/index.js","ui/Wrapper/index.js","ui/Header/Logo.js","ui/Header/index.js","ui/Main/index.js","ui/SplitPane/index.js","components/BuilderPanel/views/View.js","components/BuilderPanel/views/Docs.js","components/BuilderPanel/views/Builder.js","components/BuilderPanel/views/Editor.js","components/BuilderPanel/views/Data.js","components/BuilderPanel/views/Settings.js","examples/index.js","components/BuilderPanel/views/Examples.js","components/BuilderPanel/views/Download.js","components/BuilderPanel/views/index.js","components/BuilderPanel/BuilderMenu.js","components/BuilderPanel/BuilderStatus.js","components/BuilderPanel/index.js","components/GlobalStyle/index.js","VRIABuilder.js","index.js"],"names":["module","exports","setCompiledConfig","state","payload","compiledConfig","applyFilters","dataset","domainMap","filteredDataset","document","marks","el","row","filtersSatisfied","Object","field","f","n","i","e","u","a","Error","p","o","r","t","1","AFRAME","require","schema","colliderEvent","default","colliderEventProperty","colliderEndEvent","colliderEndEventProperty","grabStartButtons","grabEndButtons","stretchStartButtons","stretchEndButtons","dragDropStartButtons","dragDropEndButtons","interval","multiple","init","this","unHover","bind","unWatch","onHit","onGrabStartButton","onGrabEndButton","onStretchStartButton","onStretchEndButton","onDragDropStartButton","onDragDropEndButton","update","remove","get","tick","aDist","bDist","b","time","data","prevCheckTime","orderChanged","hoverElsIntersections","hoverEls","object","carried","Set","findTarget","hand","buttonEvent","evt","clickables","filter","h","gehClicking","has","grabbed","endEvt","emitCancelable","stretched","dragged","ddEvt","dropped","on","dropTarget","processHitEl","dist","intersection","sects","hoverNeedsUpdate","indexOf","hitEl","dragging","gehDragged","Array","sect","hover","hvrevt","hovered","hoverEl","clearedEls","_unHover","unHovered","_unWatch","hoverIndex","registerListeners","unRegisterListeners","bubbles","cancelable","detail","window","target","dispatchMouseEvent","mEvt","relatedTarget","dispatchMouseEventAll","els","eligibleEls","elIndex","promoteHoveredEl","distance","splice","2","buttonCore","onclick","type","start","end","startButtonOk","clickers","handIndex","endButtonOk","length","3","inherit","console","hoverStart","dragStart","hoverEnd","dragEnd","dragDrop","4","5","accepts","autoUpdate","acceptEvent","rejectEvent","mutateAccepts","childList","subtree","sceneEl","querySelectorAll","acceptableEntities","query","mutations","mutation","added","entityAcceptable","6","base","maxGrabbers","NaN","invert","suppressX","suppressY","suppressZ","x","y","z","THREE","lostGrabber","q","v","grabber","object3D","getWorldQuaternion","getWorldPosition","entityPosition","getAttribute","deltaPosition","grabAvailable","Number","grabbers","physicsStart","resetGrabber","objPos","grabPos","raycaster","distanceTo","physicsIsConstrained","7","hoverers","8","buttonList","startButtons","endButtons","buttonIsValid","9","usePhysics","physicsInit","physicsUpdate","constraints","physicsRemove","newConId","Math","physicsEnd","constraintId","physicsClear","physicsIsGrabbing","size","10","physicsUpdateRate","currentStretch","handPos","deltaStretch","previousStretch","previousPhysicsStretch","stretchers","includes","stretcherIndex","_updateBodies","stretchBody","physicsShape","offset","11","registerMe","superHands","comp","unregisterMe","index","msg","process","mode","VIS_CONFIG_COMPILED","FILTER_DATA","SET_CALLBACKS","MARK_SELECTED","SET_SELECTION","SET_FILTERS","SET_ADDITIONAL_FILTERS","SET_OPTIONS","parsedDataset","initialDomainMap","cloneDeep","scales","filteredDomain","log","bound","value","newDomainMap","Map","appCallback","selection","dataMap","setMarkData","selectedRow","key","tooltip","tooltipContent","clearSelection","additionalFilters","options","reducer","actionTypes","actions","values","DispatchContext","React","_moment","_transformRow","encodingMap","encoding","parseFloat","dfTimeUnit","defaults","timeUnit","timeUnits","Date","validateVisConfig","config","ajv","useDefaults","jsonPointers","validate","valid","compileVisConfig","validated","error","title","views","uniqueFields","view","channel","FILE_TYPE","SUPPORTED_FILE_TYPES","transformedDataset","d3","err","d","Promise","parseDataset","allScales","markType","markShape","markTooltip","shape","ranges","range","_getRanges","domains","domainsWithFields","channelFields","domain","_getDomains","scale","paddingInner","paddingOuter","_getScales","GradientLegend","posrot","zrot","background","primitive","width","height","color","opacity","position","minValue","min","side","anchor","align","maxValue","max","label","gradient","scheme","rotation","zpos","className","SymbolLegend","dispatch","useContext","legendHeight","legendYPos","labels","isChecked","topOffset","step","checked","checkbox","events","mouseenter","mouseleave","click","mark","radius","radius-top","radius-bottom","depth","customMarks","Legend","props","rangesMax","c","xpos","ypos","xrot","yrot","orient","xoffsetLeft","legendTitle","PropTypes","isRequired","prev","next","Axis","AxisLine","line","string","XAxis","ticks","showLabels","showTicks","tickValues","tickOffset","numberFormat","text","titlePadding","YAxis","ZAxis","Axes","generateTitle","axes","tickCount","xFace","yFace","zFace","fieldType","generateAxes","AxisFilters","mutualProps","faces","class","grabbable","XFilter","YFilter","ZFilter","Marks","vriaid","tooltipHeight","fields","content","markEvents","showTooltip","id","cursor","attributes","data-mark","JSON","segments-height","segments-width","initialColor","initialOpacity","segments-radial","wireframe","fTypes","quantField","xPos","yPos","zPos","prevProps","nextProps","isEqual","View","userHeight","xrotation","yrotation","legends","markProps","standardCamera","wasd-controls-enabled","capture-mouse","super-hands","visible","xOffset","lineHeight","vrCamera","mobileCamera","fuse","fuseTimeout","geometry","radiusInner","radiusOuter","material","shader","animation__fusing","animation__click","animation__mouseleave","camera","Controllers","handedness","laser-controls","setSceneAttributes","setTimeout","VRIA","rest","useReducer","useEffect","setSelection","setFilters","res","_ref","onSelection","onConfigParsed","onFilter","runEditorConfig","parseJson","editorConfig","stringify","builderStatus","message","sceneActive","clearBuilderStatus","updateSettings","theme","backgroundColor","environment","SET_COMPILED_CONFIG","RUN_EDITOR_CONFIG","CLEAR_BUILDER_STATUS","UPDATE_SETTINGS","version","multiSelect","selectColor","chartColor","createContext","dark","header","padding","borderColor","menu","border","highlight","main","logo","divider","builder","activeColor","inactiveColor","backgroundColorHover","borderShadow","borderHighlight","status","success","warning","info","light","registerComponent","Cache","clear","renderer","forceContextLoss","StyledScene","styled","Scene","SceneInactive","div","memo","embedded","deallocate","parse","preset","lightPosition","Wrapper","StyledLogo","css","LogoIcon","VRIALogo","LogoText","LogoVersion","span","Logo","StyledHeader","Menu","nav","MenuItem","Header","href","Main","StyledSplitPane","SplitPane","StyledDocs","Docs","useState","md","setmd","fetch","docs","then","plugins","gfm","children","StyledBuilder","DeleteButton","button","AddButton","StyledViewBuilder","ViewHeader","ViewBuilder","editorConfigJSON","viewArray","encodings","keys","undefined","hasMark","viewProps","availableChannels","availableTypes","availableFields","remainingChannels","onPosRotDimChange","persist","setEditorConfig","onClick","deleteView","forEach","vp","defaultValue","onChange","name","map","mt","colSpan","placeholder","enc","onChannelChange","ch","j","disabled","onFieldChange","fi","onTypeChange","ty","deleteChannel","DropDownBuilder","Builder","configHasDataset","setConfigHasDataset","viewTemplate","push","to","StyledEditor","StyledCodeEditor","CodeEditor","Editor","code","onValueChange","onEditorChange","languages","json","split","join","StyledData","InfoContainsDataset","CodeSnippet1","pre","getColor","isDragAccept","isDragReject","isDragActive","DropArea","FileUploader","currentFile","setCurrentFile","readError","setReadError","onDrop","useCallback","acceptedFiles","file","reader","FileReader","onabort","onerror","onload","result","readAsText","history","useHistory","useDropzone","accept","fileRejections","getRootProps","getInputProps","importDataset","str","out","isArray","isJSON","Papa","dynamicTyping","skipEmptyLines","files","path","toFixed","errors","Data","StyledSettings","availableEnvironments","Settings","settings","useDebouncedCallback","newSetting","callback","env","description","examples","cy_precip","cy_precip_h","cy_precip_tooltip","cy_precip_filters","iris","iris_tooltip","iris_filters","iris_shape","populations","populations_h","populations_tooltip","populations_filters","populations_shape","iris_3d","iris_3d_advanced","cars_linked","iris_linked","StyledExamples","Examples","example","StyledDownload","DownloadButton","Download","encodeURIComponent","download","StyledBuilderMenu","MenuLeft","MenuCentre","MenuRight","LinkButton","Link","location","ActionButton","ButtonIcon","ButtonText","ConfigTitle","BuilderMenu","running","useLocation","pathname","data-tooltip","StyledBuilderStatus","footer","statusType","StyledStatusIcon","StatusClearButton","StatusClear","StatusIcon","iconClass","StyledStatusMessage","StatusMessage","BuilderStatus","StyledBuilderPanel","BuilderPanel","setTitle","minSize","maxSize","onDragFinished","dispatchEvent","Event","defaultSize","exact","component","GlobalStyle","createGlobalStyle","VRIABuilder","initialState","Provider","themes","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3d7b03d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vria-logo.8ddb5242.png\";","module.exports = __webpack_public_path__ + \"static/media/docs.25eca600.md\";","const setCompiledConfig = (state, payload) => {\n  return {\n    ...state,\n    compiledConfig: payload\n  };\n};\n\nexport default setCompiledConfig;\n","/**\n * @name applyFilters\n * @description Applies domain filters to a dataset\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} dataset - Dataset to filter\n * @param {object} domainMap - All domains in this vis-config\n * @returns {object} Filtered dataset\n */\nfunction applyFilters(dataset, domainMap) {\n  const filteredDataset = [];\n\n  const marks = document.querySelectorAll('.vria-mark');\n\n  // Hide all marks\n  marks.forEach((el) => {\n    el.setAttribute('visible', false);\n    el.classList.remove('interactive');\n  });\n\n  // Loop over every row in the dataset\n  dataset.forEach((row) => {\n    let filtersSatisfied = true;\n\n    // For every field...\n    Object.keys(row).forEach((field) => {\n      // If a field has a filter associated with it...\n      if (domainMap.has(field)) {\n        // A domainMap domain is empty...\n        if (domainMap.get(field).length === 0) {\n          filtersSatisfied = false;\n        } else if (typeof domainMap.get(field)[0] === 'string') {\n          // For filters containing strings\n          // If the value of this field isn't in the filter array...\n          if (!domainMap.get(field).includes(row[field])) {\n            // Discard this row\n            filtersSatisfied = false;\n          }\n          // For filters containing numbers\n        } else {\n          if (\n            row[field] < domainMap.get(field)[0] ||\n            row[field] > domainMap.get(field)[1]\n          ) {\n            filtersSatisfied = false;\n          }\n        }\n      }\n    });\n\n    if (filtersSatisfied) {\n      filteredDataset.push(row);\n      document.querySelectorAll(`.vria-${row.vriaid}`).forEach((el) => {\n        el.setAttribute('visible', true);\n        el.classList.add('interactive');\n      });\n    }\n  });\n\n  return filteredDataset;\n}\n\nexport default applyFilters;\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"===typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"===typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\n/* global AFRAME */\n/* global THREE */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nrequire('./systems/super-hands-system.js');\nrequire('./reaction_components/hoverable.js');\nrequire('./reaction_components/grabbable.js');\nrequire('./reaction_components/stretchable.js');\nrequire('./reaction_components/drag-droppable.js');\nrequire('./reaction_components/draggable.js');\nrequire('./reaction_components/droppable.js');\nrequire('./reaction_components/clickable.js');\n\n/**\n * Super Hands component for A-Frame.\n */\nAFRAME.registerComponent('super-hands', {\n  schema: {\n    colliderEvent: { default: 'hit' },\n    colliderEventProperty: { default: 'el' },\n    colliderEndEvent: { default: 'hitend' },\n    colliderEndEventProperty: { default: 'el' },\n    grabStartButtons: {\n      default: ['gripdown', 'trackpaddown', 'triggerdown', 'gripclose', 'abuttondown', 'bbuttondown', 'xbuttondown', 'ybuttondown', 'pointup', 'thumbup', 'pointingstart', 'pistolstart', 'thumbstickdown', 'mousedown', 'touchstart']\n    },\n    grabEndButtons: {\n      default: ['gripup', 'trackpadup', 'triggerup', 'gripopen', 'abuttonup', 'bbuttonup', 'xbuttonup', 'ybuttonup', 'pointdown', 'thumbdown', 'pointingend', 'pistolend', 'thumbstickup', 'mouseup', 'touchend']\n    },\n    stretchStartButtons: {\n      default: ['gripdown', 'trackpaddown', 'triggerdown', 'gripclose', 'abuttondown', 'bbuttondown', 'xbuttondown', 'ybuttondown', 'pointup', 'thumbup', 'pointingstart', 'pistolstart', 'thumbstickdown', 'mousedown', 'touchstart']\n    },\n    stretchEndButtons: {\n      default: ['gripup', 'trackpadup', 'triggerup', 'gripopen', 'abuttonup', 'bbuttonup', 'xbuttonup', 'ybuttonup', 'pointdown', 'thumbdown', 'pointingend', 'pistolend', 'thumbstickup', 'mouseup', 'touchend']\n    },\n    dragDropStartButtons: {\n      default: ['gripdown', 'trackpaddown', 'triggerdown', 'gripclose', 'abuttondown', 'bbuttondown', 'xbuttondown', 'ybuttondown', 'pointup', 'thumbup', 'pointingstart', 'pistolstart', 'thumbstickdown', 'mousedown', 'touchstart']\n    },\n    dragDropEndButtons: {\n      default: ['gripup', 'trackpadup', 'triggerup', 'gripopen', 'abuttonup', 'bbuttonup', 'xbuttonup', 'ybuttonup', 'pointdown', 'thumbdown', 'pointingend', 'pistolend', 'thumbstickup', 'mouseup', 'touchend']\n    },\n    interval: { default: 0 }\n  },\n\n  /**\n   * Set if component needs multiple instancing.\n   */\n  multiple: false,\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    // constants\n    this.HOVER_EVENT = 'hover-start';\n    this.UNHOVER_EVENT = 'hover-end';\n    this.GRAB_EVENT = 'grab-start';\n    this.UNGRAB_EVENT = 'grab-end';\n    this.STRETCH_EVENT = 'stretch-start';\n    this.UNSTRETCH_EVENT = 'stretch-end';\n    this.DRAG_EVENT = 'drag-start';\n    this.UNDRAG_EVENT = 'drag-end';\n    this.DRAGOVER_EVENT = 'dragover-start';\n    this.UNDRAGOVER_EVENT = 'dragover-end';\n    this.DRAGDROP_EVENT = 'drag-drop';\n\n    // links to other systems/components\n    this.otherSuperHand = null;\n\n    // state tracking - global event handlers (GEH)\n    this.gehDragged = new Set();\n    this.gehClicking = new Set();\n\n    // state tracking - reaction components\n    this.hoverEls = [];\n    this.hoverElsIntersections = [];\n    this.prevCheckTime = null;\n    this.state = new Map();\n    this.dragging = false;\n\n    this.unHover = this.unHover.bind(this);\n    this.unWatch = this.unWatch.bind(this);\n    this.onHit = this.onHit.bind(this);\n    this.onGrabStartButton = this.onGrabStartButton.bind(this);\n    this.onGrabEndButton = this.onGrabEndButton.bind(this);\n    this.onStretchStartButton = this.onStretchStartButton.bind(this);\n    this.onStretchEndButton = this.onStretchEndButton.bind(this);\n    this.onDragDropStartButton = this.onDragDropStartButton.bind(this);\n    this.onDragDropEndButton = this.onDragDropEndButton.bind(this);\n    this.system.registerMe(this);\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function (oldData) {\n    this.unRegisterListeners(oldData);\n    this.registerListeners();\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () {\n    this.system.unregisterMe(this);\n    this.unRegisterListeners();\n    this.hoverEls.length = 0;\n    if (this.state.get(this.HOVER_EVENT)) {\n      this._unHover(this.state.get(this.HOVER_EVENT));\n    }\n    this.onGrabEndButton();\n    this.onStretchEndButton();\n    this.onDragDropEndButton();\n  },\n  tick: function () {\n    // closer objects and objects with no distance come later in list\n    function sorter(a, b) {\n      const aDist = a.distance === null ? -1 : a.distance;\n      const bDist = b.distance === null ? -1 : b.distance;\n      if (aDist < bDist) {\n        return 1;\n      }\n      if (bDist < aDist) {\n        return -1;\n      }\n      return 0;\n    }\n    return function (time) {\n      const data = this.data;\n      const prevCheckTime = this.prevCheckTime;\n      if (prevCheckTime && time - prevCheckTime < data.interval) {\n        return;\n      }\n      this.prevCheckTime = time;\n\n      let orderChanged = false;\n      this.hoverElsIntersections.sort(sorter);\n      for (let i = 0; i < this.hoverElsIntersections.length; i++) {\n        if (this.hoverEls[i] !== this.hoverElsIntersections[i].object.el) {\n          orderChanged = true;\n          this.hoverEls[i] = this.hoverElsIntersections[i].object.el;\n        }\n      }\n      if (orderChanged) {\n        this.hover();\n      }\n    };\n  }(),\n  onGrabStartButton: function (evt) {\n    let carried = this.state.get(this.GRAB_EVENT);\n    this.dispatchMouseEventAll('mousedown', this.el);\n    this.gehClicking = new Set(this.hoverEls);\n    if (!carried) {\n      carried = this.findTarget(this.GRAB_EVENT, {\n        hand: this.el,\n        buttonEvent: evt\n      });\n      if (carried) {\n        this.state.set(this.GRAB_EVENT, carried);\n        this._unHover(carried);\n      }\n    }\n  },\n  onGrabEndButton: function (evt) {\n    const clickables = this.hoverEls.filter(h => this.gehClicking.has(h));\n    const grabbed = this.state.get(this.GRAB_EVENT);\n    const endEvt = { hand: this.el, buttonEvent: evt };\n    this.dispatchMouseEventAll('mouseup', this.el);\n    for (let i = 0; i < clickables.length; i++) {\n      this.dispatchMouseEvent(clickables[i], 'click', this.el);\n    }\n    this.gehClicking.clear();\n    // check if grabbed entity accepts ungrab event\n    if (grabbed && !this.emitCancelable(grabbed, this.UNGRAB_EVENT, endEvt)) {\n      /* push to top of stack so a drop followed by re-grab gets the same\n         target */\n      this.promoteHoveredEl(this.state.get(this.GRAB_EVENT));\n      this.state.delete(this.GRAB_EVENT);\n      this.hover();\n    }\n  },\n  onStretchStartButton: function (evt) {\n    let stretched = this.state.get(this.STRETCH_EVENT);\n    if (!stretched) {\n      stretched = this.findTarget(this.STRETCH_EVENT, {\n        hand: this.el,\n        buttonEvent: evt\n      });\n      if (stretched) {\n        this.state.set(this.STRETCH_EVENT, stretched);\n        this._unHover(stretched);\n      }\n    }\n  },\n  onStretchEndButton: function (evt) {\n    const stretched = this.state.get(this.STRETCH_EVENT);\n    const endEvt = { hand: this.el, buttonEvent: evt\n      // check if end event accepted\n    };if (stretched && !this.emitCancelable(stretched, this.UNSTRETCH_EVENT, endEvt)) {\n      this.promoteHoveredEl(stretched);\n      this.state.delete(this.STRETCH_EVENT);\n      this.hover();\n    }\n  },\n  onDragDropStartButton: function (evt) {\n    let dragged = this.state.get(this.DRAG_EVENT);\n    this.dragging = true;\n    if (this.hoverEls.length) {\n      this.gehDragged = new Set(this.hoverEls);\n      this.dispatchMouseEventAll('dragstart', this.el);\n    }\n    if (!dragged) {\n      /* prefer carried so that a drag started after a grab will work\n       with carried element rather than a currently intersected drop target.\n       fall back to queue in case a drag is initiated independent\n       of a grab */\n      if (this.state.get(this.GRAB_EVENT) && !this.emitCancelable(this.state.get(this.GRAB_EVENT), this.DRAG_EVENT, { hand: this.el, buttonEvent: evt })) {\n        dragged = this.state.get(this.GRAB_EVENT);\n      } else {\n        dragged = this.findTarget(this.DRAG_EVENT, {\n          hand: this.el,\n          buttonEvent: evt\n        });\n      }\n      if (dragged) {\n        this.state.set(this.DRAG_EVENT, dragged);\n        this._unHover(dragged);\n      }\n    }\n  },\n  onDragDropEndButton: function (evt) {\n    const carried = this.state.get(this.DRAG_EVENT);\n    this.dragging = false; // keep _unHover() from activating another droptarget\n    this.gehDragged.forEach(carried => {\n      this.dispatchMouseEvent(carried, 'dragend', this.el);\n      // fire event both ways for all intersected targets\n      this.dispatchMouseEventAll('drop', carried, true, true);\n      this.dispatchMouseEventAll('dragleave', carried, true, true);\n    });\n    this.gehDragged.clear();\n    if (carried) {\n      const ddEvt = {\n        hand: this.el,\n        dropped: carried,\n        on: null,\n        buttonEvent: evt\n      };\n      const endEvt = { hand: this.el, buttonEvent: evt };\n      const dropTarget = this.findTarget(this.DRAGDROP_EVENT, ddEvt, true);\n      if (dropTarget) {\n        ddEvt.on = dropTarget;\n        this.emitCancelable(carried, this.DRAGDROP_EVENT, ddEvt);\n        this._unHover(dropTarget);\n      }\n      // check if end event accepted\n      if (!this.emitCancelable(carried, this.UNDRAG_EVENT, endEvt)) {\n        this.promoteHoveredEl(carried);\n        this.state.delete(this.DRAG_EVENT);\n        this.hover();\n      }\n    }\n  },\n  processHitEl: function (hitEl, intersection) {\n    const dist = intersection && intersection.distance;\n    const sects = this.hoverElsIntersections;\n    const hoverEls = this.hoverEls;\n    const hitElIndex = this.hoverEls.indexOf(hitEl);\n    let hoverNeedsUpdate = false;\n    if (hitElIndex === -1) {\n      hoverNeedsUpdate = true;\n      // insert in order of distance when available\n      if (dist != null) {\n        let i = 0;\n        while (i < sects.length && dist < sects[i].distance) {\n          i++;\n        }\n        hoverEls.splice(i, 0, hitEl);\n        sects.splice(i, 0, intersection);\n      } else {\n        hoverEls.push(hitEl);\n        sects.push({ object: { el: hitEl } });\n      }\n      this.dispatchMouseEvent(hitEl, 'mouseover', this.el);\n      if (this.dragging && this.gehDragged.size) {\n        // events on targets and on dragged\n        this.gehDragged.forEach(dragged => {\n          this.dispatchMouseEventAll('dragenter', dragged, true, true);\n        });\n      }\n    }\n    return hoverNeedsUpdate;\n  },\n  onHit: function (evt) {\n    const hitEl = evt.detail[this.data.colliderEventProperty];\n    let hoverNeedsUpdate = 0;\n    if (!hitEl) {\n      return;\n    }\n    if (Array.isArray(hitEl)) {\n      for (let i = 0, sect; i < hitEl.length; i++) {\n        sect = evt.detail.intersections && evt.detail.intersections[i];\n        hoverNeedsUpdate += this.processHitEl(hitEl[i], sect);\n      }\n    } else {\n      hoverNeedsUpdate += this.processHitEl(hitEl, null);\n    }\n    if (hoverNeedsUpdate) {\n      this.hover();\n    }\n  },\n  /* search collided entities for target to hover/dragover */\n  hover: function () {\n    var hvrevt, hoverEl;\n    // end previous hover\n    if (this.state.has(this.HOVER_EVENT)) {\n      this._unHover(this.state.get(this.HOVER_EVENT), true);\n    }\n    if (this.state.has(this.DRAGOVER_EVENT)) {\n      this._unHover(this.state.get(this.DRAGOVER_EVENT), true);\n    }\n    if (this.dragging && this.state.get(this.DRAG_EVENT)) {\n      hvrevt = {\n        hand: this.el,\n        hovered: hoverEl,\n        carried: this.state.get(this.DRAG_EVENT)\n      };\n      hoverEl = this.findTarget(this.DRAGOVER_EVENT, hvrevt, true);\n      if (hoverEl) {\n        this.emitCancelable(this.state.get(this.DRAG_EVENT), this.DRAGOVER_EVENT, hvrevt);\n        this.state.set(this.DRAGOVER_EVENT, hoverEl);\n      }\n    }\n    // fallback to hover if not dragging or dragover wasn't successful\n    if (!this.state.has(this.DRAGOVER_EVENT)) {\n      hoverEl = this.findTarget(this.HOVER_EVENT, { hand: this.el }, true);\n      if (hoverEl) {\n        this.state.set(this.HOVER_EVENT, hoverEl);\n      }\n    }\n  },\n  /* called when controller moves out of collision range of entity */\n  unHover: function (evt) {\n    const clearedEls = evt.detail[this.data.colliderEndEventProperty];\n    if (clearedEls) {\n      if (Array.isArray(clearedEls)) {\n        clearedEls.forEach(el => this._unHover(el));\n      } else {\n        this._unHover(clearedEls);\n      }\n    }\n  },\n  /* inner unHover steps needed regardless of cause of unHover */\n  _unHover: function (el, skipNextHover) {\n    let unHovered = false;\n    let evt;\n    if (el === this.state.get(this.DRAGOVER_EVENT)) {\n      this.state.delete(this.DRAGOVER_EVENT);\n      unHovered = true;\n      evt = {\n        hand: this.el,\n        hovered: el,\n        carried: this.state.get(this.DRAG_EVENT)\n      };\n      this.emitCancelable(el, this.UNDRAGOVER_EVENT, evt);\n      if (this.state.has(this.DRAG_EVENT)) {\n        this.emitCancelable(this.state.get(this.DRAG_EVENT), this.UNDRAGOVER_EVENT, evt);\n      }\n    }\n    if (el === this.state.get(this.HOVER_EVENT)) {\n      this.state.delete(this.HOVER_EVENT);\n      unHovered = true;\n      this.emitCancelable(el, this.UNHOVER_EVENT, { hand: this.el });\n    }\n    // activate next target, if present\n    if (unHovered && !skipNextHover) {\n      this.hover();\n    }\n  },\n  unWatch: function (evt) {\n    const clearedEls = evt.detail[this.data.colliderEndEventProperty];\n    if (clearedEls) {\n      if (Array.isArray(clearedEls)) {\n        clearedEls.forEach(el => this._unWatch(el));\n      } else {\n        // deprecation path: sphere-collider\n        this._unWatch(clearedEls);\n      }\n    }\n  },\n  _unWatch: function (target) {\n    var hoverIndex = this.hoverEls.indexOf(target);\n    if (hoverIndex !== -1) {\n      this.hoverEls.splice(hoverIndex, 1);\n      this.hoverElsIntersections.splice(hoverIndex, 1);\n    }\n    this.gehDragged.forEach(dragged => {\n      this.dispatchMouseEvent(target, 'dragleave', dragged);\n      this.dispatchMouseEvent(dragged, 'dragleave', target);\n    });\n    this.dispatchMouseEvent(target, 'mouseout', this.el);\n  },\n  registerListeners: function () {\n    this.el.addEventListener(this.data.colliderEvent, this.onHit);\n    this.el.addEventListener(this.data.colliderEndEvent, this.unWatch);\n    this.el.addEventListener(this.data.colliderEndEvent, this.unHover);\n\n    // binding order to keep grabEnd from triggering dragover\n    // again before dragDropEnd can delete its carried state\n    this.data.grabStartButtons.forEach(b => {\n      this.el.addEventListener(b, this.onGrabStartButton);\n    });\n    this.data.stretchStartButtons.forEach(b => {\n      this.el.addEventListener(b, this.onStretchStartButton);\n    });\n    this.data.dragDropStartButtons.forEach(b => {\n      this.el.addEventListener(b, this.onDragDropStartButton);\n    });\n    this.data.dragDropEndButtons.forEach(b => {\n      this.el.addEventListener(b, this.onDragDropEndButton);\n    });\n    this.data.stretchEndButtons.forEach(b => {\n      this.el.addEventListener(b, this.onStretchEndButton);\n    });\n    this.data.grabEndButtons.forEach(b => {\n      this.el.addEventListener(b, this.onGrabEndButton);\n    });\n  },\n  unRegisterListeners: function (data) {\n    data = data || this.data;\n    if (Object.keys(data).length === 0) {\n      // Empty object passed on initalization\n      return;\n    }\n    this.el.removeEventListener(data.colliderEvent, this.onHit);\n    this.el.removeEventListener(data.colliderEndEvent, this.unHover);\n    this.el.removeEventListener(data.colliderEndEvent, this.unWatch);\n\n    data.grabStartButtons.forEach(b => {\n      this.el.removeEventListener(b, this.onGrabStartButton);\n    });\n    data.grabEndButtons.forEach(b => {\n      this.el.removeEventListener(b, this.onGrabEndButton);\n    });\n    data.stretchStartButtons.forEach(b => {\n      this.el.removeEventListener(b, this.onStretchStartButton);\n    });\n    data.stretchEndButtons.forEach(b => {\n      this.el.removeEventListener(b, this.onStretchEndButton);\n    });\n    data.dragDropStartButtons.forEach(b => {\n      this.el.removeEventListener(b, this.onDragDropStartButton);\n    });\n    data.dragDropEndButtons.forEach(b => {\n      this.el.removeEventListener(b, this.onDragDropEndButton);\n    });\n  },\n  emitCancelable: function (target, name, detail) {\n    var data, evt;\n    detail = detail || {};\n    data = { bubbles: true, cancelable: true, detail: detail };\n    data.detail.target = data.detail.target || target;\n    evt = new window.CustomEvent(name, data);\n    return target.dispatchEvent(evt);\n  },\n  dispatchMouseEvent: function (target, name, relatedTarget) {\n    var mEvt = new window.MouseEvent(name, { relatedTarget: relatedTarget });\n    target.dispatchEvent(mEvt);\n  },\n  dispatchMouseEventAll: function (name, relatedTarget, filterUsed, alsoReverse) {\n    let els = this.hoverEls;\n    if (filterUsed) {\n      els = els.filter(el => el !== this.state.get(this.GRAB_EVENT) && el !== this.state.get(this.DRAG_EVENT) && el !== this.state.get(this.STRETCH_EVENT) && !this.gehDragged.has(el));\n    }\n    if (alsoReverse) {\n      for (let i = 0; i < els.length; i++) {\n        this.dispatchMouseEvent(els[i], name, relatedTarget);\n        this.dispatchMouseEvent(relatedTarget, name, els[i]);\n      }\n    } else {\n      for (let i = 0; i < els.length; i++) {\n        this.dispatchMouseEvent(els[i], name, relatedTarget);\n      }\n    }\n  },\n  findTarget: function (evType, detail, filterUsed) {\n    var elIndex;\n    var eligibleEls = this.hoverEls;\n    if (filterUsed) {\n      eligibleEls = eligibleEls.filter(el => el !== this.state.get(this.GRAB_EVENT) && el !== this.state.get(this.DRAG_EVENT) && el !== this.state.get(this.STRETCH_EVENT));\n    }\n    for (elIndex = eligibleEls.length - 1; elIndex >= 0; elIndex--) {\n      if (!this.emitCancelable(eligibleEls[elIndex], evType, detail)) {\n        return eligibleEls[elIndex];\n      }\n    }\n    return null;\n  },\n  // Helper to ensure dropping and regrabbing finds the same target for\n  // for order-sorted hoverEls (grabbing; no-op for distance-sorted (pointing)\n  promoteHoveredEl: function (el) {\n    var hoverIndex = this.hoverEls.indexOf(el);\n    if (hoverIndex !== -1 && this.hoverElsIntersections[hoverIndex].distance === null) {\n      this.hoverEls.splice(hoverIndex, 1);\n      const sect = this.hoverElsIntersections.splice(hoverIndex, 1);\n      this.hoverEls.push(el);\n      this.hoverElsIntersections.push(sect[0]);\n    }\n  }\n});\n\n},{\"./reaction_components/clickable.js\":2,\"./reaction_components/drag-droppable.js\":3,\"./reaction_components/draggable.js\":4,\"./reaction_components/droppable.js\":5,\"./reaction_components/grabbable.js\":6,\"./reaction_components/hoverable.js\":7,\"./reaction_components/stretchable.js\":10,\"./systems/super-hands-system.js\":11}],2:[function(require,module,exports){\n\n/* global AFRAME */\nconst buttonCore = require('./prototypes/buttons-proto.js');\nAFRAME.registerComponent('clickable', AFRAME.utils.extendDeep({}, buttonCore, {\n  schema: {\n    onclick: { type: 'string' }\n  },\n  init: function () {\n    this.CLICKED_STATE = 'clicked';\n    this.CLICK_EVENT = 'grab-start';\n    this.UNCLICK_EVENT = 'grab-end';\n    this.clickers = [];\n\n    this.start = this.start.bind(this);\n    this.end = this.end.bind(this);\n    this.el.addEventListener(this.CLICK_EVENT, this.start);\n    this.el.addEventListener(this.UNCLICK_EVENT, this.end);\n  },\n  remove: function () {\n    this.el.removeEventListener(this.CLICK_EVENT, this.start);\n    this.el.removeEventListener(this.UNCLICK_EVENT, this.end);\n  },\n  start: function (evt) {\n    if (evt.defaultPrevented || !this.startButtonOk(evt)) {\n      return;\n    }\n    this.el.addState(this.CLICKED_STATE);\n    if (this.clickers.indexOf(evt.detail.hand) === -1) {\n      this.clickers.push(evt.detail.hand);\n      if (evt.preventDefault) {\n        evt.preventDefault();\n      }\n    }\n  },\n  end: function (evt) {\n    const handIndex = this.clickers.indexOf(evt.detail.hand);\n    if (evt.defaultPrevented || !this.endButtonOk(evt)) {\n      return;\n    }\n    if (handIndex !== -1) {\n      this.clickers.splice(handIndex, 1);\n    }\n    if (this.clickers.length < 1) {\n      this.el.removeState(this.CLICKED_STATE);\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  }\n}));\n\n},{\"./prototypes/buttons-proto.js\":8}],3:[function(require,module,exports){\n\n/* global AFRAME */\nconst inherit = AFRAME.utils.extendDeep;\nconst buttonCore = require('./prototypes/buttons-proto.js');\n\nAFRAME.registerComponent('drag-droppable', inherit({}, buttonCore, {\n  init: function () {\n    console.warn('Warning: drag-droppable is deprecated. Use draggable and droppable components instead');\n    this.HOVERED_STATE = 'dragover';\n    this.DRAGGED_STATE = 'dragged';\n    this.HOVER_EVENT = 'dragover-start';\n    this.UNHOVER_EVENT = 'dragover-end';\n    this.DRAG_EVENT = 'drag-start';\n    this.UNDRAG_EVENT = 'drag-end';\n    this.DRAGDROP_EVENT = 'drag-drop';\n\n    this.hoverStart = this.hoverStart.bind(this);\n    this.dragStart = this.dragStart.bind(this);\n    this.hoverEnd = this.hoverEnd.bind(this);\n    this.dragEnd = this.dragEnd.bind(this);\n    this.dragDrop = this.dragDrop.bind(this);\n\n    this.el.addEventListener(this.HOVER_EVENT, this.hoverStart);\n    this.el.addEventListener(this.DRAG_EVENT, this.dragStart);\n    this.el.addEventListener(this.UNHOVER_EVENT, this.hoverEnd);\n    this.el.addEventListener(this.UNDRAG_EVENT, this.dragEnd);\n    this.el.addEventListener(this.DRAGDROP_EVENT, this.dragDrop);\n  },\n  remove: function () {\n    this.el.removeEventListener(this.HOVER_EVENT, this.hoverStart);\n    this.el.removeEventListener(this.DRAG_EVENT, this.dragStart);\n    this.el.removeEventListener(this.UNHOVER_EVENT, this.hoverEnd);\n    this.el.removeEventListener(this.UNDRAG_EVENT, this.dragEnd);\n    this.el.removeEventListener(this.DRAGDROP_EVENT, this.dragDrop);\n  },\n  hoverStart: function (evt) {\n    this.el.addState(this.HOVERED_STATE);\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  dragStart: function (evt) {\n    if (!this.startButtonOk(evt)) {\n      return;\n    }\n    this.el.addState(this.DRAGGED_STATE);\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  hoverEnd: function (evt) {\n    this.el.removeState(this.HOVERED_STATE);\n  },\n  dragEnd: function (evt) {\n    if (!this.endButtonOk(evt)) {\n      return;\n    }\n    this.el.removeState(this.DRAGGED_STATE);\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  dragDrop: function (evt) {\n    if (!this.endButtonOk(evt)) {\n      return;\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  }\n}));\n\n},{\"./prototypes/buttons-proto.js\":8}],4:[function(require,module,exports){\n\n/* global AFRAME */\nconst inherit = AFRAME.utils.extendDeep;\nconst buttonCore = require('./prototypes/buttons-proto.js');\n\nAFRAME.registerComponent('draggable', inherit({}, buttonCore, {\n  init: function () {\n    this.DRAGGED_STATE = 'dragged';\n    this.DRAG_EVENT = 'drag-start';\n    this.UNDRAG_EVENT = 'drag-end';\n\n    this.dragStartBound = this.dragStart.bind(this);\n    this.dragEndBound = this.dragEnd.bind(this);\n\n    this.el.addEventListener(this.DRAG_EVENT, this.dragStartBound);\n    this.el.addEventListener(this.UNDRAG_EVENT, this.dragEndBound);\n  },\n  remove: function () {\n    this.el.removeEventListener(this.DRAG_EVENT, this.dragStart);\n    this.el.removeEventListener(this.UNDRAG_EVENT, this.dragEnd);\n  },\n  dragStart: function (evt) {\n    if (evt.defaultPrevented || !this.startButtonOk(evt)) {\n      return;\n    }\n    this.el.addState(this.DRAGGED_STATE);\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  dragEnd: function (evt) {\n    if (evt.defaultPrevented || !this.endButtonOk(evt)) {\n      return;\n    }\n    this.el.removeState(this.DRAGGED_STATE);\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  }\n}));\n\n},{\"./prototypes/buttons-proto.js\":8}],5:[function(require,module,exports){\n\n/* global AFRAME */\nfunction elementMatches(el, selector) {\n  if (el.matches) {\n    return el.matches(selector);\n  }\n  if (el.msMatchesSelector) {\n    return el.msMatchesSelector(selector);\n  }\n  if (el.webkitMatchesSelector) {\n    return el.webkitMatchesSelector(selector);\n  }\n}\nAFRAME.registerComponent('droppable', {\n  schema: {\n    accepts: { default: '' },\n    autoUpdate: { default: true },\n    acceptEvent: { default: '' },\n    rejectEvent: { default: '' }\n  },\n  multiple: true,\n  init: function () {\n    this.HOVERED_STATE = 'dragover';\n    this.HOVER_EVENT = 'dragover-start';\n    this.UNHOVER_EVENT = 'dragover-end';\n    this.DRAGDROP_EVENT = 'drag-drop';\n\n    // better for Sinon spying if original method not overwritten\n    this.hoverStartBound = this.hoverStart.bind(this);\n    this.hoverEndBound = this.hoverEnd.bind(this);\n    this.dragDropBound = this.dragDrop.bind(this);\n    this.mutateAcceptsBound = this.mutateAccepts.bind(this);\n\n    this.acceptableEntities = [];\n    this.observer = new window.MutationObserver(this.mutateAcceptsBound);\n    this.observerOpts = { childList: true, subtree: true };\n\n    this.el.addEventListener(this.HOVER_EVENT, this.hoverStartBound);\n    this.el.addEventListener(this.UNHOVER_EVENT, this.hoverEndBound);\n    this.el.addEventListener(this.DRAGDROP_EVENT, this.dragDropBound);\n  },\n  update: function () {\n    if (this.data.accepts.length) {\n      this.acceptableEntities = Array.prototype.slice.call(this.el.sceneEl.querySelectorAll(this.data.accepts));\n    } else {\n      this.acceptableEntities = null;\n    }\n    if (this.data.autoUpdate && this.acceptableEntities != null) {\n      this.observer.observe(this.el.sceneEl, this.observerOpts);\n    } else {\n      this.observer.disconnect();\n    }\n  },\n  remove: function () {\n    this.el.removeEventListener(this.HOVER_EVENT, this.hoverStartBound);\n    this.el.removeEventListener(this.UNHOVER_EVENT, this.hoverEndBound);\n    this.el.removeEventListener(this.DRAGDROP_EVENT, this.dragDropBound);\n    this.observer.disconnect();\n  },\n  mutateAccepts: function (mutations) {\n    const query = this.data.accepts;\n    mutations.forEach(mutation => {\n      mutation.addedNodes.forEach(added => {\n        if (elementMatches(added, query)) {\n          this.acceptableEntities.push(added);\n        }\n      });\n    });\n  },\n  entityAcceptable: function (entity) {\n    const acceptableEntities = this.acceptableEntities;\n    if (acceptableEntities === null) {\n      return true;\n    }\n    for (let item of acceptableEntities) {\n      if (item === entity) {\n        return true;\n      }\n    }\n    return false;\n  },\n  hoverStart: function (evt) {\n    if (evt.defaultPrevented || !this.entityAcceptable(evt.detail.carried)) {\n      return;\n    }\n    this.el.addState(this.HOVERED_STATE);\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  hoverEnd: function (evt) {\n    if (evt.defaultPrevented) {\n      return;\n    }\n    this.el.removeState(this.HOVERED_STATE);\n  },\n  dragDrop: function (evt) {\n    if (evt.defaultPrevented) {\n      return;\n    }\n    const dropped = evt.detail.dropped;\n    if (!this.entityAcceptable(dropped)) {\n      if (this.data.rejectEvent.length) {\n        this.el.emit(this.data.rejectEvent, { el: dropped });\n      }\n      return;\n    }\n    if (this.data.acceptEvent.length) {\n      this.el.emit(this.data.acceptEvent, { el: dropped });\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  }\n});\n\n},{}],6:[function(require,module,exports){\n\n/* global AFRAME, THREE */\nconst inherit = AFRAME.utils.extendDeep;\nconst physicsCore = require('./prototypes/physics-grab-proto.js');\nconst buttonsCore = require('./prototypes/buttons-proto.js');\n// new object with all core modules\nconst base = inherit({}, physicsCore, buttonsCore);\nAFRAME.registerComponent('grabbable', inherit(base, {\n  schema: {\n    maxGrabbers: { type: 'int', default: NaN },\n    invert: { default: false },\n    suppressX: { default: false },\n    suppressY: { default: false },\n    suppressZ: { default: false }\n  },\n  init: function () {\n    this.GRABBED_STATE = 'grabbed';\n    this.GRAB_EVENT = 'grab-start';\n    this.UNGRAB_EVENT = 'grab-end';\n    this.grabbed = false;\n    this.grabbers = [];\n    this.constraints = new Map();\n    this.deltaPositionIsValid = false;\n    this.grabDistance = undefined;\n    this.grabDirection = { x: 0, y: 0, z: -1 };\n    this.grabOffset = { x: 0, y: 0, z: 0\n      // persistent object speeds up repeat setAttribute calls\n    };this.destPosition = { x: 0, y: 0, z: 0 };\n    this.deltaPosition = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n    this.physicsInit();\n\n    this.el.addEventListener(this.GRAB_EVENT, e => this.start(e));\n    this.el.addEventListener(this.UNGRAB_EVENT, e => this.end(e));\n    this.el.addEventListener('mouseout', e => this.lostGrabber(e));\n  },\n  update: function () {\n    this.physicsUpdate();\n    this.xFactor = (this.data.invert ? -1 : 1) * !this.data.suppressX;\n    this.yFactor = (this.data.invert ? -1 : 1) * !this.data.suppressY;\n    this.zFactor = (this.data.invert ? -1 : 1) * !this.data.suppressZ;\n  },\n  tick: function () {\n    var q = new THREE.Quaternion();\n    var v = new THREE.Vector3();\n\n    return function () {\n      var entityPosition;\n      if (this.grabber) {\n        // reflect on z-axis to point in same direction as the laser\n        this.targetPosition.copy(this.grabDirection);\n        this.targetPosition.applyQuaternion(this.grabber.object3D.getWorldQuaternion(q)).setLength(this.grabDistance).add(this.grabber.object3D.getWorldPosition(v)).add(this.grabOffset);\n        if (this.deltaPositionIsValid) {\n          // relative position changes work better with nested entities\n          this.deltaPosition.sub(this.targetPosition);\n          entityPosition = this.el.getAttribute('position');\n          this.destPosition.x = entityPosition.x - this.deltaPosition.x * this.xFactor;\n          this.destPosition.y = entityPosition.y - this.deltaPosition.y * this.yFactor;\n          this.destPosition.z = entityPosition.z - this.deltaPosition.z * this.zFactor;\n          this.el.setAttribute('position', this.destPosition);\n        } else {\n          this.deltaPositionIsValid = true;\n        }\n        this.deltaPosition.copy(this.targetPosition);\n      }\n    };\n  }(),\n  remove: function () {\n    this.el.removeEventListener(this.GRAB_EVENT, this.start);\n    this.el.removeEventListener(this.UNGRAB_EVENT, this.end);\n    this.physicsRemove();\n  },\n  start: function (evt) {\n    if (evt.defaultPrevented || !this.startButtonOk(evt)) {\n      return;\n    }\n    // room for more grabbers?\n    const grabAvailable = !Number.isFinite(this.data.maxGrabbers) || this.grabbers.length < this.data.maxGrabbers;\n\n    if (this.grabbers.indexOf(evt.detail.hand) === -1 && grabAvailable) {\n      if (!evt.detail.hand.object3D) {\n        console.warn('grabbable entities must have an object3D');\n        return;\n      }\n      this.grabbers.push(evt.detail.hand);\n      // initiate physics if available, otherwise manual\n      if (!this.physicsStart(evt) && !this.grabber) {\n        this.grabber = evt.detail.hand;\n        this.resetGrabber();\n      }\n      // notify super-hands that the gesture was accepted\n      if (evt.preventDefault) {\n        evt.preventDefault();\n      }\n      this.grabbed = true;\n      this.el.addState(this.GRABBED_STATE);\n    }\n  },\n  end: function (evt) {\n    const handIndex = this.grabbers.indexOf(evt.detail.hand);\n    if (evt.defaultPrevented || !this.endButtonOk(evt)) {\n      return;\n    }\n    if (handIndex !== -1) {\n      this.grabbers.splice(handIndex, 1);\n      this.grabber = this.grabbers[0];\n    }\n    this.physicsEnd(evt);\n    if (!this.resetGrabber()) {\n      this.grabbed = false;\n      this.el.removeState(this.GRABBED_STATE);\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  resetGrabber: function () {\n    var objPos = new THREE.Vector3();\n    var grabPos = new THREE.Vector3();\n    return function () {\n      let raycaster;\n      if (!this.grabber) {\n        return false;\n      }\n      raycaster = this.grabber.getAttribute('raycaster');\n      this.deltaPositionIsValid = false;\n      this.grabDistance = this.el.object3D.getWorldPosition(objPos).distanceTo(this.grabber.object3D.getWorldPosition(grabPos));\n      if (raycaster) {\n        this.grabDirection = raycaster.direction;\n        this.grabOffset = raycaster.origin;\n      }\n      return true;\n    };\n  }(),\n  lostGrabber: function (evt) {\n    let i = this.grabbers.indexOf(evt.relatedTarget);\n    // if a queued, non-physics grabber leaves the collision zone, forget it\n    if (i !== -1 && evt.relatedTarget !== this.grabber && !this.physicsIsConstrained(evt.relatedTarget)) {\n      this.grabbers.splice(i, 1);\n    }\n  }\n}));\n\n},{\"./prototypes/buttons-proto.js\":8,\"./prototypes/physics-grab-proto.js\":9}],7:[function(require,module,exports){\n\n/* global AFRAME */\nAFRAME.registerComponent('hoverable', {\n  init: function () {\n    this.HOVERED_STATE = 'hovered';\n    this.HOVER_EVENT = 'hover-start';\n    this.UNHOVER_EVENT = 'hover-end';\n\n    this.hoverers = [];\n\n    this.start = this.start.bind(this);\n    this.end = this.end.bind(this);\n\n    this.el.addEventListener(this.HOVER_EVENT, this.start);\n    this.el.addEventListener(this.UNHOVER_EVENT, this.end);\n  },\n  remove: function () {\n    this.el.removeEventListener(this.HOVER_EVENT, this.start);\n    this.el.removeEventListener(this.UNHOVER_EVENT, this.end);\n  },\n  start: function (evt) {\n    if (evt.defaultPrevented) {\n      return;\n    }\n    this.el.addState(this.HOVERED_STATE);\n    if (this.hoverers.indexOf(evt.detail.hand) === -1) {\n      this.hoverers.push(evt.detail.hand);\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  end: function (evt) {\n    if (evt.defaultPrevented) {\n      return;\n    }\n    var handIndex = this.hoverers.indexOf(evt.detail.hand);\n    if (handIndex !== -1) {\n      this.hoverers.splice(handIndex, 1);\n    }\n    if (this.hoverers.length < 1) {\n      this.el.removeState(this.HOVERED_STATE);\n    }\n  }\n});\n\n},{}],8:[function(require,module,exports){\n\n// common code used in customizing reaction components by button\nmodule.exports = function () {\n  function buttonIsValid(evt, buttonList) {\n    return buttonList.length === 0 || buttonList.indexOf(evt.detail.buttonEvent.type) !== -1;\n  }\n  return {\n    schema: {\n      startButtons: { default: [] },\n      endButtons: { default: [] }\n    },\n    startButtonOk: function (evt) {\n      return buttonIsValid(evt, this.data['startButtons']);\n    },\n    endButtonOk: function (evt) {\n      return buttonIsValid(evt, this.data['endButtons']);\n    }\n  };\n}();\n\n},{}],9:[function(require,module,exports){\n\n// base code used by grabbable for physics interactions\nmodule.exports = {\n  schema: {\n    usePhysics: { default: 'ifavailable' }\n  },\n  physicsInit: function () {\n    this.constraints = new Map();\n  },\n  physicsUpdate: function () {\n    if (this.data.usePhysics === 'never' && this.constraints.size) {\n      this.physicsClear();\n    }\n  },\n  physicsRemove: function () {\n    this.physicsClear();\n  },\n  physicsStart: function (evt) {\n    // initiate physics constraint if available and not already existing\n    if (this.data.usePhysics !== 'never' && this.el.body && evt.detail.hand.body && !this.constraints.has(evt.detail.hand)) {\n      const newConId = Math.random().toString(36).substr(2, 9);\n      this.el.setAttribute('constraint__' + newConId, {\n        target: evt.detail.hand\n      });\n      this.constraints.set(evt.detail.hand, newConId);\n      return true;\n    }\n    // Prevent manual grab by returning true\n    if (this.data.usePhysics === 'only') {\n      return true;\n    }\n    return false;\n  },\n  physicsEnd: function (evt) {\n    let constraintId = this.constraints.get(evt.detail.hand);\n    if (constraintId) {\n      this.el.removeAttribute('constraint__' + constraintId);\n      this.constraints.delete(evt.detail.hand);\n    }\n  },\n  physicsClear: function () {\n    if (this.el.body) {\n      for (let c of this.constraints.values()) {\n        this.el.body.world.removeConstraint(c);\n      }\n    }\n    this.constraints.clear();\n  },\n  physicsIsConstrained: function (el) {\n    return this.constraints.has(el);\n  },\n  physicsIsGrabbing() {\n    return this.constraints.size > 0;\n  }\n};\n\n},{}],10:[function(require,module,exports){\n\n/* global AFRAME, THREE */\nconst inherit = AFRAME.utils.extendDeep;\nconst buttonsCore = require('./prototypes/buttons-proto.js');\n// new object with all core modules\nconst base = inherit({}, buttonsCore);\nAFRAME.registerComponent('stretchable', inherit(base, {\n  schema: {\n    usePhysics: { default: 'ifavailable' },\n    invert: { default: false },\n    physicsUpdateRate: { default: 100 }\n  },\n  init: function () {\n    this.STRETCHED_STATE = 'stretched';\n    this.STRETCH_EVENT = 'stretch-start';\n    this.UNSTRETCH_EVENT = 'stretch-end';\n    this.stretched = false;\n    this.stretchers = [];\n\n    this.scale = new THREE.Vector3();\n    this.handPos = new THREE.Vector3();\n    this.otherHandPos = new THREE.Vector3();\n\n    this.start = this.start.bind(this);\n    this.end = this.end.bind(this);\n\n    this.el.addEventListener(this.STRETCH_EVENT, this.start);\n    this.el.addEventListener(this.UNSTRETCH_EVENT, this.end);\n  },\n  update: function (oldDat) {\n    this.updateBodies = AFRAME.utils.throttleTick(this._updateBodies, this.data.physicsUpdateRate, this);\n  },\n  tick: function (time, timeDelta) {\n    if (!this.stretched) {\n      return;\n    }\n    this.scale.copy(this.el.getAttribute('scale'));\n    this.stretchers[0].object3D.getWorldPosition(this.handPos);\n    this.stretchers[1].object3D.getWorldPosition(this.otherHandPos);\n    const currentStretch = this.handPos.distanceTo(this.otherHandPos);\n    let deltaStretch = 1;\n    if (this.previousStretch !== null && currentStretch !== 0) {\n      deltaStretch = Math.pow(currentStretch / this.previousStretch, this.data.invert ? -1 : 1);\n    }\n    this.previousStretch = currentStretch;\n    if (this.previousPhysicsStretch === null) {\n      // establish correct baseline even if throttled function isn't called\n      this.previousPhysicsStretch = currentStretch;\n    }\n    this.scale.multiplyScalar(deltaStretch);\n    this.el.setAttribute('scale', this.scale);\n    // scale update for all nested physics bodies (throttled)\n    this.updateBodies(time, timeDelta);\n  },\n  remove: function () {\n    this.el.removeEventListener(this.STRETCH_EVENT, this.start);\n    this.el.removeEventListener(this.UNSTRETCH_EVENT, this.end);\n  },\n  start: function (evt) {\n    if (this.stretched || this.stretchers.includes(evt.detail.hand) || !this.startButtonOk(evt) || evt.defaultPrevented) {\n      return;\n    } // already stretched or already captured this hand or wrong button\n    this.stretchers.push(evt.detail.hand);\n    if (this.stretchers.length === 2) {\n      this.stretched = true;\n      this.previousStretch = null;\n      this.previousPhysicsStretch = null;\n      this.el.addState(this.STRETCHED_STATE);\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } // gesture accepted\n  },\n  end: function (evt) {\n    var stretcherIndex = this.stretchers.indexOf(evt.detail.hand);\n    if (evt.defaultPrevented || !this.endButtonOk(evt)) {\n      return;\n    }\n    if (stretcherIndex !== -1) {\n      this.stretchers.splice(stretcherIndex, 1);\n      this.stretched = false;\n      this.el.removeState(this.STRETCHED_STATE);\n      // override throttle to push last stretch to physics bodies\n      this._updateBodies();\n    }\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n  },\n  _updateBodies: function () {\n    if (!this.el.body || this.data.usePhysics === 'never') {\n      return;\n    }\n    const currentStretch = this.previousStretch; // last visible geometry stretch\n    let deltaStretch = 1;\n    if (this.previousPhysicsStretch !== null && currentStretch > 0) {\n      deltaStretch = Math.pow(currentStretch / this.previousPhysicsStretch, this.data.invert ? -1 : 1);\n    }\n    this.previousPhysicsStretch = currentStretch;\n    if (deltaStretch === 1) {\n      return;\n    }\n    for (let c of this.el.childNodes) {\n      this.stretchBody(c, deltaStretch);\n    }\n    this.stretchBody(this.el, deltaStretch);\n  },\n  stretchBody: function (el, deltaStretch) {\n    if (!el.body) {\n      return;\n    }\n    let physicsShape;\n    let offset;\n    for (let i = 0; i < el.body.shapes.length; i++) {\n      physicsShape = el.body.shapes[i];\n      if (physicsShape.halfExtents) {\n        physicsShape.halfExtents.scale(deltaStretch, physicsShape.halfExtents);\n        physicsShape.updateConvexPolyhedronRepresentation();\n      } else if (physicsShape.radius) {\n        physicsShape.radius *= deltaStretch;\n        physicsShape.updateBoundingSphereRadius();\n      } else if (!this.shapeWarned) {\n        console.warn('Unable to stretch physics body: unsupported shape');\n        this.shapeWarned = true;\n      }\n      // also move offset to match scale change\n      offset = el.body.shapeOffsets[i];\n      offset.scale(deltaStretch, offset);\n    }\n    el.body.updateBoundingRadius();\n  }\n}));\n\n},{\"./prototypes/buttons-proto.js\":8}],11:[function(require,module,exports){\n\n/* global AFRAME */\nAFRAME.registerSystem('super-hands', {\n  init: function () {\n    this.superHands = [];\n  },\n  registerMe: function (comp) {\n    // when second hand registers, store links\n    if (this.superHands.length === 1) {\n      this.superHands[0].otherSuperHand = comp;\n      comp.otherSuperHand = this.superHands[0];\n    }\n    this.superHands.push(comp);\n  },\n  unregisterMe: function (comp) {\n    var index = this.superHands.indexOf(comp);\n    if (index !== -1) {\n      this.superHands.splice(index, 1);\n    }\n    this.superHands.forEach(x => {\n      if (x.otherSuperHand === comp) {\n        x.otherSuperHand = null;\n      }\n    });\n  }\n});\n\n},{}]},{},[1]);\n","function debug(msg, ...rest) {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`VRIA Debug:`, msg, ...rest);\n  }\n}\n\nfunction warn(msg) {\n  console.warn(`VRIA Warning: ${msg}`);\n}\n\nfunction error(msg, ...rest) {\n  console.error(`VRIA Error: ${msg}`, ...rest);\n  throw new Error(`VRIA Error: ${msg}`, msg);\n}\n\nfunction mode() {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`VRIA in development mode...`);\n  }\n}\n\nexport default {\n  debug,\n  warn,\n  error,\n  mode\n};\n","// Core Actions\nconst coreActions = {\n  VIS_CONFIG_COMPILED: 'VIS_CONFIG_COMPILED',\n  FILTER_DATA: 'FILTER_DATA',\n  SET_CALLBACKS: 'SET_CALLBACKS',\n  MARK_SELECTED: 'MARK_SELECTED',\n  SET_SELECTION: 'SET_SELECTION',\n  SET_FILTERS: 'SET_FILTERS',\n  SET_ADDITIONAL_FILTERS: 'SET_ADDITIONAL_FILTERS',\n  SET_OPTIONS: 'SET_OPTIONS'\n};\n\nexport default {\n  ...coreActions\n};\n","import visConfigCompiled from './core/visConfigCompiled';\nimport filterData from './core/filterData';\nimport setCallbacks from './core/setCallbacks';\nimport markSelected from './core/markSelected';\nimport setSelection from './core/setSelection';\nimport setFilters from './core/setFilters';\nimport setAdditionalFilters from './core/setAdditionalFilters';\nimport setOptions from './core/setOptions';\n\nexport { default as actionTypes } from './actionTypes';\n\nexport default {\n  visConfigCompiled,\n  filterData,\n  setCallbacks,\n  markSelected,\n  setSelection,\n  setFilters,\n  setAdditionalFilters,\n  setOptions\n};\n","import cloneDeep from 'lodash/cloneDeep';\nimport { applyFilters } from '../../functions';\n\nconst visConfigCompiled = (state, payload) => {\n  return {\n    ...state,\n    compiledConfig: payload.compiledConfig,\n    parsedDataset: payload.dataset,\n    filteredDataset: applyFilters(payload.dataset, payload.domainMap),\n    initialDomainMap: cloneDeep(payload.domainMap),\n    domainMap: payload.domainMap,\n    scales: payload.scales\n  };\n};\n\nexport default visConfigCompiled;\n","import { applyFilters } from '../../functions';\nimport { log } from '../../utils';\n\nconst filterData = (state, payload) => {\n  const { value, field, bound, type } = payload;\n\n  let filteredDomain;\n\n  switch (type) {\n    case 'legend':\n      if (state.domainMap.get(field).includes(value)) {\n        filteredDomain = state.domainMap.get(field).filter((v) => v !== value);\n      } else {\n        // Check if this value was in the original domain\n        if (state.initialDomainMap.get(field).includes(value)) {\n          filteredDomain = state.domainMap.get(field);\n          filteredDomain.push(value);\n        } else {\n          log.error(\n            `filterData - Value not added, ${value} was not in original domain`\n          );\n        }\n      }\n      break;\n    case 'axis':\n      // TODO: Make available for non-quantitative axes?\n      filteredDomain = state.domainMap.get(field);\n      // Only update the filter if the new value is within the bounds of the original domain\n      if (bound === 0) {\n        if (value > state.initialDomainMap.get(field)[0]) {\n          filteredDomain[bound] = value;\n        } else {\n          filteredDomain[bound] = state.initialDomainMap.get(field)[0];\n        }\n      } else {\n        if (value < state.initialDomainMap.get(field)[1]) {\n          filteredDomain[bound] = value;\n        } else {\n          filteredDomain[bound] = state.initialDomainMap.get(field)[1];\n        }\n      }\n      break;\n  }\n\n  const newDomainMap = new Map(state.domainMap).set(field, filteredDomain);\n\n  return {\n    ...state,\n    filteredDataset: applyFilters(state.parsedDataset, newDomainMap),\n    domainMap: newDomainMap\n  };\n};\n\nexport default filterData;\n","const setCallbacks = (state, payload) => {\n  return {\n    ...state,\n    appCallback: payload.appCallback\n  };\n};\n\nexport default setCallbacks;\n","import cloneDeep from 'lodash/cloneDeep';\n\nconst markSelected = (state, payload) => {\n  const selection = {\n    dataMap: new Map(state.selection.dataMap),\n    data: [],\n    marks: []\n  };\n\n  const setMarkData = () => {\n    // Remove vriaid and add to selection map\n    const selectedRow = cloneDeep(\n      state.filteredDataset.filter((el) => el.vriaid === payload.id)\n    );\n    delete selectedRow[0].vriaid;\n    selection.dataMap.set(payload.vriaid, ...selectedRow);\n  };\n\n  if (state.selection.dataMap.has(payload.vriaid)) {\n    // Update selection map if mark was deselected\n    selection.dataMap.delete(payload.vriaid);\n  } else if (\n    state.options.multiSelect === true ||\n    selection.dataMap.size === 0\n  ) {\n    setMarkData();\n  } else if (\n    state.options.multiSelect === false &&\n    selection.dataMap.size === 1\n  ) {\n    // Switch selected to another mark\n    selection.dataMap.delete(selection.dataMap.keys().next().value);\n    setMarkData();\n  }\n\n  // Add raw data values to selection data array\n  selection.data = [...selection.dataMap.values()];\n\n  // Add mark classnames to marks array\n  selection.marks = [...selection.dataMap.keys()];\n\n  // Reset colour on all marks\n  document.querySelectorAll('[selected]').forEach((el) => {\n    el.setAttribute('color', el.getAttribute('initialColor'));\n    el.removeAttribute('selected');\n    el.removeAttribute('vria-only-selected-mark');\n    if (el.getAttribute('wireframe')) {\n      el.setAttribute('opacity', 0);\n    }\n  });\n\n  // Set selected colour on selected marks\n  if (selection.dataMap.size !== 0) {\n    selection.dataMap.forEach((value, key) => {\n      document.querySelectorAll(`.${key}`).forEach((el) => {\n        el.setAttribute('selected', true);\n        el.setAttribute('color', state.options.selectColor);\n        if (selection.dataMap.size === 1) {\n          el.setAttribute('vria-only-selected-mark', true);\n        }\n        if (el.getAttribute('wireframe')) {\n          el.setAttribute('opacity', 1);\n        }\n      });\n    });\n  }\n\n  // Set tooltip if a single mark is selected\n  if (selection.dataMap.size === 1) {\n    if (payload.showTooltip !== null && payload.showTooltip !== undefined) {\n      const tooltip = payload.cursor;\n      tooltip.setAttribute('height', payload.tooltipHeight);\n      tooltip.setAttribute('visible', true);\n      tooltip.setAttribute('text', {\n        ...tooltip.getAttribute('text'),\n        value: payload.tooltipContent\n      });\n    }\n  }\n\n  return {\n    ...state,\n    selection\n  };\n};\n\nexport default markSelected;\n","import cloneDeep from 'lodash/cloneDeep';\n\nconst setSelection = (state, payload) => {\n  const clearSelection = {\n    dataMap: new Map(),\n    data: [],\n    marks: []\n  };\n  let selection;\n  if (\n    Object.hasOwnProperty.call(payload, 'dataMap') &&\n    Object.hasOwnProperty.call(payload, 'data') &&\n    Object.hasOwnProperty.call(payload, 'marks')\n  ) {\n    selection = cloneDeep(payload);\n  } else {\n    selection = clearSelection;\n  }\n\n  // Reset selection state and colour on all marks\n  document.querySelectorAll('[selected]').forEach((el) => {\n    el.setAttribute('color', el.getAttribute('initialColor'));\n    el.removeAttribute('selected');\n    el.removeAttribute('vria-only-selected-mark');\n  });\n\n  // Set selected colour on selected marks\n  if (selection.dataMap.size !== 0) {\n    selection.dataMap.forEach((value, key) => {\n      document.querySelectorAll(`.${key}`).forEach((el) => {\n        el.setAttribute('selected', true);\n        el.setAttribute('color', state.options.selectColor);\n        if (selection.dataMap.size === 1) {\n          el.setAttribute('vria-only-selected-mark', true);\n        }\n      });\n    });\n  }\n\n  return {\n    ...state,\n    selection\n  };\n};\n\nexport default setSelection;\n","import { applyFilters } from '../../functions';\nimport cloneDeep from 'lodash/cloneDeep';\n\nconst setFilters = (state, payload) => {\n  return {\n    ...state,\n    filteredDataset: applyFilters(state.parsedDataset, payload),\n    domainMap: cloneDeep(payload)\n  };\n};\n\nexport default setFilters;\n","const setAdditionalFilters = (state, payload) => {\n  return {\n    ...state,\n    additionalFilters: payload\n  };\n};\n\nexport default setAdditionalFilters;\n","const setOptions = (state, payload) => {\n  return {\n    ...state,\n    options: {\n      ...state.options,\n      ...payload\n    }\n  };\n};\n\nexport default setOptions;\n","import actions, { actionTypes } from '../actions';\nimport { log } from '../utils';\n\nconst reducer = (state, { type, payload }) => {\n  log.debug('reducer', type, payload);\n  switch (type) {\n    // VIS_CONFIG_COMPILED\n    case actionTypes.VIS_CONFIG_COMPILED:\n      return actions.visConfigCompiled(state, payload);\n    // FILTER_DATA\n    case actionTypes.FILTER_DATA:\n      return actions.filterData(state, payload);\n    // SET_CALLBACKS\n    case actionTypes.SET_CALLBACKS:\n      return actions.setCallbacks(state, payload);\n    // MARK_SELECTED\n    case actionTypes.MARK_SELECTED:\n      return actions.markSelected(state, payload);\n    // SET_SELECTION\n    case actionTypes.SET_SELECTION:\n      return actions.setSelection(state, payload);\n    // SET_FILTERS\n    case actionTypes.SET_FILTERS:\n      return actions.setFilters(state, payload);\n    // SET_ADDITIONAL_FILTERS\n    case actionTypes.SET_ADDITIONAL_FILTERS:\n      return actions.setAdditionalFilters(state, payload);\n    // SET_OPTIONS\n    case actionTypes.SET_OPTIONS:\n      return actions.setOptions(state, payload);\n    default:\n      log.debug(`reducer - Unknown action type: ${type}`);\n      break;\n  }\n};\n\nexport default reducer;\n","export default {\n  compiledConfig: null,\n  parsedDataset: null,\n  filteredDataset: null,\n  domainMap: null,\n  scales: null,\n  selection: { dataMap: new Map(), values: [], marks: [] }\n};\n","import React from 'react';\n\nconst DispatchContext = React.createContext(null);\n\nexport default DispatchContext;\n","import * as d3 from 'd3';\nimport * as moment from 'moment';\n\nimport { defaults } from './defaults';\nimport { log } from '../utils';\n\n// Moment default export\nconst _moment = moment.default;\n\n/**\n * @name parseDataset\n * @description VRIA Dataset parser\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} config - VRIA vis-config file as JSON\n * @returns {object}\n */\nfunction parseDataset(config) {\n  // Get data and views objects from vis-config\n  const { data, views } = config;\n\n  // Only perform dataset transforms on fields used in this vis-config\n  const uniqueFields = new Set();\n  const encodingMap = new Map();\n  views.forEach((view) => {\n    Object.keys(view.encoding).forEach((channel) => {\n      if (!uniqueFields.has(view.encoding[channel].field)) {\n        uniqueFields.add(view.encoding[channel].field);\n        encodingMap.set(view.encoding[channel].field, view.encoding[channel]);\n      }\n    });\n  });\n\n  // Supported dataset file types\n  const SUPPORTED_FILE_TYPES = ['csv', 'json', 'txt', 'text'];\n\n  // Get file type of dataset\n  const FILE_TYPE =\n    typeof data.url === 'string'\n      ? data.url.split('.').pop().toLowerCase()\n      : 'json';\n\n  // Transformed dataset\n  let transformedDataset;\n\n  // Load datasets with d3\n  if (SUPPORTED_FILE_TYPES.includes(FILE_TYPE)) {\n    switch (FILE_TYPE) {\n      case 'txt':\n      case 'text':\n      case 'csv':\n        try {\n          transformedDataset = d3.csv(data.url, (row) =>\n            _transformRow(row, encodingMap)\n          );\n        } catch (err) {\n          log.error(\n            `parseDataset - Error parsing dataset as ${FILE_TYPE}`,\n            err\n          );\n        }\n        break;\n      case 'json':\n      default:\n        try {\n          if (typeof data.url === 'string') {\n            transformedDataset = d3\n              .json(data.url)\n              .then((d) => d.map((row) => _transformRow(row, encodingMap)));\n          } else if (typeof data.values === 'object') {\n            transformedDataset = Promise.resolve(\n              data.values.map((row) => _transformRow(row, encodingMap))\n            );\n          }\n        } catch (err) {\n          log.error('parseDataset - Error parsing dataset as JSON', err);\n        }\n        break;\n    }\n  } else {\n    log.error(\n      `parseDataset - Error parsing dataset. Unsupported file type: ${FILE_TYPE}`\n    );\n  }\n\n  return {\n    dataset: transformedDataset,\n    uniqueFields\n  };\n}\n\n/**\n * @name _transformRow\n * @private\n * @description Perform data transformations on each row of a dataset\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} row - A row of a parsed dataset\n * @param {object} encodingMap - All encodings used in this vis-config\n * @returns {object} A transformed row\n */\nfunction _transformRow(row, encodingMap) {\n  encodingMap.forEach((encoding) => {\n    switch (encoding.type) {\n      // Transform quantitative fields\n      case 'quantitative':\n        if (typeof row[encoding.field] === 'string') {\n          // Parsed as string\n          if (row[encoding.field] === '') {\n            // Set missing data to 0\n            // TODO: Remove, flag or otherwise process missing values somehow?\n            row[encoding.field] = 0;\n          } else {\n            // Ensure radix character is period and not comma (, => .)\n            // Also parse as float...\n            row[encoding.field] = +parseFloat(\n              row[encoding.field].replace(',', '.')\n            );\n          }\n        } else {\n          // Parsed as number...\n          row[encoding.field] = +row[encoding.field];\n        }\n        break;\n      // Transform temporal fields\n      case 'temporal':\n        // Transform date if timeUnit is supplied\n        // TODO: Consider insisting on moment formats rather than Vega-Lite?\n        // TODO: Consider not altering the original dataset?\n        if (encoding.timeUnit) {\n          // Default timeUnits can be set in (grammar/defaults)\n          const { timeUnit: dfTimeUnit } = defaults.view.encoding;\n          const timeUnits = new Map([\n            ['year', dfTimeUnit.year],\n            ['quarter', dfTimeUnit.quarter],\n            ['month', dfTimeUnit.month],\n            ['date', dfTimeUnit.date],\n            ['week', dfTimeUnit.week],\n            ['day', dfTimeUnit.day],\n            ['dayofyear', dfTimeUnit.dayofyear],\n            ['hours', dfTimeUnit.hours],\n            ['minutes', dfTimeUnit.minutes],\n            ['seconds', dfTimeUnit.seconds],\n            ['milliseconds', dfTimeUnit.milliseconds]\n          ]);\n          const timeUnit = timeUnits.get(encoding.timeUnit);\n          row[encoding.field] = _moment(\n            new Date(row[encoding.field].toString())\n          ).format(timeUnit);\n        } else {\n          if (typeof row[encoding.field] !== 'string')\n            row[encoding.field] = row[encoding.field].toString();\n        }\n        break;\n      // Transform nominal fields\n      case 'nominal':\n        if (typeof row[encoding.field] !== 'string')\n          row[encoding.field] = row[encoding.field].toString();\n        break;\n      // Transform ordinal fields\n      case 'ordinal':\n        if (typeof row[encoding.field] !== 'string')\n          row[encoding.field] = row[encoding.field].toString();\n        break;\n      default:\n        break;\n    }\n  });\n  return row;\n}\n\nexport default parseDataset;\n","import Ajv from 'ajv';\n\nimport { log } from '../utils';\nimport schema from './schema';\n\n/**\n * @name validateVisConfig\n * @description VRIA vis-config JSON Schema validator\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} config - VRIA vis-config file as JSON\n */\nfunction validateVisConfig(config) {\n  // config must be an object\n  if (typeof config !== 'object') {\n    log.error(\n      `ValidateVisConfig - Malformed vis-config passed to validator. Expected type: 'object', got '${typeof config}'.`\n    );\n  }\n\n  // Validate vis-config against VRIA JSON Schema\n  // - VRIA JSON Schemas are filed under src/grammar/schema/\n  // - VRIA vis-config validation uses the Ajv JSON Schema Validator.\n  // - Defaults are not applied to nested properties or $refs in Ajv and therefore no defaults should be specified in the schema.\n  // - - This is a noted limitation of Ajv, so defaults for all properties are added after schema validation.\n\n  const ajv = new Ajv({ useDefaults: false, jsonPointers: true });\n  const validate = ajv.compile(schema);\n  const valid = validate(config);\n\n  if (valid) {\n    log.debug(`ValidateVisConfig - vis-config successfully validated`, config);\n  } else {\n    log.error(\n      `ValidateVisConfig - vis-config validation failed`,\n      ajv.errorsText(validate.errors),\n      validate.errors\n    );\n  }\n\n  return valid;\n}\n\nexport default validateVisConfig;\n","import cloneDeep from 'lodash/cloneDeep';\nimport * as d3 from 'd3';\n\nimport validateVisConfig from './validateVisConfig';\nimport parseDataset from './parseDataset';\nimport { defaults } from './defaults';\nimport { log } from '../utils';\n\n/**\n * @name compileVisConfig\n * @description VRIA vis-config compiler\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} config - VRIA vis-config file as JSON\n * @param {boolean} validated - true if the vis-config has already been validated\n * @returns {object} Promise containing compiled vis-config, dataset, scales and encodings\n */\nfunction compileVisConfig(config, additionalFilters = [], validated = false) {\n  // vis-config must be an object\n  if (typeof config !== 'object') {\n    log.error(\n      `compileVisConfig - Malformed vis-config passed to compiler. Expected type: 'object', got '${typeof config}'.`\n    );\n  }\n\n  // Validate config if it has not already been\n  let valid = false;\n  if (validated) {\n    valid = true;\n  } else {\n    try {\n      valid = validateVisConfig(config);\n    } catch (error) {\n      log.error(error);\n      return false;\n    }\n  }\n\n  // This will contain the compiled vis-config\n  let compiledConfig;\n\n  // This will contain the domain of active fields in this vis-config\n  const domainMap = new Map();\n\n  // The original vis-config must pass validation before it can be compiled\n  if (valid) {\n    // The remainder of this function creates a complete VRIA vis-config\n    // Missing values are inferred from defaults (grammar/defaults), the dataset\n    // and the vis-config itself.\n\n    // Views (config.views)\n    // - If a view does not exist, create one and move properties inside\n    if (config.views === undefined) {\n      compiledConfig = {\n        data: cloneDeep(config.data),\n        title: config.title,\n        views: [cloneDeep(config)]\n      };\n      delete compiledConfig.views[0].data;\n    } else {\n      // If views object exists, clone the original config\n      compiledConfig = cloneDeep(config);\n    }\n\n    // Parse dataset\n    // - The dataset is parsed after the vis-config views are normalised\n    // - Parsing includes loading the dataset and returning a Set() of unique fields\n    // - Once parsed, defaults can be inferred\n    const { dataset } = parseDataset(compiledConfig);\n    return dataset.then((d) => {\n      // Resulting domains, ranges and scales\n      const allScales = [];\n\n      // Infer defaults for each view\n      compiledConfig.views.forEach((view, i) => {\n        // --------------------\n        // Top level view properties\n        // - Copy over top level properties and assign defaults\n        ['x', 'y', 'z', 'width', 'height', 'depth', 'titlePadding'].forEach(\n          (el) => {\n            if (view[el] === undefined) {\n              compiledConfig.views[i][el] = defaults.view[el];\n            }\n          }\n        );\n\n        // Top level shorthand view properties\n        // - Replace shorthands with full property names\n        [\n          ['xrot', 'xrotation'],\n          ['yrot', 'yrotation'],\n          ['zrot', 'zrotation']\n        ].forEach((el) => {\n          if (view[el[0]] !== undefined) {\n            compiledConfig.views[i][el[1]] = cloneDeep(view[el[0]]);\n            delete compiledConfig.views[i][el[0]];\n          } else if (view[el[0]] === undefined && view[el[1]] === undefined) {\n            compiledConfig.views[i][el[1]] = defaults.view[el[1]];\n          }\n        });\n\n        // --------------------\n        // Mark (views[].mark)\n        // - Get the mark type from mark object or string\n        // - VRIA currently supports 2 mark types: bar and point\n        // - These types are assigned shape primitives\n\n        // Mark Type (views[].mark | views[].mark.type)\n        const markType = view.mark.type ?? view.mark;\n\n        // Mark Shape (views[].mark.shape)\n        // - Default shapes are based on the mark type\n        let markShape;\n        switch (markType) {\n          case 'bar':\n            markShape = view.mark.shape ?? defaults.view.mark.bar.shape;\n            break;\n          case 'point':\n          default:\n            markShape = view.mark.shape ?? defaults.view.mark.point.shape;\n            break;\n        }\n\n        // Mark Tooltip (views[].mark.tooltip)\n        // - Set the mark tooltip\n        let markTooltip;\n        if (typeof view.mark.tooltip === 'object') {\n          markTooltip = view.mark.tooltip;\n        } else if (view.mark.tooltip === true) {\n          markTooltip = defaults.view.mark.tooltip.on;\n        } else {\n          markTooltip = false;\n        }\n\n        // Replace existing mark config with compiled mark object\n        compiledConfig.views[i].mark = {\n          type: markType,\n          shape: markShape,\n          tooltip: markTooltip\n        };\n\n        // --------------------\n        // Encoding (views[].encoding[channel])\n        // - View encoding channels\n        // - NOTE: timeUnit and numberFormat are optional and are not compiled\n\n        // --------------------\n        // Scale range (views[].encoding[channel].scale.range)\n        // - Get the range from each encoding channel\n        const ranges = _getRanges(compiledConfig.views[i], d);\n\n        // Add channel properties\n        Object.keys(view.encoding).forEach((el) => {\n          // Add scale object if one does not exist\n          if (view.encoding[el].scale === undefined) {\n            compiledConfig.views[i].encoding[el].scale = {};\n          }\n\n          // Only add range if this encoding channel is not a constant\n          if (view.encoding[el].value === undefined) {\n            // Add range\n            compiledConfig.views[i].encoding[el].scale.range = ranges[el];\n          }\n\n          // --------------------\n          // Scheme (views[].encoding[channel].scale.scheme)\n          // - If this is a colour scale, it should have a scheme\n          // - The scheme contains a named scale range or an array of colours\n          if (el === 'color') {\n            // If a scheme is provided, validate it\n            if (\n              view.encoding[el].scale.scheme === 'string' &&\n              d3[view.encoding[el].scale.scheme] === undefined\n            ) {\n              log.error(\n                `compileVisConfig - Invalid scheme: ${view.encoding[el].scale.scheme} - VRIA accepts schemes from d3-scale-chromatic: https://github.com/d3/d3-scale-chromatic, or an array of colours`\n              );\n            }\n\n            // If the range is a string, it is a colour scale, do a lookup\n            // If the range is a string but the scheme is already set, ignore range\n            if (\n              typeof view.encoding[el].scale.range === 'string' &&\n              view.encoding[el].scale.scheme === undefined\n            ) {\n              compiledConfig.views[i].encoding[el].scale.scheme =\n                defaults.view.encoding.scale.scheme[\n                  defaults.view.encoding.scale.range.color[\n                    view.encoding[el].type\n                  ]\n                ];\n            }\n          }\n\n          // --------------------\n          // Nice (views[].encoding[channel].scale.nice)\n          // - Nice the scale, never nice non-quantitative scales\n          if (\n            view.encoding[el].type === 'quantitative' &&\n            view.encoding[el].scale.nice === undefined\n          ) {\n            compiledConfig.views[i].encoding[el].scale.nice =\n              defaults.view.encoding.scale.nice;\n          }\n\n          // --------------------\n          // Zero (views[].encoding[channel].scale.zero)\n          // - Scale starts from zero, never zero non-quantitative scales\n          if (\n            view.encoding[el].type === 'quantitative' &&\n            view.encoding[el].scale.zero === undefined\n          ) {\n            compiledConfig.views[i].encoding[el].scale.zero =\n              defaults.view.encoding.scale.zero;\n          }\n\n          // Scale padding (only x, y, or z and non-quantitative fields)\n          if (\n            ['x', 'y', 'z'].includes(el) &&\n            view.encoding[el].type !== 'quantitative'\n          ) {\n            // --------------------\n            // Padding inner (views[].encoding[channel].scale.paddingInner)\n            // - Sets padding inner to band scales\n            if (view.encoding[el].scale.paddingInner === undefined) {\n              compiledConfig.views[i].encoding[el].scale.paddingInner =\n                defaults.view.encoding.scale.paddingInner;\n            }\n            // --------------------\n            // Padding outer (views[].encoding[channel].scale.paddingOuter)\n            // - Sets padding outer to band scales, sets padding to point scales\n            if (view.encoding[el].scale.paddingOuter === undefined) {\n              compiledConfig.views[i].encoding[el].scale.paddingOuter =\n                defaults.view.encoding.scale.paddingOuter;\n            }\n          }\n\n          // --------------------\n          // Axis (views[].encoding[channel].axis)\n          // - Set axis properties\n\n          // Only applies to x, y and z channels\n          // TODO: Instead of using if statements, use object spread instead?\n          if (\n            ['x', 'y', 'z'].includes(el) &&\n            view.encoding[el]?.axis !== false\n          ) {\n            // Add axis object if one does not exist\n            if (view.encoding[el].axis === undefined) {\n              compiledConfig.views[i].encoding[el].axis = {};\n            }\n\n            // --------------------\n            // Axis title (views[].encoding[channel].axis.title)\n            // - Set axis title to field name if not specified\n            if (view.encoding[el].axis.title === undefined) {\n              compiledConfig.views[i].encoding[el].axis.title =\n                view.encoding[el].field;\n            }\n\n            // --------------------\n            // Axis title padding (views[].encoding[channel].axis.titlePadding)\n            // - Set axis title padding if not specified\n            if (view.encoding[el].axis.titlePadding === undefined) {\n              compiledConfig.views[i].encoding[el].axis.titlePadding =\n                defaults.view.encoding.axis.titlePadding;\n            }\n\n            // --------------------\n            // Axis filter (views[].encoding[channel].axis.filter)\n            // - Set axis filter on or off\n            if (view.encoding[el].axis.filter === undefined) {\n              compiledConfig.views[i].encoding[el].axis.filter =\n                defaults.view.encoding.axis.filter;\n            }\n\n            // --------------------\n            // Axis face (views[].encoding[channel].axis.face)\n            // - Set axis face\n            if (view.encoding[el].axis.face === undefined) {\n              compiledConfig.views[i].encoding[el].axis.face =\n                defaults.view.encoding.axis.face[el];\n            }\n\n            // --------------------\n            // Axis orient (views[].encoding[channel].axis.orient)\n            // - Set axis orient\n            if (view.encoding[el].axis.orient === undefined) {\n              compiledConfig.views[i].encoding[el].axis.orient =\n                defaults.view.encoding.axis.orient[el];\n            }\n\n            // --------------------\n            // Axis ticks (views[].encoding[channel].axis.ticks)\n            // - Set axis tick visibility\n            if (view.encoding[el].axis.ticks === undefined) {\n              compiledConfig.views[i].encoding[el].axis.ticks =\n                defaults.view.encoding.axis.ticks;\n            }\n\n            // --------------------\n            // Axis tick count (views[].encoding[channel].axis.tickCount)\n            // - Set axis tick count\n            if (view.encoding[el].axis.tickCount === undefined) {\n              compiledConfig.views[i].encoding[el].axis.tickCount =\n                defaults.view.encoding.axis.tickCount;\n            }\n\n            // --------------------\n            // Axis labels (views[].encoding[channel].axis.labels)\n            // - Set axis label visability\n            if (view.encoding[el].axis.labels === undefined) {\n              compiledConfig.views[i].encoding[el].axis.labels =\n                defaults.view.encoding.axis.labels;\n            }\n          }\n\n          // --------------------\n          // Legend (views[].encoding[channel].legend)\n          // - Set legend properties\n          // - By default, legends are added\n\n          // TODO: Instead of using if statements, use object spread instead?\n          if (\n            [\n              'width',\n              'height',\n              'depth',\n              'xoffset',\n              'yoffset',\n              'zoffset',\n              'xrotation',\n              'yrotation',\n              'zrotation',\n              'size',\n              'color',\n              'opacity',\n              'length',\n              'shape'\n            ].includes(el) &&\n            view.encoding[el].legend !== false &&\n            view.encoding[el].value === undefined\n          ) {\n            // Add axis object if one does not exist or is set to true\n            if (\n              view.encoding[el].legend === undefined ||\n              view.encoding[el].legend === true\n            ) {\n              compiledConfig.views[i].encoding[el].legend = {};\n            }\n\n            // --------------------\n            // Legend title (views[].encoding[channel].legend.title)\n            // - Set legend title to field name if not specified\n            if (view.encoding[el].legend === undefined) {\n              compiledConfig.views[i].encoding[el].legend =\n                view.encoding[el].field;\n            }\n\n            // --------------------\n            // Legend filter (views[].encoding[channel].legend.filter)\n            // - Set legend filter on or off\n            if (view.encoding[el].legend.filter === undefined) {\n              compiledConfig.views[i].encoding[el].legend.filter =\n                defaults.view.encoding.legend.filter;\n            }\n\n            // --------------------\n            // Legend face (views[].encoding[channel].legend.face)\n            // - Set legend face\n            if (view.encoding[el].legend.face === undefined) {\n              if (view.encoding[el].type === 'quantitative' && el === 'color') {\n                compiledConfig.views[i].encoding[el].legend.face =\n                  defaults.view.encoding.legend.type.gradient.face;\n              } else {\n                compiledConfig.views[i].encoding[el].legend.face =\n                  defaults.view.encoding.legend.type.symbol.face;\n              }\n            }\n\n            // --------------------\n            // Legend orient (views[].encoding[channel].legend.orient)\n            // - Set legend orient\n            if (view.encoding[el].legend.orient === undefined) {\n              if (view.encoding[el].type === 'quantitative' && el === 'color') {\n                compiledConfig.views[i].encoding[el].legend.orient =\n                  defaults.view.encoding.legend.type.gradient.orient;\n              } else {\n                compiledConfig.views[i].encoding[el].legend.orient =\n                  defaults.view.encoding.legend.type.symbol.orient;\n              }\n            }\n\n            // --------------------\n            // Legend ticks (views[].encoding[channel].legend.ticks)\n            // - Set legend tick visibility\n            if (view.encoding[el].legend.ticks === undefined) {\n              compiledConfig.views[i].encoding[el].legend.ticks =\n                defaults.view.encoding.legend.ticks;\n            }\n\n            // --------------------\n            // Legend tick count (views[].encoding[channel].legend.tickCount)\n            // - Set legend tick count\n            if (view.encoding[el].legend.tickCount === undefined) {\n              compiledConfig.views[i].encoding[el].legend.tickCount =\n                defaults.view.encoding.legend.tickCount;\n            }\n\n            // --------------------\n            // Legend x position\n            // - Set legend x position\n            if (view.encoding[el].legend.x === undefined) {\n              compiledConfig.views[i].encoding[el].legend.x =\n                defaults.view.encoding.legend.x;\n            }\n\n            // --------------------\n            // Legend y position\n            // - Set legend y position\n            if (view.encoding[el].legend.y === undefined) {\n              compiledConfig.views[i].encoding[el].legend.y =\n                defaults.view.encoding.legend.y;\n            }\n\n            // --------------------\n            // Legend z position\n            // - Set legend z position\n            if (view.encoding[el].legend.z === undefined) {\n              compiledConfig.views[i].encoding[el].legend.z =\n                defaults.view.encoding.legend.z;\n            }\n\n            // --------------------\n            // Legend x rotation\n            // - Set legend x rotation\n            if (view.encoding[el].legend.xrotation === undefined) {\n              compiledConfig.views[i].encoding[el].legend.xrotation =\n                defaults.view.encoding.legend.xrotation;\n            }\n\n            // --------------------\n            // Legend y rotation\n            // - Set legend y rotation\n            if (view.encoding[el].legend.yrotation === undefined) {\n              compiledConfig.views[i].encoding[el].legend.yrotation =\n                defaults.view.encoding.legend.yrotation;\n            }\n\n            // --------------------\n            // Legend z rotation\n            // - Set legend z rotation\n            if (view.encoding[el].legend.zrotation === undefined) {\n              compiledConfig.views[i].encoding[el].legend.zrotation =\n                defaults.view.encoding.legend.zrotation;\n            }\n          }\n        });\n\n        // --------------------\n        // Scale domain (views[].encoding[channel].scale.domain)\n        // - Get the domain from each encoding channel in this view\n        // - This function also returns a Map() of field:domain for filtering and API use\n        const { domains } = _getDomains(compiledConfig.views[i], d);\n\n        // Scales\n        // - Using domains and ranges to produce scale functions\n        // - These scale functions are for mapping data and are not added to the config\n        const scales = _getScales(compiledConfig.views[i], domains, ranges);\n        allScales.push(scales);\n\n        // Add domain to compiled config\n        // This also stores the domain of each field used in this view in a Map()\n        // This is necessary because some domains will have been niced or zeroed\n        Object.keys(view.encoding).forEach((el) => {\n          // If this encoding has a field (excluding constant channels)\n          if (view.encoding[el].value === undefined) {\n            // Add domain to compiled config\n            // compiledConfig.views[i].encoding[el].scale.domain = domains[el];\n            compiledConfig.views[i].encoding[el].scale.domain = allScales[i][\n              el\n            ].domain();\n            // Add domain to domain map\n            domainMap.set(view.encoding[el].field, allScales[i][el].domain());\n          }\n        });\n      });\n\n      // Set additional filters to domain map\n      if (additionalFilters) {\n        additionalFilters.forEach((f) => {\n          const values = d.map((row) => row[f.field]);\n          domainMap.set(\n            f.field,\n            f.domain ||\n              (f.type === 'quantitative'\n                ? f.zero\n                  ? [0, d3.max(values)]\n                  : d3.extent(values)\n                : [...new Set(values)])\n          );\n        });\n      }\n\n      return {\n        dataset: d,\n        compiledConfig,\n        domainMap,\n        scales: allScales\n      };\n    });\n  }\n}\n\n/**\n * @name _getDomains\n * @private\n * @description Get the domains of each encoding channel in a view\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} view - Set domains for each encoding channel in this view\n * @param {object} dataset - Dataset from which to retrieve domains\n * @returns {object} Domains\n */\nfunction _getDomains(view, dataset) {\n  const { encoding } = view;\n  const domains = {};\n  const domainsWithFields = {};\n  const channelFields = {};\n  Object.keys(encoding).forEach((channel) => {\n    // This channel's domain;\n    let domain;\n    // If a domain is specified in the vis-config\n    if (encoding[channel].scale?.domain) {\n      domain = encoding[channel].scale.domain;\n    } else if (encoding[channel]?.value) {\n      domain = encoding[channel]?.value;\n    } else {\n      const values = dataset.map((row) => row[encoding[channel].field]);\n      switch (encoding[channel].type) {\n        case 'quantitative':\n          // Should the domain start from zero?\n          if (encoding[channel].scale?.zero === true) {\n            domain = [0, d3.max(values)];\n          } else {\n            domain = d3.extent(values);\n          }\n          break;\n        case 'temporal':\n        case 'nominal':\n        case 'ordinal':\n        default:\n          domain = [...new Set(values)];\n          break;\n      }\n    }\n    domains[channel] = domain;\n    domainsWithFields[encoding[channel].field] = domain;\n    channelFields[channel] = encoding[channel].field;\n  });\n  return { domains, domainsWithFields, channelFields };\n}\n\n/**\n * @name _getRanges\n * @private\n * @description Get the ranges of each encoding channel in a view\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} view - Set range for each encoding channel in this view\n * @returns {object} Ranges\n */\nfunction _getRanges(view) {\n  const { encoding } = view;\n  const ranges = {};\n  Object.keys(encoding).forEach((channel) => {\n    // This channel's range\n    let range;\n    // If a range is specified in the vis-config\n    if (encoding[channel].scale?.range) {\n      // Use this range\n      range = encoding[channel].scale.range;\n    } else {\n      // If the range is not specified, do a lookup\n      switch (channel) {\n        case 'x':\n        case 'width':\n          range = [0, view.width];\n          break;\n        case 'y':\n        case 'height':\n          range = [0, view.height];\n          break;\n        case 'z':\n        case 'depth':\n          range = [0, view.depth];\n          break;\n        case 'size':\n          range = defaults.view.encoding.scale.range.size;\n          break;\n        case 'opacity':\n          range = [0, 1];\n          break;\n        case 'length':\n          range = defaults.view.encoding.scale.range.length;\n          break;\n        case 'color':\n          range =\n            defaults.view.encoding.scale.range.color[encoding[channel].type];\n          break;\n        case 'shape':\n          range = defaults.view.encoding.scale.range.shape;\n          break;\n        default:\n          break;\n      }\n    }\n    ranges[channel] = range;\n  });\n  return ranges;\n}\n\n/**\n * @name _getScales\n * @private\n * @description Generate scale functions of each encoding channel in each view\n * @author Peter Butcher <pete@pbutcher.uk>\n * @param {object} view - Generate scale functions for encoding channels in this view\n * @param {object} domains - Data domaisn\n * @param {object} ranges - Data ranges\n * @returns {object} Scales\n */\nfunction _getScales(view, domains, ranges) {\n  const { encoding } = view;\n  const scales = {};\n  Object.keys(encoding).forEach((channel) => {\n    // This channel's scale\n    let scale;\n    // Create scales for each channel based on encoding type\n    if (encoding[channel].value) {\n      scale = () => encoding[channel].value;\n    } else {\n      switch (encoding[channel].type) {\n        case 'quantitative':\n          switch (channel) {\n            case 'color':\n              // If a scheme is defined, use that scheme\n              if (encoding[channel]?.scale?.scheme !== undefined) {\n                if (typeof encoding[channel].scale?.scheme === 'string') {\n                  // Scheme is a string\n                  scale = d3\n                    .scaleSequential()\n                    .domain(domains[channel])\n                    .interpolator(d3[encoding[channel].scale?.scheme]);\n                } else {\n                  // Scheme is an array\n                  scale = d3\n                    .scaleLinear()\n                    .domain(domains[channel])\n                    .range(encoding[channel].scale?.scheme);\n                }\n              }\n              break;\n            default:\n              // Default scale\n              scale = d3\n                .scaleLinear()\n                .domain(domains[channel])\n                .range(ranges[channel]);\n              break;\n          }\n          break;\n        case 'temporal':\n        case 'nominal':\n        case 'ordinal':\n        default: {\n          // Set padding inner and outer from config or defaults\n          // Padding outer acts as padding for scalePoint\n          const paddingInner = encoding[channel].scale.paddingInner;\n          const paddingOuter = encoding[channel].scale.paddingOuter;\n\n          switch (channel) {\n            case 'x':\n            case 'y':\n            case 'z':\n              switch (view.mark.type) {\n                case 'bar':\n                  scale = d3\n                    .scaleBand()\n                    .domain(domains[channel])\n                    .paddingInner(paddingInner)\n                    .paddingOuter(paddingOuter)\n                    .range(ranges[channel]);\n                  break;\n                case 'point':\n                  scale = d3\n                    .scalePoint()\n                    .domain(domains[channel])\n                    .padding(paddingOuter)\n                    .range(ranges[channel]);\n                  break;\n                default:\n                  break;\n              }\n              break;\n            case 'color':\n              if (encoding[channel].scale?.scheme !== undefined) {\n                if (typeof encoding[channel].scale?.scheme === 'string') {\n                  // Scheme is a string\n                  scale = d3\n                    .scaleOrdinal()\n                    .domain(domains[channel])\n                    .range(d3[encoding[channel].scale?.scheme]);\n                } else {\n                  // Scheme is an array\n                  scale = d3\n                    .scaleOrdinal()\n                    .domain(domains[channel])\n                    .range(encoding[channel].scale?.scheme);\n                }\n              }\n              break;\n            case 'shape':\n              scale = d3\n                .scaleOrdinal()\n                .domain(domains[channel])\n                .range(encoding[channel].scale.range);\n              break;\n            default:\n              scale = d3\n                .scaleOrdinal()\n                .domain(domains[channel])\n                .range(ranges[channel]);\n              break;\n          }\n          break;\n        }\n      }\n    }\n\n    // Nice the scale\n    if (encoding[channel].scale?.nice === true) {\n      scale = scale.nice();\n    }\n\n    scales[channel] = scale;\n  });\n  return scales;\n}\n\nexport default compileVisConfig;\n","import React from 'react';\nimport { Entity } from 'aframe-react';\nimport * as d3 from 'd3';\n\nconst GradientLegend = ({\n  options,\n  channel,\n  scales,\n  color,\n  legendTitle,\n  posrot\n}) => {\n  if (channel !== 'color') return null;\n\n  const { xpos, ypos, zpos, xrot, yrot, zrot } = posrot;\n\n  const background = (\n    <Entity\n      primitive='a-plane'\n      width='0.3'\n      height='0.2'\n      color={options.chartColor}\n      opacity='0.2'\n      position='0 0 0'\n    />\n  );\n\n  let minValue = scales.color.domain()[0];\n  if (color.numberFormat !== undefined)\n    minValue = d3.format(color.numberFormat)(minValue);\n\n  const min = (\n    <Entity\n      primitive='a-text'\n      width='0.5'\n      value={minValue}\n      color={options.chartColor}\n      side='front'\n      anchor='align'\n      align='left'\n      position='-0.125 0.01 0.002'\n    />\n  );\n\n  let maxValue = scales.color.domain()[1];\n  if (color.numberFormat !== undefined)\n    maxValue = d3.format(color.numberFormat)(maxValue);\n\n  const max = (\n    <Entity\n      primitive='a-text'\n      width='0.5'\n      value={maxValue}\n      color={options.chartColor}\n      side='front'\n      anchor='align'\n      align='right'\n      position='0.125 0.01 0.002'\n    />\n  );\n\n  const label = (\n    <Entity\n      primitive='a-text'\n      width='0.5'\n      value={legendTitle}\n      color={options.chartColor}\n      side='front'\n      anchor='align'\n      align='center'\n      position='0 0.06 0.002'\n    />\n  );\n\n  const gradient = [];\n\n  let scheme;\n\n  if (typeof color?.scale?.scheme === 'string') {\n    scheme = d3\n      .scaleSequential()\n      .domain([0, 1])\n      .interpolator(d3[color.scale.scheme]);\n  } else {\n    scheme = d3.scaleLinear().domain([0, 1]).range(color.scale.scheme);\n  }\n\n  for (var i = 0; i < 50; i++) {\n    gradient.push(\n      <Entity\n        key={`gradient${i}`}\n        primitive='a-plane'\n        width='0.005'\n        height='0.05'\n        color={scheme(i / 50)}\n        position={`${-0.12 + 0.005 * i} -0.04 0.001`}\n      />\n    );\n  }\n\n  return (\n    <Entity\n      rotation={{ x: xrot, y: yrot, z: zrot }}\n      position={{ x: xpos, y: ypos, z: zpos }}\n      className='legend'>\n      {background}\n      {label}\n      {min}\n      {max}\n      {gradient}\n    </Entity>\n  );\n};\n\nexport default GradientLegend;\n","import React, { useContext } from 'react';\nimport { Entity } from 'aframe-react';\nimport * as d3 from 'd3';\n\nimport { DispatchContext } from '../../../reducer';\nimport { actionTypes } from '../../../actions';\n\nconst SymbolLegend = ({\n  view,\n  channel,\n  domainMap,\n  customMarks,\n  options,\n  legendTitle,\n  scales,\n  posrot\n}) => {\n  if (view.encoding.color && view.encoding.shape) {\n    if (view.encoding.color.field === view.encoding.shape.field) {\n      if (channel !== 'color') return null;\n    }\n  }\n\n  const dispatch = useContext(DispatchContext);\n  const { xpos, ypos, zpos, xrot, yrot, zrot } = posrot;\n\n  const legendWidth = 0.25;\n  const legendHeight = 0.09 + scales[channel].domain().length * 0.04;\n  const legendYPos = legendHeight / 2 - 0.05;\n\n  const labels = scales[channel].domain().map((v, i) => {\n    let opacity = 1;\n    let isChecked = true;\n    const color = scales.color ? scales.color(v) : d3.schemeCategory10[0];\n    const shape = scales.shape ? scales.shape(v) : view.mark.shape;\n    const topOffset = 0.015 + legendYPos - 0.055;\n    const step = i * -0.04;\n\n    if (\n      domainMap.get(view.encoding[channel].field) &&\n      !domainMap\n        .get(view.encoding[channel].field)\n        .includes(scales[channel].domain()[i])\n    ) {\n      opacity = 0.5;\n      isChecked = false;\n    }\n\n    const checked = (\n      <Entity>\n        <Entity\n          primitive='a-plane'\n          width='0.004'\n          height='0.01'\n          color='#333333'\n          position={{\n            x: -0.0864,\n            y: topOffset - 0.003 + step,\n            z: 0.002\n          }}\n          rotation='0 0 45'\n        />\n        <Entity\n          primitive='a-plane'\n          width='0.004'\n          height='0.02'\n          color='#333333'\n          position={{\n            x: -0.078,\n            y: topOffset + step,\n            z: 0.002\n          }}\n          rotation='0 0 -45'\n        />\n      </Entity>\n    );\n\n    const checkbox = (\n      <Entity>\n        {isChecked ? checked : null}\n        <Entity\n          className='interactive'\n          primitive='a-plane'\n          width='0.025'\n          height='0.025'\n          color='#FFFFFF'\n          opacity='1'\n          position={{\n            x: -0.08,\n            y: topOffset + step,\n            z: 0.001\n          }}\n          events={{\n            mouseenter: (e) => {\n              e.target.setAttribute('opacity', 0.5);\n            },\n            mouseleave: (e) => {\n              e.target.setAttribute('opacity', 1);\n            },\n            click: (e) => {\n              if (e.detail !== 0) {\n                dispatch({\n                  type: actionTypes.FILTER_DATA,\n                  payload: {\n                    value: scales[channel].domain()[i],\n                    field: view.encoding[channel].field,\n                    bound: null,\n                    type: 'legend'\n                  }\n                });\n              }\n            }\n          }}\n        />\n      </Entity>\n    );\n\n    let mark;\n\n    switch (shape) {\n      case 'box': {\n        mark = (\n          <Entity\n            primitive='a-plane'\n            width='0.025'\n            height='0.025'\n            color={color}\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}\n            opacity={opacity}\n          />\n        );\n\n        break;\n      }\n      case 'sphere':\n        mark = (\n          <Entity\n            radius='0.0125'\n            primitive='a-circle'\n            color={color}\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}\n          />\n        );\n        break;\n      case 'cone':\n        mark = (\n          <Entity\n            primitive='a-cone'\n            radius-top='0'\n            radius-bottom='0.01'\n            color={color}\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}\n          />\n        );\n        break;\n      case 'tetrahedron':\n        mark = (\n          <Entity\n            primitive='a-triangle'\n            scale='0.025 0.025 0.025'\n            color={color}\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}\n          />\n        );\n        break;\n      case 'torus':\n        mark = (\n          <Entity\n            primitive='a-torus'\n            radius='0.01'\n            color={color}\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}\n          />\n        );\n        break;\n      case 'cylinder':\n        mark = (\n          <Entity\n            radius={0.01}\n            primitive='a-circle'\n            color={color}\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}\n          />\n        );\n        break;\n      default:\n        mark = (\n          <Entity\n            width='0.025'\n            height='0.025'\n            depth='0.025'\n            position={{\n              x:\n                view.encoding[channel].legend?.filter !== false ? -0.04 : -0.08,\n              y: topOffset + step,\n              z: 0.001\n            }}>\n            {customMarks[view.mark.shape]({\n              width: 0.025,\n              height: 0.025,\n              depth: 0.025,\n              size: 0.025,\n              radius: 0.0125,\n              color\n            })}\n          </Entity>\n        );\n        break;\n    }\n\n    return (\n      <Entity key={`lC${i}`}>\n        {mark}\n        {view.encoding[channel].legend?.filter !== false ? checkbox : null}\n        <Entity\n          primitive='a-text'\n          width='0.5'\n          value={scales[channel].domain()[i]}\n          color={options.chartColor}\n          side='front'\n          anchor='align'\n          align='left'\n          opacity={opacity}\n          position={{\n            x: view.encoding[channel].legend?.filter !== false ? -0.02 : -0.06,\n            y: topOffset + step,\n            z: 0.001\n          }}\n        />\n      </Entity>\n    );\n  });\n\n  return (\n    <Entity\n      primitive='a-plane'\n      width={legendWidth}\n      height={legendHeight}\n      color={options.chartColor}\n      opacity='0.2'\n      rotation={{ x: xrot, y: yrot, z: zrot }}\n      position={{ x: xpos, y: ypos, z: zpos }}>\n      <Entity\n        primitive='a-text'\n        width='0.5'\n        value={`${legendTitle}`}\n        color={options.chartColor}\n        side='front'\n        anchor='align'\n        align='left'\n        position={`-0.09 ${legendYPos + 0.01} 0.001`}\n      />\n      {labels}\n    </Entity>\n  );\n};\n\nexport default SymbolLegend;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\n\nimport { log } from '../../../utils';\n\nimport GradientLegend from './GradientLegend';\nimport SymbolLegend from './SymbolLegend';\n\nconst Legend = (props) => {\n  log.debug('Legend Rendering');\n  const {\n    view,\n    channel,\n    index,\n    options,\n    scales,\n    domainMap,\n    customMarks,\n    rangesMax\n  } = props;\n\n  // Channel encoding\n  const c = view.encoding[channel];\n\n  // Position\n  let xpos = c.legend.x || 0;\n  let ypos = c.legend.y || 0;\n  let zpos = c.legend.z || 0;\n\n  // Rotation\n  const xrot = c.legend.xrot || c.legend.xrotation || 0;\n  const yrot = c.legend.yrot || c.legend.yrotation || 0;\n  const zrot = c.legend.zrot || c.legend.zrotation || 0;\n\n  // Face and orientation\n  const { face, orient } = c.legend;\n\n  // Offsets\n  const xoffsetLeft = 0.2 + (view.encoding?.x?.axis?.titlePadding || 0);\n  const xoffsetRight = 0.2;\n\n  // Face and orient\n  switch (face) {\n    case 'front':\n      zpos += rangesMax.z;\n    // eslint-disable-next-line no-fallthrough\n    case 'back':\n      if (orient === 'bottom-left') {\n        xpos -= xoffsetLeft;\n      }\n      if (orient === 'left') {\n        ypos += rangesMax.y / 2;\n        xpos -= xoffsetLeft;\n      }\n      if (orient === 'top-left') {\n        ypos += rangesMax.y;\n        xpos -= xoffsetLeft;\n      }\n      if (orient === 'top') {\n        ypos += rangesMax.y;\n        xpos += rangesMax.x / 2;\n      }\n      if (orient === 'top-right') {\n        ypos += rangesMax.y;\n        xpos += rangesMax.x + xoffsetRight;\n      }\n      if (orient === 'right') {\n        ypos += rangesMax.y / 2;\n        xpos += rangesMax.x + xoffsetRight;\n      }\n      if (orient === 'bottom-right') {\n        xpos += rangesMax.x + xoffsetRight;\n      }\n      if (orient === 'bottom') {\n        xpos += rangesMax.x / 2;\n      }\n      if (orient === 'middle') {\n        xpos += rangesMax.x / 2;\n        ypos += rangesMax.y / 2;\n      }\n      break;\n    case 'left':\n      break;\n    case 'right':\n      break;\n    default:\n      break;\n  }\n\n  // Pos Rot\n  const posrot = { xpos, ypos, zpos, xrot, yrot, zrot };\n\n  // Title\n  const legendTitle = c.legend?.title || c.field;\n\n  // Return legend type\n  return c.type === 'quantitative' ? (\n    <GradientLegend\n      options={options}\n      scales={scales}\n      color={c}\n      legendTitle={legendTitle}\n      posrot={posrot}\n      channel={channel}\n    />\n  ) : (\n    <SymbolLegend\n      view={view}\n      domainMap={domainMap}\n      customMarks={customMarks}\n      options={options}\n      legendTitle={legendTitle}\n      scales={scales}\n      posrot={posrot}\n      channel={channel}\n    />\n  );\n\n  // return <Entity rotation='0 0 0'>{generateLegend()}</Entity>;\n};\n\nLegend.propTypes = {\n  view: PropTypes.object.isRequired,\n  options: PropTypes.object.isRequired,\n  dataset: PropTypes.array.isRequired,\n  scales: PropTypes.object.isRequired,\n  domainMap: PropTypes.object.isRequired\n};\n\nexport default React.memo(\n  Legend,\n  (prev, next) => prev.domainMap === next.domainMap\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\nimport * as d3 from 'd3';\n\nimport { defaults } from '../../../grammar/defaults';\n\nconst Axis = (props) => {\n  const AxisLine = () => (\n    <Entity\n      opacity={props.opacity}\n      line={{\n        start: props.start,\n        end: props.end,\n        color: props.color\n      }}\n    />\n  );\n\n  return (\n    <Entity position={props.position}>\n      <AxisLine />\n      {props.ticks}\n      {props.tickText}\n      {props.title}\n    </Entity>\n  );\n};\n\nAxis.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  position: PropTypes.string,\n  rotation: PropTypes.string\n};\n\nexport const XAxis = (props) => {\n  const {\n    scales,\n    tickOffset,\n    color,\n    tickValues,\n    rangesMax,\n    numberFormat,\n    title,\n    titlePadding,\n    labels,\n    ticks\n  } = props;\n\n  const axisTicks = () =>\n    tickValues.map((tick, i) => (\n      <Entity\n        key={`xTicks${i}`}\n        line={{\n          start: `${scales.x(tick) + tickOffset} 0 ${rangesMax.z}`,\n          end: `${scales.x(tick) + tickOffset} -0.025 ${rangesMax.z}`,\n          color: color\n        }}\n      />\n    ));\n\n  const axisTickText = () =>\n    tickValues.map((tick, i) => {\n      let value = tick;\n      if (typeof value === 'number' && typeof numberFormat === 'string') {\n        value = d3.format(numberFormat)(tick);\n      }\n\n      return (\n        <Entity\n          key={`xTickText${i}`}\n          text={{\n            width: 0.6,\n            value: value,\n            color: color,\n            side: 'front',\n            anchor: 'align',\n            align: 'right'\n          }}\n          position={`${scales.x(tick) + tickOffset} -0.035 ${rangesMax.z}`}\n          rotation='0 0 90'\n        />\n      );\n    });\n\n  const axisTitle = () => (\n    <Entity\n      text={{\n        width: rangesMax.x,\n        value: title,\n        color: color,\n        side: 'front',\n        anchor: 'align',\n        align: 'center'\n      }}\n      position={`${rangesMax.x / 2} ${\n        titlePadding !== null ? -titlePadding : -0.22\n      } ${rangesMax.z}`}\n      rotation='0 0 0'\n    />\n  );\n\n  const showLabels =\n    labels === false ? labels : defaults.view.encoding.axis.labels;\n\n  const showTicks = ticks === false ? ticks : defaults.view.encoding.axis.ticks;\n\n  return (\n    <Axis\n      {...props}\n      axis='x'\n      start={`0 0 ${rangesMax.z}`}\n      end={`${rangesMax.x} 0 ${rangesMax.z}`}\n      color={color}\n      ticks={showTicks ? axisTicks() : null}\n      tickText={showTicks && showLabels ? axisTickText() : null}\n      title={axisTitle()}\n    />\n  );\n};\n\nexport const YAxis = (props) => {\n  const {\n    scales,\n    tickOffset,\n    color,\n    tickValues,\n    rangesMax,\n    numberFormat,\n    title,\n    titlePadding,\n    labels,\n    ticks\n  } = props;\n\n  const axisTicks = () =>\n    tickValues.map((tick, i) => (\n      <Entity\n        key={`yTicks${i}`}\n        line={{\n          start: `0 ${scales.y(tick) + tickOffset} 0`,\n          end: `-0.025 ${scales.y(tick) + tickOffset} 0`,\n          color: color\n        }}\n      />\n    ));\n\n  const axisTickText = () =>\n    tickValues.map((tick, i) => {\n      let value = tick;\n      if (typeof value === 'number' && typeof numberFormat === 'string') {\n        value = d3.format(numberFormat)(tick);\n      }\n\n      return (\n        <Entity\n          key={`yTickText${i}`}\n          text={{\n            width: 0.6,\n            value: value,\n            color: color,\n            side: 'front',\n            anchor: 'align',\n            align: 'right'\n          }}\n          position={`-0.035 ${scales.y(tick) + tickOffset} 0`}\n          rotation='0 0 0'\n        />\n      );\n    });\n\n  const axisTitle = () => (\n    <Entity\n      text={{\n        width: rangesMax.y,\n        value: title,\n        color: color,\n        side: 'front',\n        anchor: 'align',\n        align: 'center'\n      }}\n      position={`${titlePadding !== null ? -titlePadding : -0.22} ${\n        rangesMax.y / 2\n      } 0`}\n      rotation='0 0 90'\n    />\n  );\n\n  const showLabels =\n    labels === false ? labels : defaults.view.encoding.axis.labels;\n\n  const showTicks = ticks === false ? ticks : defaults.view.encoding.axis.ticks;\n\n  return (\n    <Axis\n      {...props}\n      axis='y'\n      start='0 0 0'\n      end={`0 ${rangesMax.y} 0`}\n      color={color}\n      ticks={showTicks ? axisTicks() : null}\n      tickText={showTicks && showLabels ? axisTickText() : null}\n      title={axisTitle()}\n    />\n  );\n};\n\nexport const ZAxis = (props) => {\n  const {\n    scales,\n    tickOffset,\n    color,\n    tickValues,\n    rangesMax,\n    numberFormat,\n    title,\n    titlePadding,\n    labels,\n    ticks\n  } = props;\n\n  const axisTicks = () =>\n    tickValues.map((tick, i) => (\n      <Entity\n        key={`zTicks${i}`}\n        line={{\n          start: `0 0 ${scales.z(tick) + tickOffset}`,\n          end: `0 -0.025 ${scales.z(tick) + tickOffset}`,\n          color: color\n        }}\n      />\n    ));\n\n  const axisTickText = () =>\n    tickValues.map((tick, i) => {\n      let value = tick;\n      if (typeof value === 'number' && typeof numberFormat === 'string') {\n        value = d3.format(numberFormat)(tick);\n      }\n\n      return (\n        <Entity\n          key={`zTickText${i}`}\n          text={{\n            width: 0.6,\n            value: value,\n            color: color,\n            side: 'front',\n            anchor: 'align',\n            align: 'right'\n          }}\n          position={`0 -0.035 ${scales.z(tick) + tickOffset}`}\n          rotation='0 -90 90'\n        />\n      );\n    });\n\n  const axisTitle = () => (\n    <Entity\n      text={{\n        width: rangesMax.z,\n        value: title,\n        color: color,\n        side: 'front',\n        anchor: 'align',\n        align: 'center'\n      }}\n      position={`0 ${titlePadding !== null ? -titlePadding : -0.22} ${\n        rangesMax.z / 2\n      }`}\n      rotation='0 -90 0'\n    />\n  );\n\n  const showLabels =\n    labels === false ? labels : defaults.view.encoding.axis.labels;\n\n  const showTicks = ticks === false ? ticks : defaults.view.encoding.axis.ticks;\n\n  return (\n    <Axis\n      {...props}\n      axis='z'\n      start='0 0 0'\n      end={`0 0 ${rangesMax.z}`}\n      color={color}\n      ticks={showTicks ? axisTicks() : null}\n      tickText={showTicks && showLabels ? axisTickText() : null}\n      title={axisTitle()}\n    />\n  );\n};\n\nexport const axes = [XAxis, YAxis, ZAxis];\n\nexport default axes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\n\nimport { XAxis, YAxis, ZAxis } from './axes';\n\nimport { log } from '../../../utils';\n\nimport { defaults } from '../../../grammar/defaults';\n\nconst Axes = (props) => {\n  log.debug('Axes Rendering');\n\n  const { view, options, scales, rangesMax } = props;\n\n  const generateTitle = () => {\n    let title;\n    if (view.title) {\n      title = (\n        <Entity\n          text={{\n            width: rangesMax.x,\n            value: view.title,\n            color: options.chartColor,\n            side: 'front',\n            anchor: 'align',\n            align: 'center'\n          }}\n          position={`${rangesMax.x / 2 || 0} ${\n            rangesMax.y ? rangesMax.y + view.titlePadding : view.titlePadding\n          } 0`}\n        />\n      );\n    }\n    return title;\n  };\n\n  const generateAxes = () => {\n    const axes = [];\n\n    ['x', 'y', 'z'].forEach((channel) => {\n      // If this channel is in the view\n      if (view.encoding[channel] && view.encoding[channel]?.axis !== false) {\n        // Set the axis title from encoding axis title or field name\n        let title;\n        if (view.encoding[channel].axis?.title !== undefined) {\n          title = view.encoding[channel].axis.title;\n        } else {\n          title = view.encoding[channel].field;\n        }\n\n        let tickValues;\n        let tickOffset = 0;\n        let tickCount = null;\n\n        // Use scale for ticks for quantitative fields\n        if (view.encoding[channel].type === 'quantitative') {\n          // Tick values from scale\n          tickCount = view.encoding[channel]?.axis?.tickCount || tickCount;\n          if (tickCount !== null) {\n            tickValues = scales[channel].ticks(tickCount);\n          } else {\n            tickValues = scales[channel].ticks();\n          }\n\n          // Use scale domain for ticks for categorical fields\n        } else {\n          tickValues = scales[channel].domain();\n          tickOffset = scales[channel].bandwidth() / 2;\n        }\n\n        // Store each axis\n        // TODO: More orients\n        // TODO: Copy and flip axis label and title 180 degrees for visibility\n        // Faces only currently support:\n        // - x: front, back\n        // - y: front, back\n        // - z : left, right\n\n        let xFace =\n          view.encoding[channel]?.axis?.face ||\n          defaults.view.encoding.axis.face.x;\n\n        xFace = xFace === 'front' ? 0 : -rangesMax.z;\n\n        let yFace =\n          view.encoding[channel]?.axis?.face ||\n          defaults.view.encoding.axis.face.y;\n\n        yFace = yFace === 'front' ? rangesMax.z : 0;\n\n        let zFace =\n          view.encoding[channel]?.axis?.face ||\n          defaults.view.encoding.axis.face.z;\n\n        zFace = zFace === 'left' ? 0 : rangesMax.x;\n\n        switch (channel) {\n          case 'x':\n            axes.push(\n              <XAxis\n                key='xAxis'\n                fieldType={view.encoding[channel].type}\n                numberFormat={view.encoding[channel].numberFormat}\n                tickValues={tickValues}\n                tickOffset={tickOffset}\n                scales={scales}\n                rangesMax={rangesMax}\n                color={options.chartColor}\n                title={title}\n                titlePadding={view.encoding[channel]?.axis?.titlePadding}\n                labels={view.encoding[channel]?.axis?.labels}\n                ticks={view.encoding[channel]?.axis?.ticks}\n                position={`0 0 ${xFace}`}\n              />\n            );\n            break;\n          case 'y':\n            axes.push(\n              <YAxis\n                key='yAxis'\n                fieldType={view.encoding[channel].type}\n                numberFormat={view.encoding[channel].numberFormat}\n                tickValues={tickValues}\n                tickOffset={tickOffset}\n                scales={scales}\n                rangesMax={rangesMax}\n                color={options.chartColor}\n                title={title}\n                titlePadding={view.encoding[channel]?.axis?.titlePadding}\n                labels={view.encoding[channel]?.axis?.labels}\n                ticks={view.encoding[channel]?.axis?.ticks}\n                position={`0 0 ${yFace}`}\n              />\n            );\n            break;\n          case 'z':\n            axes.push(\n              <ZAxis\n                key='zAxis'\n                fieldType={view.encoding[channel].type}\n                numberFormat={view.encoding[channel].numberFormat}\n                tickValues={tickValues}\n                tickOffset={tickOffset}\n                scales={scales}\n                rangesMax={rangesMax}\n                color={options.chartColor}\n                title={title}\n                titlePadding={view.encoding[channel]?.axis?.titlePadding}\n                labels={view.encoding[channel]?.axis?.labels}\n                ticks={view.encoding[channel]?.axis?.ticks}\n                position={`${zFace} 0 0`}\n              />\n            );\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    return axes;\n  };\n\n  return (\n    <Entity>\n      {generateTitle()}\n      {generateAxes()}\n    </Entity>\n  );\n};\n\nAxes.propTypes = {\n  view: PropTypes.object.isRequired,\n  options: PropTypes.object.isRequired,\n  scales: PropTypes.object.isRequired,\n  rangesMax: PropTypes.object.isRequired\n};\n\nexport default React.memo(Axes, (prev, next) => prev.view === next.view);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\n\nimport { log } from '../../../utils';\n\nimport { DispatchContext } from '../../../reducer';\nimport { actionTypes } from '../../../actions';\n\nimport { defaults } from '../../../grammar/defaults';\n\nconst AxisFilters = (props) => {\n  log.debug('Axis Filters Rendering');\n  const dispatch = useContext(DispatchContext);\n\n  const opacity = 1;\n\n  const { view, options, dataset, scales, domainMap, rangesMax } = props;\n\n  // Faces\n  // TODO: Orients\n  // Faces only currently support:\n  // - x: front, back\n  // - y: front, back\n  // - z : left, right\n\n  let xFace;\n  let yFace;\n  let zFace;\n\n  if (view.encoding.x?.axis?.filter === true) {\n    xFace = view.encoding.x?.axis?.face || defaults.view.encoding.axis.face.x;\n    xFace = xFace === 'front' ? 0 : -rangesMax.z;\n  }\n\n  if (view.encoding.y?.axis?.filter === true) {\n    yFace = view.encoding.y?.axis?.face || defaults.view.encoding.axis.face.y;\n    yFace = yFace === 'front' ? rangesMax.z : 0;\n  }\n\n  if (view.encoding.z?.axis?.filter === true) {\n    zFace = view.encoding.z?.axis?.face || defaults.view.encoding.axis.face.z;\n    zFace = zFace === 'left' ? 0 : rangesMax.x;\n  }\n\n  let faces = { xFace, yFace, zFace };\n\n  const XFilter = (view, scales, opacity, domainMap, faces) => (\n    <Entity position={`0 0 ${faces.xFace}`}>\n      <Entity\n        class='interactive'\n        grabbable={{\n          suppressY: true,\n          suppressZ: true\n        }}\n        events={{\n          'grab-end': (e) => {\n            dispatch({\n              type: actionTypes.FILTER_DATA,\n              payload: {\n                value: scales.x.invert(\n                  e.detail.target.getAttribute('position').x\n                ),\n                field: view.encoding.x.field,\n                bound: 0,\n                type: 'axis'\n              }\n            });\n          }\n        }}\n        opacity={opacity}\n        primitive='a-cone'\n        radius-top='0.0'\n        radius-bottom='0.01'\n        height='0.03'\n        color='#FFA493'\n        position={`${scales.x(\n          domainMap.get(view.encoding.x.field)[0]\n        )} -0.015 ${scales.z ? scales.z.range()[1] : 0}`}\n        rotation='0 0 0'\n      />\n      <Entity\n        class='interactive'\n        grabbable={{\n          suppressY: true,\n          suppressZ: true\n        }}\n        events={{\n          'grab-end': (e) => {\n            dispatch({\n              type: actionTypes.FILTER_DATA,\n              payload: {\n                value: scales.x.invert(\n                  e.detail.target.getAttribute('position').x\n                ),\n                field: view.encoding.x.field,\n                bound: 1,\n                type: 'axis'\n              }\n            });\n          }\n        }}\n        opacity={opacity}\n        primitive='a-cone'\n        radius-top='0.0'\n        radius-bottom='0.01'\n        height='0.03'\n        color='#FFA493'\n        position={`${scales.x(\n          domainMap.get(view.encoding.x.field)[1]\n        )} -0.015 ${scales.z ? scales.z.range()[1] : 0}`}\n        rotation='0 0 0'\n      />\n    </Entity>\n  );\n\n  const YFilter = (view, scales, opacity, domainMap, faces) => (\n    <Entity position={`0 0 ${faces.yFace}`}>\n      <Entity\n        class='interactive'\n        grabbable={{\n          suppressX: true,\n          suppressZ: true\n        }}\n        events={{\n          'grab-end': (e) => {\n            dispatch({\n              type: actionTypes.FILTER_DATA,\n              payload: {\n                value: scales.y.invert(\n                  e.detail.target.getAttribute('position').y\n                ),\n                field: view.encoding.y.field,\n                bound: 0,\n                type: 'axis'\n              }\n            });\n          }\n        }}\n        opacity={opacity}\n        primitive='a-cone'\n        radius-top='0.0'\n        radius-bottom='0.01'\n        height='0.03'\n        color='#98FF97'\n        position={`-0.015 ${scales.y(\n          domainMap.get(view.encoding.y.field)[0]\n        )} ${scales.z ? scales.z.range()[0] : 0}`}\n        rotation='0 0 -90'\n      />\n      <Entity\n        class='interactive'\n        grabbable={{\n          suppressX: true,\n          suppressZ: true\n        }}\n        events={{\n          'grab-end': (e) => {\n            dispatch({\n              type: actionTypes.FILTER_DATA,\n              payload: {\n                value: scales.y.invert(\n                  e.detail.target.getAttribute('position').y\n                ),\n                field: view.encoding.y.field,\n                bound: 1,\n                type: 'axis'\n              }\n            });\n          }\n        }}\n        opacity={opacity}\n        primitive='a-cone'\n        radius-top='0.0'\n        radius-bottom='0.01'\n        height='0.03'\n        color='#98FF97'\n        position={`-0.015 ${scales.y(\n          domainMap.get(view.encoding.y.field)[1]\n        )} ${scales.z ? scales.z.range()[0] : 0}`}\n        rotation='0 0 -90'\n      />\n    </Entity>\n  );\n\n  const ZFilter = (view, scales, opacity, domainMap, faces) => (\n    <Entity position={`${faces.zFace} 0 0`}>\n      <Entity\n        class='interactive'\n        grabbable={{\n          suppressX: true,\n          suppressY: true\n        }}\n        events={{\n          'grab-end': (e) => {\n            dispatch({\n              type: actionTypes.FILTER_DATA,\n              payload: {\n                value: scales.z.invert(\n                  e.detail.target.getAttribute('position').z\n                ),\n                field: view.encoding.z.field,\n                bound: 0,\n                type: 'axis'\n              }\n            });\n          }\n        }}\n        opacity={opacity}\n        primitive='a-cone'\n        radius-top='0.0'\n        radius-bottom='0.01'\n        height='0.03'\n        color='#86D7F5'\n        position={`-0.015 0 ${scales.z(\n          domainMap.get(view.encoding.z.field)[0]\n        )}`}\n        rotation='0 0 -90'\n      />\n      <Entity\n        class='interactive'\n        grabbable={{\n          suppressX: true,\n          suppressY: true\n        }}\n        events={{\n          'grab-end': (e) => {\n            dispatch({\n              type: actionTypes.FILTER_DATA,\n              payload: {\n                value: scales.z.invert(\n                  e.detail.target.getAttribute('position').z\n                ),\n                field: view.encoding.z.field,\n                bound: 1,\n                type: 'axis'\n              }\n            });\n          }\n        }}\n        opacity={opacity}\n        primitive='a-cone'\n        radius-top='0.0'\n        radius-bottom='0.01'\n        height='0.03'\n        color='#86D7F5'\n        position={`-0.015 0 ${scales.z(\n          domainMap.get(view.encoding.z.field)[1]\n        )}`}\n        rotation='0 0 -90'\n      />\n    </Entity>\n  );\n\n  const mutualProps = [view, scales, opacity, domainMap, faces];\n\n  return (\n    <Entity>\n      {view.encoding.x?.axis?.filter === true ? XFilter(...mutualProps) : null}\n      {view.encoding.y?.axis?.filter === true ? YFilter(...mutualProps) : null}\n      {view.encoding.z?.axis?.filter === true ? ZFilter(...mutualProps) : null}\n    </Entity>\n  );\n};\n\nAxisFilters.propTypes = {\n  view: PropTypes.object.isRequired,\n  options: PropTypes.object.isRequired,\n  dataset: PropTypes.array.isRequired,\n  scales: PropTypes.object.isRequired,\n  domainMap: PropTypes.object.isRequired\n};\n\nexport default React.memo(\n  AxisFilters,\n  (prev, next) => prev.domainMap === next.domainMap\n);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\nimport * as d3 from 'd3';\nimport isEqual from 'react-fast-compare';\n\nimport { defaults } from '../../../grammar/defaults';\n\nimport { log } from '../../../utils';\n\nimport { DispatchContext } from '../../../reducer';\nimport { actionTypes } from '../../../actions';\n\nconst Marks = (props) => {\n  log.debug('Marks Rendering');\n  const { view, dataset, scales, customMarks } = props;\n\n  const dispatch = useContext(DispatchContext);\n\n  const markType = view.mark.type;\n  const markShape = view.mark.shape;\n\n  // Loop over all rows in the data\n  const marks = dataset.map((row, i) => {\n    const vriaid = `vria-${row.vriaid}`;\n\n    // Set up tooltip\n    let tooltipContent = '';\n    let tooltipHeight = 0.05;\n    const lineHeight = 0.021;\n    if (view.mark.tooltip !== false && view.mark.tooltip !== undefined) {\n      if (view.mark.tooltip.content === 'data') {\n        // Show all data in the dataset\n        Object.keys(row).forEach((el) => {\n          if (el !== 'vriaid') {\n            tooltipContent += `${el}: ${row[el]}\\n`;\n          }\n        });\n        tooltipHeight = Object.keys(row).length * lineHeight;\n      } else if (view.mark.tooltip.content === 'encoding') {\n        // Show just the encodings in this view for this mark\n        // Get all fields in this view\n        const fields = new Set();\n        Object.keys(view.encoding).forEach((channel) => {\n          if (view.encoding[channel].field)\n            fields.add(view.encoding[channel].field);\n        });\n        Object.keys(row).forEach((el) => {\n          if (el !== 'vriaid' && fields.has(el)) {\n            tooltipContent += `${el}: ${row[el]}\\n`;\n          }\n        });\n        tooltipHeight = (fields.size + 1) * lineHeight;\n      } else if (Array.isArray(view.mark.tooltip.content)) {\n        // If tooltip content is an array, get field names\n        Object.keys(row).forEach((el) => {\n          if (el !== 'vriaid' && view.mark.tooltip.content.includes(el)) {\n            tooltipContent += `${el}: ${row[el]}\\n`;\n          }\n        });\n        tooltipHeight = (view.mark.tooltip.content.length + 1) * lineHeight;\n      } else {\n        // Single field name\n        tooltipContent = `${view.mark.tooltip.content}: ${\n          row[view.mark.tooltip.content]\n        }`;\n      }\n    }\n\n    const markEvents = {\n      mouseenter: (e) => {\n        e.target.setAttribute('opacity', 0.5);\n\n        if (view.mark.tooltip !== false && view.mark.tooltip !== undefined) {\n          const tooltip = e.detail.cursorEl.parentEl.querySelector('.tooltip');\n          tooltip.setAttribute(\n            'height',\n            e.target.getAttribute('tooltipHeight')\n          );\n          tooltip.setAttribute('visible', true);\n          tooltip.setAttribute('text', {\n            ...tooltip.getAttribute('text'),\n            value: e.target.getAttribute('tooltipContent')\n          });\n        }\n      },\n      mouseleave: (e) => {\n        e.target.setAttribute(\n          'opacity',\n          e.target.getAttribute('initialOpacity') || 0\n        );\n        if (view.mark.tooltip !== false && view.mark.tooltip !== undefined) {\n          // If there is a single selected mark in the scene, set tooltip, else hide\n          if (\n            document.querySelectorAll('[vria-only-selected-mark]').length !== 0\n          ) {\n            document.querySelectorAll('.tooltip').forEach((el) => {\n              el.setAttribute('text', {\n                value: document\n                  .querySelector('[selected]')\n                  .getAttribute('tooltipContent')\n              });\n            });\n          } else {\n            const tooltip = e.detail.cursorEl.parentEl.querySelector(\n              '.tooltip'\n            );\n            tooltip.setAttribute('visible', false);\n          }\n        }\n        if (\n          e.target.getAttribute('selected') &&\n          e.target.getAttribute('wireframe')\n        ) {\n          e.target.setAttribute('opacity', 1);\n        }\n      },\n      click: (e) => {\n        if (e.detail !== 0) {\n          const showTooltip =\n            view.mark.tooltip !== false && view.mark.tooltip !== undefined;\n\n          dispatch({\n            type: actionTypes.MARK_SELECTED,\n            payload: {\n              id: row.vriaid,\n              vriaid,\n              cursor: showTooltip\n                ? e.detail.cursorEl.parentEl.querySelector('.tooltip')\n                : null,\n              tooltipHeight: showTooltip\n                ? e.target.getAttribute('tooltipHeight')\n                : null,\n              tooltipContent: showTooltip\n                ? e.target.getAttribute('tooltipContent')\n                : null\n            }\n          });\n        }\n      }\n    };\n\n    // The resulting mark to be displayed\n    let mark;\n\n    // Store all attributes of this mark\n    const attributes = {};\n\n    // Loop over every encoding channel\n    Object.keys(view.encoding).forEach((channel) => {\n      // Get the field of that channel\n      const field = view.encoding[channel].field;\n\n      // Get the appropriate scale for this channel\n      const scale = scales[channel];\n\n      // Set property in attributes object\n      attributes[channel] = scale(row[field]);\n    });\n\n    // Defaults\n    if (attributes.opacity === undefined) attributes.opacity = 1;\n    if (attributes.color === undefined)\n      attributes.color = d3.schemeCategory10[0];\n\n    // Which type to render\n    switch (markType) {\n      // Scatter based charts\n      case 'point': {\n        attributes.size = attributes.size || defaults.view.mark.point.size;\n        const radius = attributes.size;\n\n        attributes.width = attributes.width || attributes.size;\n        attributes.height = attributes.height || attributes.size;\n        attributes.depth = attributes.depth || attributes.size;\n\n        // This point's offset in the view\n        if (typeof attributes.xoffset === 'string') {\n          switch (attributes.xoffset) {\n            case 'half': {\n              attributes.x = attributes.x / 2;\n            }\n          }\n        } else if (attributes.xoffset !== undefined) {\n          attributes.x += attributes.xoffset;\n        }\n        if (typeof attributes.yoffset === 'string') {\n          switch (attributes.yoffset) {\n            case 'half': {\n              attributes.y = attributes.y / 2;\n            }\n          }\n        } else if (attributes.yoffset !== undefined) {\n          attributes.y += attributes.yoffset;\n        }\n        if (attributes.z && typeof attributes.zoffset === 'string') {\n          switch (attributes.zoffset) {\n            case 'half': {\n              attributes.z = attributes.z / 2;\n            }\n          }\n        } else if (attributes.zoffset !== undefined) {\n          attributes.z += attributes.zoffset;\n        }\n\n        // This point's position in the view\n        attributes.position = `${attributes.x || 0} ${attributes.y || 0} ${\n          attributes.z || 0\n        }`;\n\n        // This point's rotation in the view\n        attributes.rotation = `${attributes.xrotation || 0} ${\n          attributes.yrotation || 0\n        } ${attributes.zrotation || 0}`;\n\n        // Shape scale\n        const shapeScaleMark = attributes.shape ? attributes.shape : null;\n\n        switch (shapeScaleMark || markShape) {\n          case 'sphere':\n            mark = (\n              <Entity\n                key={i}\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                primitive='a-sphere'\n                className={`interactive vria-mark ${vriaid}`}\n                data-mark={JSON.stringify(row)}\n                radius={radius}\n                segments-height='9'\n                segments-width='18'\n                color={attributes.color}\n                initialColor={attributes.color}\n                position={attributes.position}\n                rotation={attributes.rotation}\n                initialOpacity={attributes.opacity}\n                opacity={attributes.opacity}\n                events={markEvents}\n              />\n            );\n            break;\n          case 'box':\n            mark = (\n              <Entity\n                key={i}\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                primitive='a-box'\n                className={`interactive vria-mark ${vriaid}`}\n                data-mark={JSON.stringify(row)}\n                width={attributes.width || radius}\n                height={attributes.height || radius}\n                depth={attributes.depth || radius}\n                color={attributes.color}\n                initialColor={attributes.color}\n                position={attributes.position}\n                rotation={attributes.rotation}\n                initialOpacity={attributes.opacity}\n                opacity={attributes.opacity}\n                events={markEvents}\n              />\n            );\n            break;\n          case 'cone':\n            mark = (\n              <Entity\n                key={i}\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                primitive='a-cone'\n                className={`interactive vria-mark ${vriaid}`}\n                data-mark={JSON.stringify(row)}\n                height={attributes.length || attributes.height || radius * 2}\n                color={attributes.color}\n                initialColor={attributes.color}\n                position={attributes.position}\n                rotation={attributes.rotation}\n                segments-height='9'\n                segments-radial='18'\n                radius-top='0'\n                radius-bottom={radius}\n                initialOpacity={attributes.opacity}\n                opacity={attributes.opacity}\n                events={markEvents}\n              />\n            );\n            break;\n          case 'tetrahedron':\n            mark = (\n              <Entity\n                key={i}\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                primitive='a-tetrahedron'\n                className={`interactive vria-mark ${vriaid}`}\n                data-mark={JSON.stringify(row)}\n                radius={radius}\n                color={attributes.color}\n                initialColor={attributes.color}\n                position={attributes.position}\n                rotation={attributes.rotation}\n                initialOpacity={attributes.opacity}\n                opacity={attributes.opacity}\n                events={markEvents}\n              />\n            );\n            break;\n          case 'torus':\n            mark = (\n              <Entity\n                key={i}\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                primitive='a-torus'\n                className={`interactive vria-mark ${vriaid}`}\n                data-mark={JSON.stringify(row)}\n                radius={radius}\n                color={attributes.color}\n                initialColor={attributes.color}\n                position={attributes.position}\n                rotation={attributes.rotation}\n                initialOpacity={attributes.opacity}\n                opacity={attributes.opacity}\n                events={markEvents}\n              />\n            );\n            break;\n          case 'cylinder':\n            mark = (\n              <Entity\n                key={i}\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                primitive='a-cylinder'\n                className={`interactive vria-mark ${vriaid}`}\n                data-mark={JSON.stringify(row)}\n                rotation={attributes.rotation}\n                radius={attributes.width / 2 || 0.05}\n                height={attributes.depth !== 0 ? attributes.depth : 0.001}\n                color={attributes.color}\n                initialColor={attributes.color}\n                position={attributes.position}\n                initialOpacity={attributes.opacity}\n                opacity={attributes.opacity}\n                events={markEvents}\n              />\n            );\n            break;\n          // Custom Mark\n          default: {\n            const data = JSON.stringify(row);\n            const key = i;\n            const className = `interactive vria-mark ${vriaid}`;\n            mark = (\n              <Entity\n                tooltipContent={tooltipContent}\n                tooltipHeight={tooltipHeight}\n                wireframe\n                color='white'\n                initialColor='white'\n                primitive='a-box'\n                opacity='0'\n                key={key}\n                className={className}\n                data-mark={data}\n                width={attributes.size}\n                height={attributes.size}\n                depth={attributes.size}\n                rotation={attributes.rotation}\n                position={attributes.position}\n                events={markEvents}>\n                {customMarks[markShape]({ ...attributes, scales, data })}\n              </Entity>\n            );\n            break;\n          }\n        }\n        break;\n      }\n      // Bar based charts\n      case 'bar': {\n        // Data field types\n        const fTypes = {\n          x: view.encoding?.x?.type || null,\n          y: view.encoding?.y?.type || null,\n          z: view.encoding?.z?.type || null\n        };\n\n        // Quantitative field\n        const q = [];\n\n        // Null fields\n        const n = [];\n\n        // Field counts\n        Object.keys(fTypes).forEach((f) => {\n          if (fTypes[f] === 'quantitative') {\n            q.push(f);\n          } else if (fTypes[f] === null) {\n            n.push(f);\n          }\n        });\n\n        // Valid number of quantitative data fields\n        if (q.length === 1) {\n          // Number of null fields determines dimensionality\n          if (n.length === 2) {\n            // 1D chart\n            log.error(\n              'Chart type \"bar\" expects 2 axis encoding channels (x, y and/or z)'\n            );\n          } else if (n.length === 1) {\n            // 2D chart\n          } else {\n            // 3D chart\n          }\n        } else {\n          log.error(\n            'Chart type \"bar\" expects exactly one quantitative data field'\n          );\n        }\n\n        // The quantitative data field/axis\n        const quantField = q[0];\n\n        if (!scales.width && !scales.height && !scales.depth) {\n          // Position and dimensions of bars\n          let xPos = 0;\n          let yPos = 0;\n          let zPos = 0;\n          let width = 0;\n          let height = 0;\n          let depth = 0;\n\n          switch (quantField) {\n            case 'x':\n              xPos = scales.x ? attributes.x / 2 : 0.001;\n              yPos = scales.y ? attributes.y + scales.y.bandwidth() / 2 : 0.001;\n              zPos = scales.z\n                ? attributes.z + scales.z.bandwidth() / 2 || 0\n                : -0.001;\n              width = attributes.x || 0.001;\n              height = scales.y ? scales.y.bandwidth() : 0.001;\n              depth = scales.z ? scales.z.bandwidth() : 0.0001;\n              break;\n            case 'y':\n              xPos = scales.x ? attributes.x + scales.x.bandwidth() / 2 : 0.001;\n              yPos = scales.y ? attributes.y / 2 : 0.001;\n              zPos = scales.z\n                ? attributes.z + scales.z.bandwidth() / 2 || 0\n                : -0.001;\n              width = scales.x ? scales.x.bandwidth() : 0.001;\n              height = attributes.y || 0.001;\n              depth = scales.z ? scales.z.bandwidth() : 0.001;\n              break;\n            case 'z':\n              xPos = scales.x ? attributes.x + scales.x.bandwidth() / 2 : 0.001;\n              yPos = scales.y\n                ? attributes.y + scales.y.bandwidth() / 2 || 0\n                : 0.001;\n              zPos = scales.z ? attributes.z / 2 : -0.001;\n              width = scales.x ? scales.x.bandwidth() : 0.001;\n              height = scales.y ? scales.y.bandwidth() : 0.001;\n              depth = attributes.z || 0.001;\n              break;\n            default:\n              break;\n          }\n\n          attributes.position = `${xPos} ${yPos} ${zPos}`;\n\n          switch (markShape) {\n            case 'box':\n              mark = (\n                <Entity\n                  key={i}\n                  tooltipContent={tooltipContent}\n                  tooltipHeight={tooltipHeight}\n                  position={attributes.position}\n                  primitive='a-box'\n                  className={`interactive vria-mark ${vriaid}`}\n                  data-mark={JSON.stringify(row)}\n                  width={width}\n                  height={height}\n                  depth={depth}\n                  color={attributes.color}\n                  initialColor={attributes.color}\n                  initialOpacity={attributes.opacity}\n                  opacity={attributes.opacity}\n                  events={markEvents}\n                />\n              );\n              break;\n            case 'plane':\n              // TODO: Plane\n              break;\n            case 'cylinder':\n              mark = (\n                <Entity\n                  key={i}\n                  tooltipContent={tooltipContent}\n                  tooltipHeight={tooltipHeight}\n                  primitive='a-cylinder'\n                  className={`interactive vria-mark ${vriaid}`}\n                  data-mark={JSON.stringify(row)}\n                  rotation='0 0 0'\n                  radius={width / 2}\n                  height={height}\n                  color={attributes.color}\n                  initialColor={attributes.color}\n                  position={attributes.position}\n                  initialOpacity={attributes.opacity}\n                  opacity={attributes.opacity}\n                  events={markEvents}\n                />\n              );\n              break;\n            case 'cone':\n              mark = (\n                <Entity\n                  key={i}\n                  tooltipContent={tooltipContent}\n                  tooltipHeight={tooltipHeight}\n                  primitive='a-cone'\n                  className={`interactive vria-mark ${vriaid}`}\n                  data-mark={JSON.stringify(row)}\n                  height={height}\n                  color={attributes.color}\n                  initialColor={attributes.color}\n                  position={attributes.position}\n                  rotation={attributes.rotation}\n                  segments-height='9'\n                  segments-radial='18'\n                  radius-top='0'\n                  radius-bottom={d3.min([\n                    scales.x.bandwidth() / 2,\n                    scales.z.bandwidth() / 2\n                  ])}\n                  initialOpacity={attributes.opacity}\n                  opacity={attributes.opacity}\n                  events={markEvents}\n                />\n              );\n              break;\n            // Custom Mark\n            default: {\n              const data = JSON.stringify(row);\n              const key = i;\n              const className = `interactive vria-mark ${vriaid}`;\n              console.log('custommarks', customMarks);\n              mark = (\n                <Entity\n                  tooltipContent={tooltipContent}\n                  tooltipHeight={tooltipHeight}\n                  wireframe\n                  color='white'\n                  initialColor='white'\n                  primitive='a-box'\n                  opacity='0'\n                  key={key}\n                  className={className}\n                  width={width}\n                  height={height}\n                  depth={depth}\n                  rotation={attributes.rotation}\n                  position={attributes.position}\n                  events={markEvents}>\n                  {customMarks[markShape]({\n                    ...attributes,\n                    scales,\n                    data,\n                    width,\n                    height,\n                    depth\n                  })}\n                </Entity>\n              );\n              break;\n            }\n          }\n        }\n        break;\n      }\n      default:\n        break;\n    }\n    return mark;\n  });\n\n  return <Entity className='marks'>{marks}</Entity>;\n};\n\nMarks.propTypes = {\n  view: PropTypes.object.isRequired,\n  customMarks: PropTypes.object,\n  dataset: PropTypes.array.isRequired,\n  scales: PropTypes.object.isRequired\n};\n\nexport default React.memo(Marks, (prevProps, nextProps) => {\n  return (\n    isEqual(prevProps.view, nextProps.view) &&\n    isEqual(prevProps.parsedDataset, nextProps.parsedDataset)\n  );\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\n\nimport { defaults } from '../../../grammar/defaults';\n\nimport Legend from '../Legend';\nimport Axes from '../Axes';\nimport AxisFilters from '../AxisFilters';\nimport Marks from '../Marks';\n\nconst View = (props) => {\n  const { view, scales, index } = props;\n  const position = `${view.x} ${view.y + defaults.options.userHeight} ${\n    view.z\n  }`;\n  const rotation = `${view.xrotation} ${view.yrotation} ${view.zrotation}`;\n  const { width, height, depth } = view;\n\n  // Range maximums\n  const rangesMax = {\n    x: scales.x ? scales.x.range()[1] : 0,\n    y: scales.y ? scales.y.range()[1] : 0,\n    z: scales.z ? scales.z.range()[1] : 0\n  };\n\n  // Legends\n  const legends = Object.keys(view.encoding)\n    .filter((c) => view.encoding[c].legend)\n    .map((channel, i) => (\n      <Legend\n        key={`v${index}l${i}${channel}`}\n        {...props}\n        index={i}\n        channel={channel}\n        rangesMax={rangesMax}\n      />\n    ));\n\n  const markProps = {\n    view: props.view,\n    customMarks: props.customMarks,\n    dataset: props.dataset,\n    parsedDataset: props.parsedDataset,\n    scales: props.scales,\n    options: props.options\n  };\n\n  return (\n    <Entity\n      className={`vria-view-${index}`}\n      position={position}\n      rotation={rotation}\n      width={width}\n      height={height}\n      depth={depth}>\n      {legends}\n      <Axes {...props} rangesMax={rangesMax} />\n      <AxisFilters {...props} rangesMax={rangesMax} />\n      <Marks {...markProps} />\n    </Entity>\n  );\n};\n\nView.propTypes = {\n  view: PropTypes.object.isRequired,\n  options: PropTypes.object.isRequired,\n  dataset: PropTypes.array.isRequired,\n  parsedDataset: PropTypes.array.isRequired,\n  scales: PropTypes.object.isRequired,\n  domainMap: PropTypes.object.isRequired\n};\n\nexport default View;\n","import React from 'react';\nimport { Entity } from 'aframe-react';\n\n/* global AFRAME */\n\nconst Camera = (props) => {\n  // Desktop\n  const standardCamera = (\n    <Entity\n      primitive='a-camera'\n      wasd-controls-enabled\n      position='0 1.6 0'\n      capture-mouse\n      raycaster='objects: .interactive; far: 5'\n      cursor='rayOrigin: mouse'\n      super-hands={{\n        colliderEvent: 'raycaster-intersection',\n        colliderEventProperty: 'els',\n        colliderEndEvent: 'raycaster-intersection-cleared',\n        colliderEndEventProperty: 'clearedEls'\n      }}>\n      <Entity\n        primitive='a-plane'\n        id='tooltip'\n        className='tooltip'\n        visible='false'\n        position='0 -0.15 -0.4'\n        color='#333'\n        opacity='0.8'\n        width='auto'\n        height='auto'\n        text={{\n          value: 'Tooltip',\n          color: '#FFF',\n          xOffset: -0.18,\n          anchor: 'left',\n          align: 'left',\n          lineHeight: 50,\n          width: 0.4\n        }}\n      />\n    </Entity>\n  );\n\n  // VR\n  const vrCamera = (\n    <Entity\n      primitive='a-camera'\n      wasd-controls-enabled\n      position='0 1.6 0'\n      capture-mouse\n      raycaster='objects: .interactive; far: 5'\n      cursor='rayOrigin: mouse'\n      super-hands={{\n        colliderEvent: 'raycaster-intersection',\n        colliderEventProperty: 'els',\n        colliderEndEvent: 'raycaster-intersection-cleared',\n        colliderEndEventProperty: 'clearedEls'\n      }}\n    />\n  );\n\n  // Mobile camera\n  const mobileCamera = (\n    <Entity\n      primitive='a-camera'\n      wasd-controls-enabled\n      position='0 1.6 0'\n      capture-mouse>\n      <Entity\n        cursor={{\n          fuse: true,\n          fuseTimeout: 1250\n        }}\n        geometry={{\n          primitive: 'ring',\n          radiusInner: 0.01,\n          radiusOuter: 0.015\n        }}\n        material={{\n          color: props.options.baseColor,\n          shader: 'flat'\n        }}\n        fuse='true'\n        fuseTimeout='1250'\n        position='0 0 -0.6'\n        raycaster='objects: .interactive; far: 5;'\n        super-hands={{\n          colliderEvent: 'raycaster-intersection',\n          colliderEventProperty: 'els',\n          colliderEndEvent: 'raycaster-intersection-cleared',\n          colliderEndEventProperty: 'clearedEls'\n        }}\n        animation__fusing='property: scale; startEvents: fusing; easing: easeInCubic; dur: 1250; from: 1 1 1; to: 0.2 0.2 0.2'\n        animation__click='property: scale; startEvents: click; easing: easeInCubic; dur: 100; from: 0.2 0.2 0.2; to: 1 1 1'\n        animation__mouseleave='property: scale; startEvents: mouseleave; easing: easeInCubic; dur: 400; to: 1 1 1'\n      />\n      <Entity\n        primitive='a-plane'\n        id='tooltip'\n        className='tooltip tooltip-mobile'\n        visible='false'\n        position='0 -0.15 -0.4'\n        color='#333'\n        opacity='0.8'\n        width='auto'\n        height='auto'\n        scale='0.5 0.5 0.5'\n        text={{\n          value: 'Tooltip',\n          color: '#FFF',\n          xOffset: -0.18,\n          anchor: 'left',\n          align: 'left',\n          lineHeight: 50,\n          width: 0.4\n        }}\n      />\n    </Entity>\n  );\n\n  // Camera to use\n  let camera;\n\n  if (AFRAME.utils.device.isMobile()) {\n    camera = mobileCamera;\n  } else if (AFRAME.utils.device.checkHeadsetConnected()) {\n    camera = vrCamera;\n  } else {\n    camera = standardCamera;\n  }\n\n  return camera;\n};\n\nexport default React.memo(\n  Camera,\n  (prev, next) => prev.options.baseColor === next.options.baseColor\n);\n","import React from 'react';\nimport { Entity } from 'aframe-react';\n\n/* global AFRAME */\n\nconst Controllers = ({ handedness }) => {\n  if (\n    AFRAME.utils.device.checkHeadsetConnected() &&\n    !AFRAME.utils.device.isMobile() &&\n    handedness !== 'none'\n  ) {\n    return (\n      <>\n        {handedness === 'both' || handedness === 'left' ? (\n          <Entity>\n            <Entity\n              laser-controls='hand: left;model: false'\n              className='controller controller-left'\n              raycaster='showLine: true; far: 2; objects: .interactive'\n              super-hands={{\n                colliderEvent: 'raycaster-intersection',\n                colliderEventProperty: 'els',\n                colliderEndEvent: 'raycaster-intersection-cleared',\n                colliderEndEventProperty: 'clearedEls'\n              }}>\n              <Entity\n                scale='0.5 0.5 0.5'\n                primitive='a-plane'\n                color='#333'\n                opacity='0.8'\n                width='auto'\n                height='auto'\n                text={{\n                  value: 'Tooltip',\n                  color: '#FFF',\n                  xOffset: -0.18,\n                  anchor: 'left',\n                  align: 'left',\n                  lineHeight: 50,\n                  width: 0.4\n                }}\n                className='tooltip tooltip-left'\n                id='tooltip'\n                visible='false'\n                position='0 0.05 -0.2'\n                rotation='-20 0 0'\n              />\n              <Entity\n                primitive='a-box'\n                width='0.01'\n                height='0.01'\n                depth='0.1'\n                color='#EF2D2D'\n              />\n            </Entity>\n          </Entity>\n        ) : null}\n        {handedness === 'both' || handedness === 'right' ? (\n          <Entity>\n            <Entity\n              laser-controls='hand: right; model: false'\n              className='controller controller-right'\n              raycaster='showLine: true; far: 2; objects: .interactive'\n              super-hands={{\n                colliderEvent: 'raycaster-intersection',\n                colliderEventProperty: 'els',\n                colliderEndEvent: 'raycaster-intersection-cleared',\n                colliderEndEventProperty: 'clearedEls'\n              }}>\n              <Entity\n                scale='0.5 0.5 0.5'\n                primitive='a-plane'\n                color='#333'\n                opacity='0.8'\n                width='auto'\n                height='auto'\n                text={{\n                  value: 'Tooltip',\n                  color: '#FFF',\n                  xOffset: -0.18,\n                  anchor: 'left',\n                  align: 'left',\n                  lineHeight: 50,\n                  width: 0.4\n                }}\n                className='tooltip tooltip-right'\n                id='tooltip'\n                visible='false'\n                position='0 0.05 -0.2'\n                rotation='-20 0 0'\n              />\n              <Entity\n                primitive='a-box'\n                width='0.01'\n                height='0.01'\n                depth='0.1'\n                color='#EF2D2D'\n              />\n            </Entity>\n          </Entity>\n        ) : null}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Controllers;\n","/* global AFRAME */\n\nconst setSceneAttributes = (el) => {\n  setTimeout(() => {\n    el.sceneEl.setAttribute('touch-to-click-converter');\n\n    const vrDisplayConnected = AFRAME.utils.device.checkHeadsetConnected();\n\n    if (!vrDisplayConnected) {\n      el.sceneEl.setAttribute('rayOrigin', 'mouse');\n    }\n  }, 0);\n};\n\nexport default setSceneAttributes;\n","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Entity } from 'aframe-react';\n\nimport './lib/super-hands/super-hands';\n\nimport { actionTypes } from './actions';\nimport { reducer, initialState, DispatchContext } from './reducer';\nimport { compileVisConfig } from './grammar';\nimport { log } from './utils';\n\nimport { View } from './components/core';\nimport { Camera, Controllers, setSceneAttributes } from './components/scene';\n\nimport { defaults } from './grammar/defaults';\n\n// Named exports\nexport { default as schema } from './grammar/schema';\nexport { default as validateVisConfig } from './grammar/validateVisConfig';\n\n/**\n * @name VRIA\n * @description A Web-Based Framework for Creating Immersive Analytics Experiences\n */\nconst VRIA = ({\n  config,\n  options,\n  setSelection,\n  onSelection,\n  onConfigParsed,\n  setFilters,\n  onFilter,\n  additionalFilters,\n  customMarks,\n  ...rest\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    onConfigParsed,\n    onSelection,\n    onFilter,\n    additionalFilters,\n    options: {\n      ...defaults.options,\n      ...options\n    }\n  });\n\n  // Set options prop\n  useEffect(() => {\n    dispatch({ type: actionTypes.SET_OPTIONS, payload: options });\n  }, [options]);\n\n  // Set additional filters prop\n  useEffect(() => {\n    dispatch({\n      type: actionTypes.SET_ADDITIONAL_FILTERS,\n      payload: additionalFilters\n    });\n  }, [additionalFilters]);\n\n  // User defined selection prop (used for synchronising selections between clients)\n  useEffect(() => {\n    if (\n      setSelection !== undefined &&\n      setSelection !== null &&\n      typeof setSelection === 'object'\n    ) {\n      dispatch({ type: actionTypes.SET_SELECTION, payload: setSelection });\n    }\n  }, [setSelection]);\n\n  // User defined filter prop (used for synchronising filters between clients)\n  // Can also be used to set filters from custom interaction components\n  useEffect(() => {\n    if (\n      setFilters !== undefined &&\n      setFilters !== null &&\n      typeof setFilters === 'object'\n    ) {\n      dispatch({ type: actionTypes.SET_FILTERS, payload: setFilters });\n    }\n  }, [setFilters]);\n\n  // Selection of marks\n  useEffect(() => {\n    // Trigger selections callback\n    if (typeof state.onSelection === 'function') {\n      state.onSelection(state.selection);\n    }\n  }, [state.selection]);\n\n  // Filtering of marks\n  useEffect(() => {\n    // Trigger filters callback\n    if (typeof state.onFilter === 'function') {\n      state.onFilter(state.domainMap);\n    }\n  }, [state.domainMap]);\n\n  // CDM\n  useEffect(() => {\n    log.mode();\n  }, []);\n\n  // Compile vis-config\n  useEffect(() => {\n    try {\n      compileVisConfig(config, additionalFilters).then((res) => {\n        // Send compiled config back before transforming\n        if (typeof state.onConfigParsed === 'function') {\n          state.onConfigParsed(res);\n        }\n\n        // Add unique ID to processed dataset for VRIA to reference later\n        res.dataset = res.dataset.map((row, i) => {\n          row.vriaid = i;\n          return row;\n        });\n        // Store\n        dispatch({ type: actionTypes.VIS_CONFIG_COMPILED, payload: res });\n        log.debug('compiledConfig', res);\n      });\n    } catch (err) {\n      log.error(err);\n    }\n  }, [config]);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Entity {...rest}>\n        <Entity _ref={setSceneAttributes} />\n        <Camera options={state.options} />\n        <Controllers handedness={state.options.handedness} />\n        {state.filteredDataset\n          ? state.compiledConfig.views.map((view, i) => (\n              <Entity\n                key={`v${i}`}\n                position={rest.position}\n                rotation={rest.rotation}>\n                <View\n                  index={i}\n                  view={view}\n                  options={state.options}\n                  dataset={state.filteredDataset}\n                  parsedDataset={state.parsedDataset}\n                  scales={state.scales[i]}\n                  domainMap={state.domainMap}\n                  selection={state.selection}\n                  customMarks={customMarks}\n                />\n              </Entity>\n            ))\n          : null}\n      </Entity>\n    </DispatchContext.Provider>\n  );\n};\n\nVRIA.propTypes = {\n  config: PropTypes.object.isRequired,\n  options: PropTypes.object,\n  setSelection: PropTypes.object,\n  onSelection: PropTypes.func,\n  onConfigParsed: PropTypes.func,\n  setFilters: PropTypes.object,\n  onFilter: PropTypes.func,\n  additionalFilters: PropTypes.array,\n  customMarks: PropTypes.object\n};\n\nexport default React.memo(VRIA);\n","import { validateVisConfig } from 'vria';\nimport parseJson from 'json-parse-better-errors';\n\nconst runEditorConfig = (state, payload) => {\n  try {\n    const config = parseJson(payload);\n    validateVisConfig(config);\n    return {\n      ...state,\n      editorConfig: JSON.stringify(config, null, 2),\n      builderStatus: {\n        type: 0,\n        message: 'Valid JSON and VRIA JSON Schema'\n      },\n      sceneActive: true,\n      config: JSON.stringify(config, null, 2)\n    };\n  } catch (err) {\n    const message = `${err.message} - See console for further details`;\n    return {\n      ...state,\n      builderStatus: {\n        type: 1,\n        message\n      }\n    };\n  }\n};\n\nexport default runEditorConfig;\n","const clearBuilderStatus = (state, payload) => {\n  return {\n    ...state,\n    builderStatus: null\n  };\n};\n\nexport default clearBuilderStatus;\n","const updateSettings = (state, payload) => {\n  return {\n    ...state,\n    options: {\n      ...state.options,\n      ...payload.options\n    },\n    theme: payload.theme || state.theme,\n    backgroundColor: payload.backgroundColor || state.backgroundColor,\n    environment: payload.environment || state.environment\n  };\n};\n\nexport default updateSettings;\n","// Builder Actions\nconst coreActions = {\n  SET_COMPILED_CONFIG: 'SET_COMPILED_CONFIG'\n};\n\n// Editor Actions\nconst editorActions = {\n  RUN_EDITOR_CONFIG: 'RUN_EDITOR_CONFIG',\n  CLEAR_BUILDER_STATUS: 'CLEAR_BUILDER_STATUS'\n};\n\n// Settings Actions\nconst settingsActions = {\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS'\n};\n\nexport default {\n  ...coreActions,\n  ...editorActions,\n  ...settingsActions\n};\n","import setCompiledConfig from './core/setCompiledConfig';\nimport runEditorConfig from './editor/runEditorConfig';\nimport clearBuilderStatus from './editor/clearBuilderStatus';\nimport updateSettings from './settings/updateSettings';\n\nexport { default as actionTypes } from './actionTypes';\n\nexport default {\n  setCompiledConfig,\n  runEditorConfig,\n  clearBuilderStatus,\n  updateSettings\n};\n","import actions, { actionTypes } from '../actions';\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    // SET_COMPILED_CONFIG\n    case actionTypes.SET_COMPILED_CONFIG:\n      return actions.setCompiledConfig(state, payload);\n    // RUN_EDITOR_CONFIG\n    case actionTypes.RUN_EDITOR_CONFIG:\n      return actions.runEditorConfig(state, payload);\n    // CLEAR_BUILDER_STATUS\n    case actionTypes.CLEAR_BUILDER_STATUS:\n      return actions.clearBuilderStatus(state, payload);\n    // UPDATE_SETTINGS\n    case actionTypes.UPDATE_SETTINGS:\n      return actions.updateSettings(state, payload);\n    default:\n      console.error(`reducer - Unknown action type: ${type}`);\n      break;\n  }\n};\n\nexport default reducer;\n","const defaultConfig = `{\n  \"title\": \"Untitled\"\n}`;\n\nexport default {\n  version: '1.0.0',\n  theme: 'dark',\n  options: {\n    multiSelect: false,\n    selectColor: '#00FF00',\n    chartColor: '#FFFFFF'\n  },\n  backgroundColor: '#101010',\n  environment: null,\n  sceneActive: false,\n  editorConfig: defaultConfig,\n  builderStatus: null,\n  config: defaultConfig,\n  compiledConfig: null\n};\n","import React from 'react';\n\nconst DispatchContext = React.createContext(null);\n\nexport default DispatchContext;\n","export default {\n  dark: {\n    header: {\n      height: '75px',\n      padding: '15px',\n      backgroundColor: '#101010',\n      borderColor: '#2A2A2A',\n      menu: {\n        height: '44px',\n        color: '#FFFFFF',\n        border: '#333333',\n        highlight: '#222222'\n      }\n    },\n    main: {\n      backgroundColor: '#2A2A2A'\n    },\n    logo: {\n      width: '80px',\n      height: '44px',\n      divider: {\n        color: '#303030'\n      },\n      color: '#FFFFFF'\n    },\n    builder: {\n      menu: {\n        height: '40px',\n        activeColor: '#FFFFFF',\n        inactiveColor: '#777777',\n        backgroundColor: '#202020',\n        backgroundColorHover: '#252525',\n        borderShadow: '#151515',\n        borderHighlight: '#2F2F2F'\n      },\n      view: {\n        backgroundColor: 'rgba(26, 26, 26, 0.9)'\n      },\n      status: {\n        height: '30px',\n        backgroundColor: '#202020',\n        borderHighlight: '#2F2F2F',\n        inactiveColor: '#888888',\n        activeColor: '#FFFFFF',\n        success: '#090',\n        error: '#900',\n        warning: '#990',\n        info: '#009'\n      },\n      backgroundColor: '#1A1A1A'\n    }\n  },\n  // TODO - Incomplete:\n  light: {\n    header: {\n      height: '75px',\n      backgroundColor: '#101010',\n      borderColor: '#2F2F2F'\n    },\n    logo: {\n      width: '60px',\n      height: '60px',\n      divider: {\n        color: '#303030'\n      },\n      color: '#FFFFFF'\n    },\n    builder: {\n      menu: {\n        height: '40px',\n        backgroundColor: '#202020',\n        borderColor: '#151515'\n      },\n      view: {\n        backgroundColor: 'rgba(26, 26, 26, 0.9)'\n      },\n      backgroundColor: '#1A1A1A'\n    }\n  }\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Scene, Entity } from 'aframe-react';\nimport 'aframe-environment-component';\n\nimport { DispatchContext } from '../../reducer';\nimport { actionTypes } from '../../actions';\n\nimport VRIA from 'vria';\n\n/* global AFRAME */\n/* global THREE */\n\nAFRAME.registerComponent('deallocate', {\n  remove: function () {\n    THREE.Cache.clear();\n    this.el.renderer.forceContextLoss();\n  }\n});\n\nconst StyledScene = styled(Scene)`\n  height: 100%;\n  width: 100%;\n`;\n\nconst SceneInactive = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: #202020;\n  color: #707070;\n  display: grid;\n  user-select: none;\n\n  span {\n    display: block;\n    padding-top: 35px;\n    margin: auto;\n  }\n\n  &::before {\n    position: absolute;\n    top: calc(50% - 5px);\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #707070;\n    font-family: 'Font Awesome 5 Pro';\n    font-weight: 400;\n    content: '\\f04d';\n  }\n`;\n\nconst AFrameScene = ({\n  config,\n  options,\n  environment,\n  sceneActive,\n  backgroundColor\n}) => {\n  const dispatch = useContext(DispatchContext);\n\n  const onConfigParsed = (e) => {\n    dispatch({\n      type: actionTypes.SET_COMPILED_CONFIG,\n      payload: e.compiledConfig\n    });\n  };\n\n  return (\n    <>\n      {sceneActive ? (\n        <StyledScene\n          id='scene'\n          embedded\n          deallocate\n          background={{ color: backgroundColor }}>\n          <VRIA\n            config={JSON.parse(config)}\n            position='-0.5 -0.5 -1'\n            options={options}\n            onConfigParsed={onConfigParsed}\n          />\n          {environment !== null && environment !== 'none' ? (\n            <Entity\n              environment={{\n                preset: environment,\n                lightPosition: { x: 0, y: 1, z: 0.6 }\n              }}\n            />\n          ) : (\n            <>\n              <Entity light='type: ambient; color: #BBB' />\n              <Entity\n                light='type: directional; color: #FFF; intensity: 0.6'\n                position='-0.5 1 1'\n              />\n            </>\n          )}\n        </StyledScene>\n      ) : (\n        <SceneInactive>\n          <span>Rendering Stopped</span>\n        </SceneInactive>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(AFrameScene);\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  box-sizing: border-box;\n  overflow: auto;\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { VRIALogo } from '../../assets';\n\nconst StyledLogo = styled.div(\n  ({ theme }) => css`\n    height: ${theme.logo.height};\n    width: auto;\n    user-select: none;\n    display: flex;\n    align-items: center;\n  `\n);\n\nconst LogoIcon = styled.div(\n  ({ theme }) => css`\n    width: ${theme.logo.width};\n    height: ${theme.logo.height};\n    background-image: url(${VRIALogo});\n    background-size: 80%;\n    background-position: center center;\n    background-repeat: no-repeat;\n\n    @media (max-width: 480px) {\n      width: calc(${theme.logo.width} / 2);\n    }\n  `\n);\n\nconst LogoText = styled.div(\n  ({ theme }) => css`\n    line-height: 45px;\n    font-weight: 300;\n    height: 45px;\n    border-left: solid 1px ${theme.logo.divider.color};\n    margin-left: 15px;\n    padding-left: 15px;\n    color: ${theme.logo.color};\n\n    @media (max-width: 420px) {\n      span {\n        display: none;\n      }\n    }\n  `\n);\n\nconst LogoVersion = styled.span`\n  background-color: #090;\n  font-weight: bold;\n  padding: 5px;\n  height: 14px;\n  line-height: 14px;\n  color: #fff;\n  margin-left: 15px;\n  font-size: 0.8em;\n  border-radius: 2px;\n`;\n\nconst Logo = ({ version }) => (\n  <StyledLogo>\n    <LogoIcon />\n    <LogoText>\n      VRIA<span> Builder</span>\n    </LogoText>\n    <LogoVersion>{version}</LogoVersion>\n  </StyledLogo>\n);\n\nexport default Logo;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Logo from './Logo';\n\nconst StyledHeader = styled.header(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: ${theme.header.padding};\n    height: ${theme.header.height};\n    background-color: ${theme.header.backgroundColor};\n    border-bottom: solid 1px ${theme.header.borderColor};\n  `\n);\n\nconst Menu = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n  `\n);\n\nconst MenuItem = styled.a(\n  ({ theme }) => css`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    color: ${theme.header.menu.color};\n    text-decoration: none;\n    margin-right: 15px;\n    border: solid 1px ${theme.header.menu.border};\n    padding: 0px 12px;\n    box-sizing: border-box;\n    border-radius: 4px;\n\n    i {\n      margin-right: 8px;\n    }\n\n    &:hover {\n      background-color: ${theme.header.menu.highlight};\n    }\n\n    &:last-child {\n      margin-right: 0px;\n    }\n\n    @media (max-width: 850px) {\n      span {\n        display: none;\n      }\n      i {\n        margin: 0px;\n      }\n    }\n  `\n);\n\nconst Header = ({ version }) => {\n  return (\n    <StyledHeader>\n      <Logo version={version} />\n      <Menu>\n        <MenuItem href='https://github.com/vriajs' target='_blank'>\n          <i className='fab fa-github'></i>\n          <span>VRIA on GitHub</span>\n        </MenuItem>\n        <MenuItem href='https://npmjs.com/vria' target='_blank'>\n          <i className='fab fa-npm'></i>\n          <span>VRIA on NPM</span>\n        </MenuItem>\n        <MenuItem\n          href='https://ieeexplore.ieee.org/document/8954824'\n          target='_blank'>\n          <i className='far fa-file-pdf'></i>\n          <span>VRIA TVCG Paper</span>\n        </MenuItem>\n      </Menu>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled, { css } from 'styled-components';\n\nconst Main = styled.main(\n  ({ theme }) => css`\n    overflow: auto;\n    box-sizing: border-box;\n    height: calc(100% - ${theme.header.height});\n    background-color: ${theme.main.backgroundColor};\n  `\n);\n\nexport default Main;\n","import styled, { css } from 'styled-components';\nimport SplitPane from 'react-split-pane';\n\nconst StyledSplitPane = styled(SplitPane)(\n  ({ theme }) => css`\n    overflow: auto;\n    box-sizing: border-box;\n    height: calc(\n      100% - ${theme.header.height} - ${theme.builder.menu.height}\n    ) !important;\n  `\n);\n\nexport default StyledSplitPane;\n","import styled, { css } from 'styled-components';\n\nconst View = styled.div(\n  ({ theme }) => css`\n    height: calc(100% - ${theme.builder.status.height});\n    overflow: auto;\n  `\n);\n\nexport default View;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport View from './View';\n\nimport docs from '../../../assets/docs.md';\n\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\n\nconst StyledDocs = styled(View)(\n  ({ theme }) => css`\n    height: 100%;\n    color: white;\n    padding: 0px 15px;\n\n    a {\n      color: #fff;\n\n      &:hover {\n        color: #ccc;\n      }\n    }\n\n    ul {\n      padding-left: 30px;\n    }\n\n    td,\n    th {\n      border: solid 1px #ccc;\n      padding: 4px;\n    }\n\n    table {\n      border-collapse: collapse;\n      border: solid 1px #ccc;\n    }\n  `\n);\n\nconst Docs = () => {\n  const [md, setmd] = useState(null);\n\n  fetch(docs)\n    .then((res) => res.text())\n    .then((content) => setmd(content));\n\n  return (\n    <StyledDocs>\n      <ReactMarkdown plugins={[gfm]} children={md} />\n    </StyledDocs>\n  );\n};\n\nexport default Docs;\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport View from './View';\n\nconst StyledBuilder = styled(View)(\n  ({ theme }) => css`\n    color: white;\n    padding: 15px 15px;\n\n    h1 {\n      margin-top: 0px;\n    }\n\n    a {\n      color: #fff;\n\n      &:hover {\n        color: #ccc;\n      }\n    }\n\n    .intro {\n      border-bottom: solid 1px #333;\n    }\n  `\n);\n\nconst DeleteButton = styled.button`\n  border: none;\n  font-size: 0.9em;\n  background: #ff1744;\n  color: white;\n  padding: 6px;\n  cursor: pointer;\n\n  span {\n    font-weight: 600;\n    text-transform: uppercase;\n    margin-left: 6px;\n  }\n`;\n\nconst AddButton = styled.button`\n  border: none;\n  font-size: 0.9em;\n  background: #2196f3;\n  color: white;\n  padding: 6px;\n  margin: 0px 0px 0px 3px;\n  cursor: pointer;\n\n  span {\n    font-weight: 600;\n    text-transform: uppercase;\n    margin-left: 6px;\n  }\n`;\n\nconst StyledViewBuilder = styled.div`\n  border-bottom: solid 1px #404040;\n  padding-bottom: 12px;\n  min-width: 420px;\n  margin-bottom: 12px;\n\n  select {\n    min-width: 125px;\n    padding: 5px;\n    border: none;\n    background: #303030;\n    color: white;\n    font-size: 1em;\n  }\n  input[type='text'] {\n    min-width: 250px;\n    background: #303030;\n    color: white;\n    border: 0;\n    padding: 5px;\n  }\n  input[type='number'] {\n    width: 40px;\n    background: #303030;\n    color: white;\n    border: 0;\n    padding: 5px;\n  }\n  table {\n    margin-bottom: 10px;\n  }\n  thead tr:not(:only-child) {\n    th {\n      height: 0px;\n    }\n  }\n  th {\n    text-align: left;\n    height: 40px;\n  }\n  h2 {\n    margin-bottom: 0;\n  }\n`;\n\nconst ViewHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n\n  h2 {\n    margin-top: 0px;\n  }\n`;\n\nconst ViewBuilder = ({ editorConfigJSON, actions, index, viewArray, view }) => {\n  const encodings = Object.keys(view.encoding);\n  const title = view.title || 'Untitled';\n\n  let mark;\n  if (view.mark !== undefined) {\n    if (typeof view.mark === 'string') {\n      mark = view.mark;\n    } else {\n      if (view?.mark?.type !== undefined) {\n        mark = view.mark.type;\n      }\n    }\n  }\n  const hasMark = mark !== undefined;\n  const viewProps = [\n    'mark',\n    'encoding',\n    'x',\n    'y',\n    'z',\n    'xrot',\n    'yrot',\n    'zrot',\n    'width',\n    'height',\n    'depth'\n  ];\n  const availableChannels = [\n    'x',\n    'y',\n    'z',\n    'xoffset',\n    'yoffset',\n    'zoffset',\n    'width',\n    'height',\n    'depth',\n    'xrot',\n    'yrot',\n    'zrot',\n    'size',\n    'color',\n    'opacity',\n    'length',\n    'shape'\n  ];\n  const pos = ['x', 'y', 'z'];\n  const rot = ['xrot', 'yrot', 'zrot'];\n  const dim = ['width', 'height', 'depth'];\n  const availableTypes = ['quantitative', 'nominal', 'ordinal', 'temporal'];\n  const availableMarkTypes = ['point', 'bar'];\n\n  // Fields available in this view\n  const availableFields = Object.keys(editorConfigJSON.data.values[0]);\n\n  // Remaining channels\n  const remainingChannels = availableChannels.filter(\n    (el) => !Object.keys(view.encoding).includes(el)\n  );\n\n  // Add a channel to the view\n  const addNewChannel = () => {\n    const enc = remainingChannels[0];\n    if (viewArray) {\n      // Config has a views array\n      editorConfigJSON.views[index].encoding = {\n        ...editorConfigJSON.views[index].encoding,\n        [enc]: {}\n      };\n    } else {\n      // No view array\n      editorConfigJSON.encoding = {\n        ...editorConfigJSON.encoding,\n        [enc]: {}\n      };\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Delete view\n  const deleteView = (v, i) => {\n    if (v) {\n      editorConfigJSON.views.splice(i, 1);\n    } else {\n      viewProps.forEach((vp) => {\n        if (editorConfigJSON[vp]) delete editorConfigJSON[vp];\n      });\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Delete channel\n  const deleteChannel = (v, i, c) => {\n    if (v) {\n      delete editorConfigJSON.views[i].encoding[c];\n    } else {\n      delete editorConfigJSON.encoding[c];\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // View title change\n  const onTitleChange = (e) => {\n    e.persist();\n    if (viewArray) {\n      editorConfigJSON.views[index].title = e.target.value;\n    } else {\n      editorConfigJSON.title = e.target.value;\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Mark type change\n  const onMarkTypeChange = (e) => {\n    e.persist();\n    if (viewArray) {\n      if (typeof view.mark === 'string') {\n        editorConfigJSON.views[index].mark = e.target.value;\n      } else {\n        editorConfigJSON.views[index].mark = {\n          ...editorConfigJSON.views[index].mark,\n          type: e.target.value\n        };\n      }\n    } else {\n      if (typeof view.mark === 'string') {\n        editorConfigJSON.mark = e.target.value;\n      } else {\n        editorConfigJSON.mark.type = e.target.value;\n      }\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Channel change\n  const onChannelChange = (e, enc) => {\n    e.persist();\n    if (viewArray) {\n      editorConfigJSON.views[index].encoding[e.target.value] =\n        editorConfigJSON.views[index].encoding[enc];\n      delete editorConfigJSON.views[index].encoding[enc];\n    } else {\n      editorConfigJSON.encoding[e.target.value] =\n        editorConfigJSON.encoding[enc];\n      delete editorConfigJSON.encoding[enc];\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Field change\n  const onFieldChange = (e, enc) => {\n    e.persist();\n    if (viewArray) {\n      editorConfigJSON.views[index].encoding[enc].field = e.target.value;\n    } else {\n      editorConfigJSON.encoding[enc].field = e.target.value;\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Type change\n  const onTypeChange = (e, enc) => {\n    e.persist();\n    if (viewArray) {\n      editorConfigJSON.views[index].encoding[enc].type = e.target.value;\n    } else {\n      editorConfigJSON.encoding[enc].type = e.target.value;\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  // Pos, Rot or Dim change\n  const onPosRotDimChange = (e, v) => {\n    e.persist();\n    if (viewArray) {\n      editorConfigJSON.views[index][v] = parseFloat(e.target.value);\n    } else {\n      editorConfigJSON[v] = parseFloat(e.target.value);\n    }\n    actions.setEditorConfig(JSON.stringify(editorConfigJSON, null, 2));\n  };\n\n  return (\n    <StyledViewBuilder>\n      <ViewHeader>\n        <h2>View {index + 1}</h2>\n        <DeleteButton onClick={() => deleteView(viewArray, index)}>\n          <i className='far fa-trash-alt'></i> <span>Delete View</span>\n        </DeleteButton>\n      </ViewHeader>\n      <table>\n        <thead>\n          <tr>\n            <th>Title</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <input\n                type='text'\n                defaultValue={title}\n                onChange={onTitleChange}></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th>Mark Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <select\n                name='markType'\n                defaultValue={hasMark ? mark : 'Choose Mark'}\n                onChange={onMarkTypeChange}>\n                {!hasMark ? (\n                  <option value='Choose Mark'>Choose Mark</option>\n                ) : null}\n                {availableMarkTypes.map((mt, i) => (\n                  <option value={mt} key={`mt${i}`}>\n                    {mt}\n                  </option>\n                ))}\n              </select>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th colSpan='3'>Position</th>\n            <th colSpan='3'>Rotation</th>\n            <th colSpan='3'>Dimensions</th>\n          </tr>\n          <tr>\n            <th>X</th>\n            <th>Y</th>\n            <th>Z</th>\n            <th>X</th>\n            <th>Y</th>\n            <th>Z</th>\n            <th>Width</th>\n            <th>Height</th>\n            <th>Depth</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {pos.map((p, i) => (\n              <td key={`p${p}${i}`}>\n                <input\n                  type='number'\n                  placeholder='0'\n                  step='0.01'\n                  defaultValue={\n                    viewArray\n                      ? editorConfigJSON.views[index][p] || 0\n                      : editorConfigJSON[p] || 0\n                  }\n                  onChange={(e) => onPosRotDimChange(e, p)}></input>\n              </td>\n            ))}\n            {rot.map((r, i) => (\n              <td key={`r${r}${i}`}>\n                <input\n                  type='number'\n                  placeholder='0'\n                  step='0.01'\n                  defaultValue={\n                    viewArray\n                      ? editorConfigJSON.views[index][r] || 0\n                      : editorConfigJSON[r] || 0\n                  }\n                  onChange={(e) => onPosRotDimChange(e, r)}></input>\n              </td>\n            ))}\n            {dim.map((d, i) => (\n              <td key={`r${d}${i}`}>\n                <input\n                  type='number'\n                  placeholder='0'\n                  step='0.1'\n                  min='0'\n                  defaultValue={\n                    viewArray\n                      ? editorConfigJSON.views[index][d] || 0\n                      : editorConfigJSON[d] || 0\n                  }\n                  onChange={(e) => onPosRotDimChange(e, d)}></input>\n              </td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th>Channel</th>\n            <th>Field Name</th>\n            <th>Data Type</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {encodings.map((enc, i) => (\n            <tr key={`enc${enc}${i}`}>\n              <td>\n                <select\n                  name={`enc${i}ch`}\n                  defaultValue={enc}\n                  onChange={(e) => onChannelChange(e, enc)}>\n                  {availableChannels.map((ch, j) => (\n                    <option\n                      value={ch}\n                      key={`enc${i}ch${j}`}\n                      disabled={!remainingChannels.includes(ch)}>\n                      {ch}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <select\n                  name={`enc${i}fi`}\n                  defaultValue={\n                    view.encoding[enc].field\n                      ? view.encoding[enc].field\n                      : 'Choose Field'\n                  }\n                  onChange={(e) => onFieldChange(e, enc)}>\n                  {!view.encoding[enc].field ? (\n                    <option value='Choose Field'>Choose Field</option>\n                  ) : null}\n                  {availableFields.map((fi, j) => (\n                    <option value={fi} key={`enc${i}fi${j}${fi}`}>\n                      {fi}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <select\n                  name={`enc${i}ty`}\n                  defaultValue={\n                    view.encoding[enc].type\n                      ? view.encoding[enc].type\n                      : 'Choose Type'\n                  }\n                  onChange={(e) => onTypeChange(e, enc)}>\n                  {!view.encoding[enc].type ? (\n                    <option value='Choose Type'>Choose Type</option>\n                  ) : null}\n                  {availableTypes.map((ty, j) => (\n                    <option value={ty} key={`enc${i}ty${j}${ty}`}>\n                      {ty}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                <DeleteButton\n                  onClick={() => deleteChannel(viewArray, index, enc)}>\n                  <i className='far fa-trash-alt'></i>\n                </DeleteButton>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {remainingChannels.length !== 0 ? (\n        <AddButton onClick={addNewChannel}>\n          <i className='far fa-plus'></i>\n          <span>Add Channel Encoding</span>\n        </AddButton>\n      ) : null}\n    </StyledViewBuilder>\n  );\n};\n\nconst DropDownBuilder = ({ editorConfig, actions }) => {\n  // const [hasViewsArray, setHasViewsArray] = useState(false);\n  const c = JSON.parse(editorConfig);\n\n  console.log(c);\n\n  if (c.encoding) {\n    // Single view - Has encoding\n    console.log(c.encoding);\n\n    return (\n      <ViewBuilder\n        editorConfigJSON={c}\n        actions={actions}\n        index={0}\n        viewArray={false}\n        view={{\n          title: c.title,\n          encoding: c.encoding,\n          mark: c.mark\n        }}\n      />\n    );\n  } else if (c.views) {\n    // Multi view - Has views array\n    console.log(c.views);\n    return c.views.map((view, i) => (\n      <ViewBuilder\n        key={`bv${i}`}\n        editorConfigJSON={c}\n        actions={actions}\n        index={i}\n        viewArray={true}\n        view={{\n          title: view.title,\n          encoding: view.encoding,\n          mark: view.mark\n        }}\n      />\n    ));\n  } else {\n    // No encodings or views yet\n    return null;\n  }\n};\n\nconst Builder = ({ editorConfig, actions }) => {\n  const [configHasDataset, setConfigHasDataset] = useState(false);\n\n  useEffect(() => {\n    try {\n      const c = JSON.parse(editorConfig);\n      if (c?.data?.values?.length) {\n        setConfigHasDataset(true);\n      }\n    } catch {}\n  }, [editorConfig]);\n\n  const viewProps = [\n    'mark',\n    'encoding',\n    'x',\n    'y',\n    'z',\n    'xrot',\n    'yrot',\n    'zrot',\n    'width',\n    'height',\n    'depth'\n  ];\n\n  // Add new view\n  const addNewView = () => {\n    const c = JSON.parse(editorConfig);\n    const viewTemplate = { title: 'Untitled', encoding: {} };\n    if (c.views) {\n      // Has view array\n      c.views.push(viewTemplate);\n    } else if (c.encoding) {\n      // Has encoding\n      c.views = [{ title: c.title || 'Untitled' }];\n      viewProps.forEach((v) => {\n        if (c[v]) {\n          c.views[0][v] = c[v];\n          delete c[v];\n        }\n      });\n\n      c.views.push(viewTemplate);\n    } else {\n      // Has neither a view array or encoding\n      c.views = [viewTemplate];\n    }\n    actions.setEditorConfig(JSON.stringify(c, null, 2));\n  };\n\n  return (\n    <StyledBuilder>\n      {configHasDataset ? (\n        <>\n          <DropDownBuilder editorConfig={editorConfig} actions={actions} />\n          <AddButton onClick={addNewView}>\n            <i className='far fa-plus'></i>\n            <span>Create New View</span>\n          </AddButton>\n        </>\n      ) : (\n        <div>\n          <h1>VRIA Builder</h1>\n          <p>\n            First <Link to='/data'>load a dataset</Link>, or{' '}\n            <Link to='/examples'>choose an example</Link> to begin using the\n            builder.\n          </p>\n          <p>\n            Already have a dataset loaded? Your vis-config may contain invalid\n            JSON.\n          </p>\n          <p>\n            To learn about the VRIA grammar, please refer to the{' '}\n            <a href='https://docs.google.com/spreadsheets/d/1WdzG45G8_wPnhOeLuEgZEYGCOWJqBhzJeYFBL7Pbdf0'>\n              VRIA Grammar Definition\n            </a>\n            .\n          </p>\n        </div>\n      )}\n    </StyledBuilder>\n  );\n};\n\nexport default Builder;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport CodeEditor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-json';\n// import 'prismjs/components/prism-clike';\n\nimport View from './View';\n\nconst StyledEditor = styled(View)(\n  ({ theme }) =>\n    css`\n      padding: 10px 0px;\n      box-sizing: border-box;\n      height: auto;\n    `\n);\n\nconst StyledCodeEditor = styled(CodeEditor)(\n  ({ theme }) => css`\n    font-family: 'Fira code', 'Fira Mono', monospace;\n    font-size: 12;\n  `\n);\n\nconst Editor = ({ code, actions }) => {\n  return (\n    <StyledEditor>\n      <StyledCodeEditor\n        value={code}\n        onValueChange={actions.onEditorChange}\n        highlight={(c) =>\n          highlight(c, languages.json)\n            .split('\\n')\n            .map(\n              (line) => `<span class=\"config-editor_line_number\">${line}</span>`\n            )\n            .join('\\n')\n        }\n        padding='10'\n        className='config-editor'\n      />\n    </StyledEditor>\n  );\n};\n\nexport default Editor;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { useDropzone } from 'react-dropzone';\nimport Papa from 'papaparse';\n\nimport View from './View';\n\nconst StyledData = styled(View)(\n  ({ theme }) => css`\n    color: white;\n    padding: 0px 15px;\n\n    .intro {\n      border-bottom: solid 1px #333;\n      padding-bottom: 20px;\n    }\n\n    a {\n      color: #fff;\n\n      &:hover {\n        color: #ccc;\n      }\n    }\n  `\n);\n\nconst InfoContainsDataset = styled.p`\n  border: solid 1px;\n  border-radius: 4px;\n  padding: 10px;\n`;\n\nconst CodeSnippet1 = styled.pre`\n  margin-left: 15px;\n`;\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n    return '#00e676';\n  }\n  if (props.isDragReject) {\n    return '#ff1744';\n  }\n  if (props.isDragActive) {\n    return '#2196f3';\n  }\n  return '#eeeeee';\n};\n\nconst DropArea = styled.div(\n  (props) => css`\n    border: dashed 2px ${getColor(props)};\n    text-align: center;\n    color: ${getColor(props)};\n    cursor: pointer;\n  `\n);\n\nconst isJSON = (str) => {\n  let out;\n  try {\n    out = JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return Array.isArray(out);\n};\n\nfunction FileUploader(props) {\n  const { editorConfig, actions } = props;\n  const [currentFile, setCurrentFile] = useState(null);\n  const [readError, setReadError] = useState(null);\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onabort = () => setReadError('File read was aborted');\n      reader.onerror = () => setReadError('File read has failed');\n      reader.onload = () => setCurrentFile(reader.result);\n      reader.readAsText(file);\n    });\n  }, []);\n  const history = useHistory();\n\n  const {\n    acceptedFiles,\n    fileRejections,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'text/csv, application/json',\n    multiple: false\n  });\n\n  const importDataset = () => {\n    console.log('editorConfig', editorConfig);\n\n    try {\n      let c = JSON.parse(editorConfig);\n      console.log(c);\n\n      if (currentFile !== null) {\n        if (isJSON(currentFile)) {\n          // File is JSON\n          c.data = {\n            values: JSON.parse(currentFile)\n          };\n        } else {\n          // File is CSV\n          c.data = {\n            values: Papa.parse(currentFile, {\n              header: true,\n              dynamicTyping: true,\n              skipEmptyLines: true\n            }).data\n          };\n        }\n        actions.setEditorConfig(JSON.stringify(c, null, 2));\n        history.push('/editor');\n      }\n    } catch {\n      setReadError('Cannot import dataset: Vis-config contains invalid JSON');\n    }\n  };\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {(file.size / 1000).toFixed(2)} KB -{' '}\n      <button onClick={importDataset}>Use Dataset</button>\n    </li>\n  ));\n\n  return (\n    <section className='container'>\n      <DropArea {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag a CSV or JSON file here or click to upload.</p>\n      </DropArea>\n      {files.length !== 0 ? (\n        <aside>\n          <h3>Uploaded file:</h3>\n          <ul>{files}</ul>\n        </aside>\n      ) : null}\n      {fileRejections.length !== 0 ? (\n        <aside>\n          <p>{fileRejections[0].errors[0].message}</p>\n        </aside>\n      ) : null}\n      <div>{readError}</div>\n    </section>\n  );\n}\n\nconst Data = ({ editorConfig, actions }) => {\n  const [configHasDataset, setConfigHasDataset] = useState(false);\n\n  useEffect(() => {\n    try {\n      const c = JSON.parse(editorConfig);\n      if (c?.data?.values?.length) {\n        setConfigHasDataset(true);\n      }\n    } catch {}\n  }, [editorConfig]);\n\n  return (\n    <StyledData>\n      <h1>Load Dataset</h1>\n      <section className='intro'>\n        <p>\n          VRIA accepts tabular data (\n          <a href='https://en.wikipedia.org/wiki/Tidy_data'>tidy data</a>)\n          formatted as CSV or JSON.\n        </p>\n        {configHasDataset ? (\n          <InfoContainsDataset>\n            <i className='far fa-info-circle'></i> Your vis-config already\n            contains a dataset, are you sure you want to update it?\n          </InfoContainsDataset>\n        ) : (\n          <p>\n            Your vis-config does not yet contain a dataset. Upload a new\n            dataset:\n          </p>\n        )}\n        <FileUploader editorConfig={editorConfig} actions={actions} />\n      </section>\n      <h2>Add dataset by hand</h2>\n      <p>\n        Alternatively you can add data by hand. In the VRIA Builder, datasets\n        should be included inline inside the values array:\n      </p>\n      <CodeSnippet1>{`{\\n  \"data\": {\\n    \"values\": []\\n  }\\n}`}</CodeSnippet1>\n    </StyledData>\n  );\n};\n\nexport default Data;\n","import React, { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport View from './View';\n\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { DispatchContext } from '../../../reducer';\nimport { actionTypes } from '../../../actions';\n\nconst StyledSettings = styled(View)(\n  ({ theme }) => css`\n    color: white;\n    padding: 0px 15px;\n\n    select {\n      min-width: 125px;\n      padding: 5px;\n      border: none;\n      background: #303030;\n      color: white;\n      font-size: 1em;\n    }\n    input[type='color'] {\n      background: #303030;\n      border: 0;\n    }\n  `\n);\n\nconst availableEnvironments = [\n  'none',\n  'default',\n  'contact',\n  'egypt',\n  'checkerboard',\n  'forest',\n  'goaland',\n  'yavapai',\n  'goldmine',\n  'threetowers',\n  'poison',\n  'arches',\n  'tron',\n  'japan',\n  'dream',\n  'volcano',\n  'starry',\n  'osiris'\n];\n\nconst Settings = ({ settings }) => {\n  const dispatch = useContext(DispatchContext);\n\n  const updateSettings = useDebouncedCallback((newSetting) => {\n    dispatch({\n      type: actionTypes.UPDATE_SETTINGS,\n      payload: newSetting\n    });\n  }, 250);\n\n  return (\n    <StyledSettings>\n      <h1>Settings</h1>\n      <p>Change some basic preferences</p>\n      <table>\n        <tbody>\n          <tr>\n            <td>Environment</td>\n            <td>\n              <select\n                name={`env`}\n                defaultValue={settings.environment}\n                onChange={(e) =>\n                  updateSettings.callback({\n                    environment: e.target.value\n                  })\n                }>\n                {availableEnvironments.map((env, i) => (\n                  <option value={env} key={`env${i}${env}`}>\n                    {env}\n                  </option>\n                ))}\n              </select>\n            </td>\n          </tr>\n          <tr>\n            <td>Background Color</td>\n            <td>\n              <input\n                type='color'\n                defaultValue={settings.backgroundColor}\n                onChange={(e) =>\n                  updateSettings.callback({\n                    backgroundColor: e.target.value\n                  })\n                }></input>\n            </td>\n          </tr>\n          <tr>\n            <td>Chart Color</td>\n            <td>\n              <input\n                type='color'\n                defaultValue={settings.options.chartColor}\n                onChange={(e) =>\n                  updateSettings.callback({\n                    options: { chartColor: e.target.value }\n                  })\n                }></input>\n            </td>\n          </tr>\n          <tr>\n            <td>Mark Selection Color</td>\n            <td>\n              <input\n                type='color'\n                defaultValue={settings.options.selectColor}\n                onChange={(e) =>\n                  updateSettings.callback({\n                    options: { selectColor: e.target.value }\n                  })\n                }></input>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </StyledSettings>\n  );\n};\n\nexport default Settings;\n","import cy_precip from './cy_precip.json';\nimport cy_precip_h from './cy_precip_h.json';\nimport cy_precip_tooltip from './cy_precip_tooltip.json';\nimport cy_precip_filters from './cy_precip_filters.json';\nimport iris from './iris.json';\nimport iris_tooltip from './iris_tooltip.json';\nimport iris_filters from './iris_filters.json';\nimport iris_shape from './iris_shape.json';\nimport populations from './populations.json';\nimport populations_h from './populations_h.json';\nimport populations_tooltip from './populations_tooltip.json';\nimport populations_filters from './populations_filters.json';\nimport populations_shape from './populations_shape.json';\nimport iris_3d from './iris_3d.json';\nimport iris_3d_advanced from './iris_3d_advanced.json';\nimport cars_linked from './cars_linked.json';\nimport iris_linked from './iris_linked.json';\n\nexport {\n  cy_precip,\n  cy_precip_h,\n  cy_precip_tooltip,\n  cy_precip_filters,\n  iris,\n  iris_tooltip,\n  iris_filters,\n  iris_shape,\n  populations,\n  populations_h,\n  populations_tooltip,\n  populations_filters,\n  populations_shape,\n  iris_3d,\n  cars_linked,\n  iris_linked\n};\n\nexport default [\n  {\n    title: '2D Bar Charts',\n    description: '2018 Welsh Precipitation Dataset',\n    examples: [\n      {\n        description: 'Basic Vertical',\n        config: JSON.stringify(cy_precip)\n      },\n      {\n        description: 'Basic Horizontal',\n        config: JSON.stringify(cy_precip_h)\n      },\n      {\n        description: 'With tooltips',\n        config: JSON.stringify(cy_precip_tooltip)\n      },\n      {\n        description: 'With filters and tooltips',\n        config: JSON.stringify(cy_precip_filters)\n      }\n    ]\n  },\n  {\n    title: '2D Scatter Plots',\n    description: 'The Iris Flower Dataset',\n    examples: [\n      {\n        description: 'Basic',\n        config: JSON.stringify(iris)\n      },\n      {\n        description: 'With tooltips',\n        config: JSON.stringify(iris_tooltip)\n      },\n      {\n        description: 'With filters and tooltips',\n        config: JSON.stringify(iris_filters)\n      },\n      {\n        description: 'With shapes',\n        config: JSON.stringify(iris_shape)\n      }\n    ]\n  },\n  {\n    title: '3D Bar Charts',\n    description: 'Populations Dataset',\n    examples: [\n      {\n        description: 'Basic Vertical',\n        config: JSON.stringify(populations)\n      },\n      {\n        description: 'Basic Horizontal',\n        config: JSON.stringify(populations_h)\n      },\n      {\n        description: 'With tooltips',\n        config: JSON.stringify(populations_tooltip)\n      },\n      {\n        description: 'With filters and tooltips',\n        config: JSON.stringify(populations_filters)\n      },\n      {\n        description: 'With cylinder mark',\n        config: JSON.stringify(populations_shape)\n      }\n    ]\n  },\n  {\n    title: '3D Scatter Plots',\n    description: 'Examples of 3D scatter plots',\n    examples: [\n      {\n        description: 'Basic',\n        config: JSON.stringify(iris_3d)\n      },\n      {\n        description: 'Advanced',\n        config: JSON.stringify(iris_3d_advanced)\n      }\n    ]\n  },\n  {\n    title: 'Linked Views',\n    description: 'Examples of linked view plots with VRIA',\n    examples: [\n      {\n        description: 'Automobile Dataset',\n        config: JSON.stringify(cars_linked)\n      },\n      {\n        description: 'The Iris Flower Dataset',\n        config: JSON.stringify(iris_linked)\n      }\n    ]\n  }\n];\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport View from './View';\nimport examples from '../../../examples';\n\nconst StyledExamples = styled(View)(\n  ({ theme }) => css`\n    height: 100%;\n    color: white;\n    padding: 0px 15px;\n\n    a {\n      color: white;\n\n      &:hover {\n        color: #ccc;\n      }\n    }\n\n    button {\n      font-size: 1em;\n      padding: 0;\n      border: none;\n      margin: 0;\n      color: white;\n      text-decoration: underline;\n      background: none;\n      cursor: pointer;\n\n      &:hover {\n        color: #ccc;\n      }\n    }\n\n    .intro {\n      border-bottom: solid 1px #333;\n    }\n\n    .key {\n      background-color: #eee;\n      padding: 2px 4px;\n      border-radius: 2px;\n      color: #000;\n      font-size: 0.8em;\n    }\n  `\n);\n\nconst Examples = ({ actions }) => {\n  return (\n    <StyledExamples>\n      <h1>Examples</h1>\n      <section className='intro'>\n        <p>\n          Choose an example from below, then remix the vis-config and experience\n          the immersive visualization in your headset. You can customise the\n          scene further with the <Link to='/builder'>Builder</Link> or{' '}\n          <Link to='/editor'>Editor</Link>.\n        </p>\n        <p>If you don't have an immersive headset to hand:</p>\n        <ul>\n          <li>\n            Use the <span className='key'>W</span>,\n            <span className='key'>A</span>.<span className='key'>S</span>, and{' '}\n            <span className='key'>D</span> keys to move around\n          </li>\n          <li>\n            Use your mouse to rotate the camera and interact with filters and\n            marks.\n          </li>\n        </ul>\n        <p>\n          The examples on this page also work in mobile browsers, however for AR\n          and VR your browser must support{' '}\n          <a href='https://caniuse.com/webxr'>WebXR</a>.\n        </p>\n      </section>\n      <>\n        {examples.map((el, i) => (\n          <section key={`example${i}`}>\n            <h2>{el.title}</h2>\n            <p>{el.description}</p>\n            <ul>\n              {el.examples.map((example, j) => (\n                <li key={`example${j}`}>\n                  <button\n                    onClick={() => {\n                      actions.runEditorConfig(example.config);\n                    }}>\n                    {example.description}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </section>\n        ))}\n      </>\n    </StyledExamples>\n  );\n};\n\nexport default Examples;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport View from './View';\n\nconst StyledDownload = styled(View)(\n  ({ theme }) => css`\n    color: white;\n    padding: 0px 15px;\n\n    .intro {\n      border-bottom: solid 1px #333;\n    }\n\n    div {\n      margin-bottom: 12px;\n\n      &:last-child {\n        margin-bottom: 0px;\n      }\n    }\n  `\n);\n\nconst DownloadButton = styled.a`\n  border: none;\n  font-size: 0.9em;\n  background: #2196f3;\n  color: white;\n  padding: 6px;\n  margin: 0px 0px 0px 3px;\n  cursor: pointer;\n  text-decoration: none;\n  display: inline-block;\n\n  span {\n    font-weight: 600;\n    text-transform: uppercase;\n    margin-left: 6px;\n  }\n`;\n\nconst Download = ({ editorConfig, compiledConfig }) => {\n  return (\n    <StyledDownload>\n      <h1>Download</h1>\n      <section className='intro'>\n        <p>\n          You can download your VRIA vis-config compiled or uncompiled, either\n          will work in a standalone VRIA application.\n        </p>\n        {compiledConfig ? (\n          <>\n            <div>\n              <DownloadButton\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                  JSON.stringify(compiledConfig)\n                )}`}\n                download='vria-builder-vis-config-compiled.json'>\n                <i className='far fa-download'></i>\n                <span>Download Compiled Vis-Config</span>\n              </DownloadButton>\n            </div>\n            <div>\n              <DownloadButton\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                  editorConfig\n                )}`}\n                download='vria-builder-vis-config-uncompiled.json'>\n                <i className='far fa-download'></i>\n                <span>Download Uncompiled Vis-config</span>\n              </DownloadButton>\n            </div>\n          </>\n        ) : (\n          <p>No valid vis-configs are available to download.</p>\n        )}\n      </section>\n      <h2>Going Further</h2>\n      <p>\n        If you would like to include VRIA in a standalone application, you can\n        do so by following the usage guides in the documentation. The{' '}\n        <code>boilerplate/</code> directory in the VRIA package contains a\n        starting point for new projects.\n      </p>\n    </StyledDownload>\n  );\n};\n\nexport default Download;\n","import View from './View';\nexport { default as Docs } from './Docs';\nexport { default as Builder } from './Builder';\nexport { default as Editor } from './Editor';\nexport { default as Data } from './Data';\nexport { default as Settings } from './Settings';\nexport { default as Examples } from './Examples';\nexport { default as Download } from './Download';\n\nexport default View;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst StyledBuilderMenu = styled.nav(\n  ({ theme }) => css`\n    display: flex;\n    justify-content: space-between;\n    height: ${theme.builder.menu.height};\n    background-color: ${theme.builder.menu.borderShadow};\n    box-sizing: border-box;\n    border-bottom: solid 1px ${theme.builder.menu.borderShadow};\n  `\n);\n\nconst MenuLeft = styled.div`\n  display: flex;\n`;\n\nconst MenuCentre = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  min-width: 0;\n`;\n\nconst MenuRight = styled.div`\n  display: flex;\n`;\n\nconst tooltip = ({ theme, color }) => css`\n  ::after {\n    transition: opacity 0.2s ease-in-out;\n    opacity: 0;\n    pointer-events: none;\n    content: attr(data-tooltip);\n    position: absolute;\n    top: 50px;\n    left: 50%;\n    transform: translateX(-50%);\n    height: 25px;\n    line-height: 25px;\n    color: #eee;\n    white-space: nowrap;\n    font-size: 0.8em;\n    background-color: #101010;\n    border-radius: 2px;\n    padding: 0px 10px;\n    pointer-events: none;\n    z-index: 2;\n  }\n\n  &:hover {\n    background-color: ${color\n      ? color\n      : theme.builder.menu.backgroundColorHover};\n    opacity: ${color ? 0.8 : 1};\n\n    &[data-tooltip]::after {\n      opacity: 1;\n      pointer-events: none;\n      content: attr(data-tooltip);\n      position: absolute;\n      top: 50px;\n      left: 50%;\n      transform: translateX(-50%);\n      height: 25px;\n      line-height: 25px;\n      color: #eee;\n      white-space: nowrap;\n      font-size: 0.8em;\n      background-color: #101010;\n      border-radius: 2px;\n      padding: 0px 10px;\n      pointer-events: none;\n      z-index: 2;\n    }\n  }\n`;\n\nconst LinkButton = styled(Link)(\n  ({ theme, location, to }) => css`\n    position: relative;\n    color: ${location === to\n      ? theme.builder.menu.activeColor\n      : theme.builder.menu.inactiveColor};\n    text-decoration: none;\n    line-height: 40px;\n    height: 40px;\n    text-align: center;\n    display: flex;\n    box-sizing: border-box;\n    background-color: ${location !== to\n      ? theme.builder.menu.backgroundColor\n      : theme.builder.menu.backgroundColorHover};\n    border-right: solid 1px ${theme.builder.menu.borderHighlight};\n    border-bottom: solid 1px ${theme.builder.menu.borderShadow};\n\n    &:not(:first-child) {\n      border-left: solid 1px ${theme.builder.menu.borderShadow};\n    }\n\n    ${tooltip}\n  `\n);\n\nconst ActionButton = styled.a(\n  ({ theme, color }) => css`\n    position: relative;\n    cursor: pointer;\n    color: ${color ? '#FFF' : theme.builder.menu.inactiveColor};\n    text-decoration: none;\n    line-height: 40px;\n    height: 40px;\n    text-align: center;\n    display: flex;\n    box-sizing: border-box;\n    background-color: ${color ? color : theme.builder.menu.backgroundColor};\n    border-right: solid 1px ${theme.builder.menu.borderHighlight};\n    border-bottom: solid 1px ${theme.builder.menu.borderShadow};\n\n    &:not(:first-child) {\n      border-left: solid 1px ${theme.builder.menu.borderShadow};\n    }\n\n    ${tooltip}\n  `\n);\n\nconst ButtonIcon = styled.i(\n  ({ theme }) => css`\n    width: 40px;\n    height: 40px;\n    line-height: 40px;\n    display: block;\n    box-sizing: border-box;\n  `\n);\n\nconst ButtonText = styled.span(\n  ({ theme }) => css`\n    font-weight: 600;\n    font-size: 0.9em;\n    text-transform: uppercase;\n    padding-right: 12px;\n\n    &:only-child {\n      padding-right: 0px;\n    }\n\n    @media (max-width: 556px) {\n      display: none;\n    }\n  `\n);\n\nconst ConfigTitle = styled.div`\n  margin: 6px 16px;\n  border-radius: 4px;\n  height: 28px;\n  width: 100%;\n  background-color: #1b1b1b;\n  line-height: 28px;\n  font-size: 0.8em;\n  padding: 0px 10px;\n  color: #bbbbbb;\n  text-align: center;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst BuilderMenu = ({ running, title, actions }) => {\n  const location = useLocation().pathname;\n\n  return (\n    <StyledBuilderMenu>\n      <MenuLeft>\n        <LinkButton to='/docs' location={location} data-tooltip='Documentation'>\n          <ButtonIcon className='far fa-book' />\n          <ButtonText>Docs</ButtonText>\n        </LinkButton>\n        <LinkButton\n          to='/editor'\n          location={location}\n          data-tooltip='Config Editor'>\n          <ButtonIcon className='far fa-brackets-curly' />\n          <ButtonText>Editor</ButtonText>\n        </LinkButton>\n        <LinkButton\n          to='/builder'\n          location={location}\n          data-tooltip='Drop-Down Builder'>\n          <ButtonIcon className='far fa-cube' />\n          <ButtonText>Builder</ButtonText>\n        </LinkButton>\n      </MenuLeft>\n      <MenuCentre>\n        <ConfigTitle>{title}</ConfigTitle>\n      </MenuCentre>\n      <MenuRight>\n        <LinkButton to='/data' location={location} data-tooltip='Dataset'>\n          <ButtonIcon className='far fa-file-chart-line' />\n        </LinkButton>\n        <LinkButton to='/settings' location={location} data-tooltip='Settings'>\n          <ButtonIcon className='far fa-cog' />\n        </LinkButton>\n        <LinkButton to='/examples' location={location} data-tooltip='Examples'>\n          <ButtonIcon className='far fa-images' />\n        </LinkButton>\n        <LinkButton to='/download' location={location} data-tooltip='Download'>\n          <ButtonIcon className='far fa-download' />\n        </LinkButton>\n        {/* <ActionButton\n          color={running ? '#900' : '#090'}\n          onClick={() => actions.runEditorConfig()}>\n          {running ? (\n            <>\n              <ButtonIcon className='far fa-stop' />\n              <ButtonText>Stop</ButtonText>\n            </>\n          ) : (\n            <>\n              <ButtonIcon className='far fa-play' />\n              <ButtonText>Run</ButtonText>\n            </>\n          )}\n        </ActionButton> */}\n        <ActionButton color='#090' onClick={() => actions.runEditorConfig()}>\n          <ButtonIcon className='far fa-play' />\n          <ButtonText>Run</ButtonText>\n        </ActionButton>\n      </MenuRight>\n    </StyledBuilderMenu>\n  );\n};\n\nexport default BuilderMenu;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst StyledBuilderStatus = styled.footer(\n  ({ theme, statusType }) => css`\n    height: ${theme.builder.status.height};\n    line-height: ${theme.builder.status.height};\n    padding: 0px 6px;\n    background-color: ${statusType\n      ? theme.builder.status[statusType]\n      : theme.builder.status.backgroundColor};\n    border-top: solid 1px ${theme.builder.status.borderHighlight};\n    color: ${statusType\n      ? theme.builder.status.activeColor\n      : theme.builder.status.inactiveColor};\n    font-size: 0.8em;\n    display: flex;\n    justify-content: space-between;\n  `\n);\n\nconst StyledStatusIcon = styled.i(\n  ({ theme }) => css`\n    height: ${theme.builder.status.height};\n    line-height: ${theme.builder.status.height};\n    margin-right: 6px;\n  `\n);\n\nconst StatusClearButton = styled.button`\n  font-size: 0.8em;\n  background: transparent;\n  border: none;\n  color: #fff;\n  height: 30px;\n  line-height: 30px;\n  padding: 0px;\n  margin-right: 6px;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 0px 8px;\n  white-space: nowrap;\n  cursor: pointer;\n\n  i {\n    margin-right: 6px;\n  }\n\n  span {\n    text-transform: uppercase;\n  }\n`;\n\nconst StatusClear = ({ clearBuilderStatus }) => (\n  <StatusClearButton onClick={clearBuilderStatus}>\n    <i className='far fa-times'></i>\n    <span>Clear</span>\n  </StatusClearButton>\n);\n\nconst StatusIcon = ({ iconClass }) => {\n  return <StyledStatusIcon className={iconClass} />;\n};\n\nconst StyledStatusMessage = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1 1 auto;\n`;\n\nconst StatusMessage = ({ message }) => {\n  return <StyledStatusMessage>{message}</StyledStatusMessage>;\n};\n\nconst BuilderStatus = ({ status, actions }) => {\n  const type = status ? status.type : null;\n  const message = status ? status.message : 'Ready';\n\n  let iconClass = null;\n  let statusType = null;\n\n  switch (type) {\n    // Success\n    case 0:\n      iconClass = 'far fa-check-circle';\n      statusType = 'success';\n      break;\n    // Error\n    case 1:\n      iconClass = 'far fa-times-circle';\n      statusType = 'error';\n      break;\n    // Warning\n    case 2:\n      iconClass = 'far fa-exclamation-triangle';\n      statusType = 'warning';\n      break;\n    // Info\n    case 3:\n      iconClass = 'far fa-info-circle';\n      statusType = 'info';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <StyledBuilderStatus statusType={statusType}>\n      <StatusIcon iconClass={iconClass} />\n      <StatusMessage message={message} />\n      {statusType ? (\n        <StatusClear clearBuilderStatus={actions.clearBuilderStatus} />\n      ) : null}\n    </StyledBuilderStatus>\n  );\n};\n\nexport default BuilderStatus;\n","import React, { useState, useEffect, useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { AFrameScene } from '../../components';\nimport { DispatchContext } from '../../reducer';\nimport { actionTypes } from '../../actions';\nimport { SplitPane } from '../../ui';\n\nimport View, {\n  Docs,\n  Editor,\n  Builder,\n  Data,\n  Settings,\n  Examples,\n  Download\n} from './views';\nimport BuilderMenu from './BuilderMenu';\nimport BuilderStatus from './BuilderStatus';\n\nconst StyledBuilderPanel = styled.div(\n  ({ theme }) => css`\n    background-color: ${theme.builder.backgroundColor};\n    height: 100%;\n  `\n);\n\nconst BuilderPanel = ({\n  config,\n  compiledConfig,\n  sceneActive,\n  builderStatus,\n  options,\n  environment,\n  backgroundColor\n}) => {\n  const [editorConfig, setEditorConfig] = useState(config);\n  const [title, setTitle] = useState('Untitled');\n  const dispatch = useContext(DispatchContext);\n\n  useEffect(() => {\n    if (builderStatus?.type === 0) {\n      setTitle(JSON.parse(config).title);\n    }\n  }, [builderStatus, config]);\n\n  // A new config has been received, update editor\n  useEffect(() => {\n    setEditorConfig(config);\n  }, [config]);\n\n  // Editor change callback\n  const onEditorChange = (code) => {\n    setEditorConfig(code);\n  };\n\n  // Run the config in the editor\n  const runEditorConfig = (config = editorConfig) => {\n    dispatch({\n      type: actionTypes.RUN_EDITOR_CONFIG,\n      payload: config\n    });\n  };\n\n  // Clear builder status\n  const clearBuilderStatus = () => {\n    dispatch({\n      type: actionTypes.CLEAR_BUILDER_STATUS\n    });\n  };\n\n  return (\n    <>\n      <BuilderMenu\n        running={sceneActive}\n        title={title}\n        actions={{\n          runEditorConfig\n        }}\n      />\n      <SplitPane\n        minSize='0%'\n        maxSize='100%'\n        onDragFinished={() => window.dispatchEvent(new Event('resize'))}\n        split='vertical'\n        defaultSize='50%'>\n        <StyledBuilderPanel>\n          <View>\n            <Switch>\n              <Route\n                exact\n                path='/'\n                component={() => <Redirect to='/builder' />}\n              />\n              <Route exact path='/docs'>\n                <Docs />\n              </Route>\n              <Route exact path='/editor'>\n                <Editor code={editorConfig} actions={{ onEditorChange }} />\n              </Route>\n              <Route exact path='/builder'>\n                <Builder\n                  editorConfig={editorConfig}\n                  actions={{ setEditorConfig }}\n                />\n              </Route>\n              <Route exact path='/data'>\n                <Data\n                  editorConfig={editorConfig}\n                  actions={{ setEditorConfig }}\n                />\n              </Route>\n              <Route exact path='/settings'>\n                <Settings\n                  settings={{ options, environment, backgroundColor }}\n                />\n              </Route>\n              <Route exact path='/examples'>\n                <Examples actions={{ runEditorConfig }} />\n              </Route>\n              <Route exact path='/download'>\n                <Download\n                  editorConfig={editorConfig}\n                  compiledConfig={compiledConfig}\n                />\n              </Route>\n            </Switch>\n          </View>\n          <BuilderStatus\n            status={builderStatus}\n            actions={{\n              clearBuilderStatus\n            }}\n          />\n        </StyledBuilderPanel>\n        <AFrameScene\n          config={config}\n          options={options}\n          sceneActive={sceneActive}\n          environment={environment}\n          backgroundColor={backgroundColor}\n        />\n      </SplitPane>\n    </>\n  );\n};\n\nexport default BuilderPanel;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    font-family: \"Roboto\", sans-serif;\n  }\n\n  .root {\n    height: 100%;\n  }\n\n  /* Split Pane */\n\n  .Resizer {\n    box-sizing: border-box;\n    background: #2A2A2A;\n    opacity: 1;\n    z-index: 1;\n    background-clip: padding-box;\n    position: relative;\n    -webkit-transition: all 0.5s ease-in-out;\n    transition: all 0.5s ease-in-out;\n  }\n\n  .Resizer::before {\n    position: absolute;\n    z-index: 2;\n    top: 50%;\n    left: -8px;\n    font-family: \"Font Awesome 5 Pro\";\n    color: #505050;\n    font-weight: 300;\n    font-size: 0.7em;\n    content: '\\f053';\n    -webkit-transition: all 0.5s ease-in-out;\n    transition: all 0.5s ease-in-out;\n  }\n\n  .Resizer::after {\n    position: absolute;\n    z-index: 2;\n    top: 50%;\n    left: 3px;\n    font-family: \"Font Awesome 5 Pro\";\n    color: #505050;\n    font-weight: 300;\n    content: '\\f054';\n    font-size: 0.7em;\n    -webkit-transition: all 0.5s ease-in-out;\n    transition: all 0.5s ease-in-out;\n  }\n\n  .Resizer:hover::before {\n    left: -13px;\n    padding-right: 8px;\n  }\n\n  .Resizer:hover::after {\n    ${'' /* left: 8px; */}\n    padding-left: 6px;\n  }\n\n  .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-top: 5px solid rgba(255, 255, 255, 0);\n    border-bottom: 5px solid rgba(255, 255, 255, 0);\n    cursor: row-resize;\n    width: 100%;\n  }\n\n  .Resizer.horizontal:hover {\n    border-top: 5px solid #2A2A2A;\n    border-bottom: 5px solid #2A2A2A;\n  }\n\n  .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-left: 5px solid rgba(255, 255, 255, 0);\n    border-right: 5px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n\n  .Resizer.vertical:hover {\n    border-left: 5px solid #2A2A2A;\n    border-right: 5px solid #2A2A2A;\n  }\n\n  /* Syntax Highlighting */\n\n  .config-editor {\n    padding-left: 3em !important;\n    font-size: 12px;\n    font-variant-ligatures: common-ligatures;\n    border-radius: 3px;\n    counter-reset: line;\n    color: #BBB;\n    caret-color: #FFF;\n    height: 100%;\n  }\n\n  .config-editor_line_number:before {\n    position: absolute;\n    right: 100%;\n    margin-right: 10px;\n    text-align: right;\n    opacity: .3;\n    user-select: none;\n    counter-increment: line;\n    content: counter(line);\n  }\n\n  .config-editor textarea {\n    outline: none;\n    height: 100%;\n    padding-left: 3em !important;\n  }\n\n  .config-editor pre {\n    padding-left: 0px !important;\n  }\n\n  /* Red: #ff2000, Blue: #008dc7, Green: #00a100 */\n\n  .config-editor .token.comment,\n  .config-editor .token.prolog,\n  .config-editor .token.doctype,\n  .config-editor .token.cdata {\n    color: slategray;\n  }\n\n  .config-editor .token.punctuation {\n    color: #f8f8f2;\n  }\n\n  .config-editor .namespace {\n    opacity: .7;\n  }\n\n  .config-editor .token.property,\n  .config-editor .token.tag,\n  .config-editor .token.constant,\n  .config-editor .token.symbol,\n  .config-editor .token.deleted {\n    /* color: #f92672; */\n    color: #ff2000;\n  }\n\n  .config-editor .token.boolean,\n  .config-editor .token.number {\n    /* color: #ae81ff; */\n    color: #00a100;\n  }\n\n  .config-editor .token.selector,\n  .config-editor .token.attr-name,\n  .config-editor .token.string,\n  .config-editor .token.char,\n  .config-editor .token.builtin,\n  .config-editor .token.inserted {\n    /* color: #a6e22e; */\n    color: #008dc7;\n  }\n\n  .config-editor .token.operator,\n  .config-editor .token.entity,\n  .config-editor .token.url,\n  .config-editor .language-css .token.string,\n  .config-editor .style .token.string,\n  .config-editor .token.variable {\n    color: #f8f8f2;\n  }\n\n  .config-editor .token.atrule,\n  .config-editor .token.attr-value,\n  .config-editor .token.function,\n  .config-editor .token.class-name {\n    color: #e6db74;\n  }\n\n  .config-editor .token.keyword {\n    color: #66d9ef;\n  }\n\n  .config-editor .token.regex,\n  .config-editor .token.important {\n    color: #fd971f;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { useReducer } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { reducer, initialState, DispatchContext } from './reducer';\n\nimport themes from './themes';\nimport { BuilderPanel, GlobalStyle } from './components';\nimport { Wrapper, Header, Main } from './ui';\n\nconst VRIABuilder = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <ThemeProvider theme={themes[state.theme]}>\n        <GlobalStyle />\n        <Wrapper>\n          <Router basename='/vria'>\n            <Header version={state.version} />\n            <Main>\n              <BuilderPanel\n                config={state.editorConfig}\n                compiledConfig={state.compiledConfig}\n                sceneActive={state.sceneActive}\n                builderStatus={state.builderStatus}\n                options={state.options}\n                environment={state.environment}\n                backgroundColor={state.backgroundColor}\n              />\n            </Main>\n          </Router>\n        </Wrapper>\n      </ThemeProvider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport default VRIABuilder;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport VRIABuilder from './VRIABuilder';\n\nReactDOM.render(<VRIABuilder />, document.getElementById('root'));\n"],"sourceRoot":""}